<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="LedsC" loc="40:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/LedsC.nc">
      <configuration/>
      <wiring>
        <wire loc="46:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/LedsC.nc">
          <from><interface-ref name="Leds" scoped="" ref="0x7f1a286d7020"/></from>
          <to><interface-ref name="Leds" scoped="" ref="0x7f1a28da5020"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
          <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27ea8820"/></from>
          <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27e2b2e0"/></to>
        </wire>
        <wire loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
          <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27ea7c40"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27e29590"/></to>
        </wire>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
          <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27ead680"/></from>
          <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27e2e100"/></to>
        </wire>
        <wire loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
          <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1a27e28460"/></from>
          <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1a28e105a0"/></to>
        </wire>
        <wire loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a27e27020"/></from>
          <to><interface-ref name="SubPacket" scoped="" ref="0x7f1a27ea6bf0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/hakan/github/pillforge/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1a28390c90" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1a28390c90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
      <wiring>
        <wire loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
          <from><interface-ref name="Neighborhood" scoped="" ref="0x7f1a27de31c0"/></from>
          <to><interface-ref name="Neighborhood" scoped="" ref="0x7f1a27de2d60"/></to>
        </wire>
        <wire loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
          <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a27de2710"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/hakan/github/pillforge/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="54:/home/hakan/github/pillforge/tinyos/tos/system/TinySchedulerC.nc">
          <from><interface-ref name="TaskBasic" scoped="" ref="0x7f1a29447320"/></from>
          <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1a290eb020"/></to>
        </wire>
        <wire loc="53:/home/hakan/github/pillforge/tinyos/tos/system/TinySchedulerC.nc">
          <from><interface-ref name="Scheduler" scoped="" ref="0x7f1a293d83a0"/></from>
          <to><interface-ref name="Scheduler" scoped="" ref="0x7f1a290ec080"/></to>
        </wire>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/system/TinySchedulerC.nc">
          <from><interface-ref name="McuSleep" scoped="" ref="0x7f1a290e85d0"/></from>
          <to><interface-ref name="McuSleep" scoped="" ref="0x7f1a292bc810"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PlatformLedsP" loc="45:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc" abstract="">
      <documentation loc="35:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
        <short>&#10; This module provides the general Led interface.</short>
        <long>&#10; This module provides the general Led interface.&#10;&#10; The advantage to doing it this way is we can now create a platforms&#10; that provide more or less than 3 LED's, and the LED's can be pull-up or&#10; pull-down enabled.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430UsciInterruptsA1P" loc="9:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA1P.nc">
      <documentation loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA1P.nc">
        <short>&#10; Define the interrupt handlers for USCI module A1.</short>
        <long>&#10; Define the interrupt handlers for USCI module A1.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRadioAlarmC" loc="1:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioAlarmC.nc">
      <configuration/>
      <wiring>
        <wire loc="13:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioAlarmC.nc">
          <from><interface-ref name="Alarm32khz16" scoped="" ref="0x7f1a2781fce0"/></from>
          <to><interface-ref name="Alarm" scoped="" ref="0x7f1a27817570"/></to>
        </wire>
        <wire loc="12:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioAlarmC.nc">
          <from><interface-ref name="Init" scoped="" ref="0x7f1a2781f2f0"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a27818ca0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PlatformPinsP" loc="42:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/pins/PlatformPinsP.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/pins/PlatformPinsP.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1101DriverLayerC" loc="28:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <configuration/>
      <wiring>
        <wire loc="74:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="RadioCCA" scoped="" ref="0x7f1a27b395c0"/></from>
          <to><interface-ref name="RadioCCA" scoped="" ref="0x7f1a27b147e0"/></to>
        </wire>
        <wire loc="88:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a27b343b0"/></from>
          <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a27b0f610"/></to>
        </wire>
        <wire loc="71:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="RadioState" scoped="" ref="0x7f1a27b3d630"/></from>
          <to><interface-ref name="RadioState" scoped="" ref="0x7f1a27b16660"/></to>
        </wire>
        <wire loc="85:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a27b38e80"/></from>
          <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a27b12120"/></to>
        </wire>
        <wire loc="75:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b39d90"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b13020"/></to>
        </wire>
        <wire loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27b3add0"/></from>
          <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27b14020"/></to>
        </wire>
        <wire loc="98:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="Alarm" scoped="" ref="0x7f1a27b29dd0"/></from>
          <to><interface-ref name="Alarm" scoped="" ref="0x7f1a2799a200"/></to>
        </wire>
        <wire loc="91:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1a27b31940"/></from>
          <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1a27b0cca0"/></to>
        </wire>
        <wire loc="77:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27b2aa40"/></from>
          <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a2799d840"/></to>
        </wire>
        <wire loc="72:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="RadioSend" scoped="" ref="0x7f1a27b3a460"/></from>
          <to><interface-ref name="RadioSend" scoped="" ref="0x7f1a27b155f0"/></to>
        </wire>
        <wire loc="94:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a27b2ee70"/></from>
          <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a27b08200"/></to>
        </wire>
        <wire loc="96:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a27b2a1e0"/></from>
          <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a27b05510"/></to>
        </wire>
        <wire loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a2799c8e0"/></to>
        </wire>
        <wire loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></from>
          <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a27b16020"/></to>
        </wire>
        <wire loc="78:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="Config" scoped="" ref="0x7f1a27afd200"/></from>
          <to><interface-ref name="Config" scoped="" ref="0x7f1a27b24200"/></to>
        </wire>
        <wire loc="80:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="CSN" scoped="" ref="0x7f1a27afcb50"/></from>
          <to><interface-ref name="CSN" scoped="" ref="0x7f1a279a3ce0"/></to>
        </wire>
        <wire loc="81:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="GDO0" scoped="" ref="0x7f1a27afbe30"/></from>
          <to><interface-ref name="GDO0" scoped="" ref="0x7f1a279a1020"/></to>
        </wire>
        <wire loc="82:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="GDO2" scoped="" ref="0x7f1a27af9020"/></from>
          <to><interface-ref name="GDO2" scoped="" ref="0x7f1a279a0340"/></to>
        </wire>
        <wire loc="83:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="RADIO_EN" scoped="" ref="0x7f1a27af8370"/></from>
          <to><interface-ref name="RADIO_EN" scoped="" ref="0x7f1a2799f690"/></to>
        </wire>
        <wire loc="86:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f1a27af6c00"/></from>
          <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f1a27b1f110"/></to>
        </wire>
        <wire loc="89:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f1a27af5830"/></from>
          <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f1a27b1fca0"/></to>
        </wire>
        <wire loc="92:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f1a27af1530"/></from>
          <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f1a27b1e8d0"/></to>
        </wire>
        <wire loc="95:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1a27af05f0"/></from>
          <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1a27b232e0"/></to>
        </wire>
        <wire loc="99:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a27aecd70"/></from>
          <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a27b1d470"/></to>
        </wire>
        <wire loc="101:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="SpiResource" scoped="" ref="0x7f1a27b05c90"/></from>
          <to><interface-ref name="SpiResource" scoped="" ref="0x7f1a279a42c0"/></to>
        </wire>
        <wire loc="102:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="SpiByte" scoped="" ref="0x7f1a27afde60"/></from>
          <to><interface-ref name="SpiByte" scoped="" ref="0x7f1a279a3020"/></to>
        </wire>
        <wire loc="103:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="SpiBlock" scoped="" ref="0x7f1a27afc4c0"/></from>
          <to><interface-ref name="SpiBlock" scoped="" ref="0x7f1a279a3650"/></to>
        </wire>
        <wire loc="105:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="Gdo0Capture" scoped="" ref="0x7f1a27af6020"/></from>
          <to><interface-ref name="Gdo0Capture" scoped="" ref="0x7f1a2799e9d0"/></to>
        </wire>
        <wire loc="107:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="Tasklet" scoped="" ref="0x7f1a27aec280"/></from>
          <to><interface-ref name="Tasklet" scoped="" ref="0x7f1a28eb5020"/></to>
        </wire>
        <wire loc="108:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="BusyWait" scoped="" ref="0x7f1a27aff910"/></from>
          <to><interface-ref name="BusyWait" scoped="" ref="0x7f1a279cbc20"/></to>
        </wire>
        <wire loc="110:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="LocalTime" scoped="" ref="0x7f1a27afe020"/></from>
          <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a2799d840"/></to>
        </wire>
        <wire loc="142:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
          <from><interface-ref name="Leds" scoped="" ref="0x7f1a27aeba60"/></from>
          <to><interface-ref name="Leds" scoped="" ref="0x7f1a286d7020"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="PlatformPinsC" loc="40:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/pins/PlatformPinsC.nc">
      <configuration/>
      <wiring>
        <wire loc="48:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/pins/PlatformPinsC.nc">
          <from><interface-ref name="Init" scoped="" ref="0x7f1a28dad200"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a28daa110"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <from><interface-ref name="Send" scoped="" ref="0x7f1a27e17600"/></from>
          <to><interface-ref name="Send" scoped="" ref="0x7f1a27e0dad0"/></to>
        </wire>
        <wire loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <from><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27e10c00"/></from>
          <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27deb400"/></to>
        </wire>
        <wire loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a27debb60"/></to>
        </wire>
        <wire loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <from><interface-ref name="Neighborhood" scoped="" ref="0x7f1a27de9e80"/></from>
          <to><interface-ref name="Neighborhood" scoped="" ref="0x7f1a27de31c0"/></to>
        </wire>
        <wire loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1a27de8ab0"/></from>
          <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1a27de0b30"/></to>
        </wire>
        <wire loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27dea310"/></from>
          <to><interface-ref name="SubSend" scoped="" ref="0x7f1a27e13590"/></to>
        </wire>
        <wire loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27deac40"/></from>
          <to><interface-ref name="SubReceive" scoped="" ref="0x7f1a27e12020"/></to>
        </wire>
        <wire loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f1a27de9400"/></from>
          <to><interface-ref name="Config" scoped="" ref="0x7f1a27e12880"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="RealMainP" loc="56:/home/hakan/github/pillforge/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/hakan/github/pillforge/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyIoP" loc="8:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/DummyIoP.nc">
      <documentation loc="2:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/DummyIoP.nc">
        <short>&#10; Dummy pin implementation for platforms that don't have a pin/FET switch to &#10; turn the power on and off to the radio.</short>
        <long>&#10; Dummy pin implementation for platforms that don't have a pin/FET switch to &#10; turn the power on and off to the radio.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
          <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a285c1780"/></from>
          <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a285bbcf0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
          <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a285ce710"/></from>
          <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a285bf670"/>
          <arguments>
            <value cst="U:">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
          <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a285cd020"/></from>
          <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a285bc3f0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component>
    <component qname="TransformCounterC" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1a2837a570" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1a2837a570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1a2837ad40" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1a2837ad40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1a28379160" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1a28379160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1a28379940" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1a28379940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1a28379d10" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1a28377540" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1a28377540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f1a2874b0d0" loc="42:/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SoftCaptureP" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc" abstract="">
      <documentation loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc">
        <short>&#10; Emulates GPIO capture functionality using GpioInterrupt and the &#10; standard 32khz counter&#10;&#10; </short>
        <long>&#10; Emulates GPIO capture functionality using GpioInterrupt and the &#10; standard 32khz counter&#10;&#10; @author Phil Buonadonna&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430UsciUartP" loc="81:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc" abstract="" safe="">
      <documentation loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
        <short>&#10; Implement the UART-related interfaces for a MSP430 USCI module&#10; instance.</short>
        <long>&#10; Implement the UART-related interfaces for a MSP430 USCI module&#10; instance.&#10;&#10; Interrupt Management&#10; --------------------&#10;&#10; Upon grant of the USCI in UART mode to a client, interrupts are&#10; turned off.&#10;&#10; On the MSP430, when the TX interrupt is raised the MCU&#10; automatically clears the UCTXIFG bit that indicates that the TXBUF&#10; is available for writing characters.  Rather than maintain local&#10; state managed by cooperation between the TX interrupt handler and&#10; the send code, we leave the TX interrupt disabled and rely on the&#10; UCTXIFG flag to indicate that single-byte transmission is&#10; permitted.  It is better and simpler to let the h/w maintain the&#10; state.&#10;&#10; An exception to this is in support of the UartSerial.send()&#10; function.  The transmit interrupt is enabled when the outgoing&#10; message is provided; subsequent sends are interrupt-driven, and the&#10; interrupt is disabled just prior to transmitting the last character&#10; of the packet.  This leaves the UCTXIFG flag set upon completion of&#10; the transfer.&#10;&#10; The receive interrupt is enabled upon configuration.  It is&#10; controlled using the UartStream functions.  While a buffered&#10; receive operation is active, received characters will be stored and&#10; no notification provided until the full packet has been received.&#10; If no buffered receive operation is active, the receivedByte()&#10; event will be signaled for each received character.  Per byte&#10; signal per each byte interrupt.&#10;&#10; As with the transmit interrupt, MCU execution of the receive&#10; interrupt clears the UCRXIFG flag, making interrupt-driven&#10; reception fundamentally incompatible with the busy-waiting&#10; UartByte.receive() method.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/hakan/github/pillforge/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/hakan/github/pillforge/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="72:/home/hakan/github/pillforge/tinyos/tos/system/MainC.nc">
          <from><interface-ref name="Boot" scoped="" ref="0x7f1a28dc4220"/></from>
          <to><interface-ref name="Boot" scoped="" ref="0x7f1a27f6e620"/></to>
        </wire>
        <wire loc="67:/home/hakan/github/pillforge/tinyos/tos/system/MainC.nc">
          <from><interface-ref name="Scheduler" scoped="" ref="0x7f1a27f6ec90"/></from>
          <to><interface-ref name="Scheduler" scoped="" ref="0x7f1a293d83a0"/></to>
        </wire>
        <wire loc="68:/home/hakan/github/pillforge/tinyos/tos/system/MainC.nc">
          <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1a27f6d740"/></from>
          <to><interface-ref name="PlatformInit" scoped="" ref="0x7f1a28dc66c0"/></to>
        </wire>
        <wire loc="71:/home/hakan/github/pillforge/tinyos/tos/system/MainC.nc">
          <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a27f6de40"/></from>
          <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="CC1101RadioP" loc="29:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="63:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <configuration/>
      <wiring>
        <wire loc="239:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_B1" scoped="" ref="0x7f1a28599a30"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a28493160"/></to>
        </wire>
        <wire loc="182:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_A0" scoped="" ref="0x7f1a285b3020"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a284d5de0"/></to>
        </wire>
        <wire loc="245:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_B2" scoped="" ref="0x7f1a28596020"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a2848b020"/></to>
        </wire>
        <wire loc="298:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control1_A1" scoped="" ref="0x7f1a285828d0"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a2844d020"/></to>
        </wire>
        <wire loc="357:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare2_A2" scoped="" ref="0x7f1a28571580"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a2841e480"/></to>
        </wire>
        <wire loc="308:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture1_A2" scoped="" ref="0x7f1a2857de60"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a28442cb0"/></to>
        </wire>
        <wire loc="224:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer0_B" scoped="" ref="0x7f1a285a0b90"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a284a6c80"/></to>
        </wire>
        <wire loc="358:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture2_A2" scoped="" ref="0x7f1a285703f0"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a2841d160"/></to>
        </wire>
        <wire loc="285:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer1_A" scoped="" ref="0x7f1a28587cf0"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a2845dc80"/></to>
        </wire>
        <wire loc="197:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_A2" scoped="" ref="0x7f1a285a73f0"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a284c1160"/></to>
        </wire>
        <wire loc="204:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_A3" scoped="" ref="0x7f1a285a58a0"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a284b8020"/></to>
        </wire>
        <wire loc="260:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_B4" scoped="" ref="0x7f1a2858e710"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a284782f0"/></to>
        </wire>
        <wire loc="266:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_B5" scoped="" ref="0x7f1a2858cbc0"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a2846f020"/></to>
        </wire>
        <wire loc="292:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare1_A0" scoped="" ref="0x7f1a28584a30"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a28455930"/></to>
        </wire>
        <wire loc="237:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_B1" scoped="" ref="0x7f1a2859b740"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a28495020"/></to>
        </wire>
        <wire loc="356:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control2_A2" scoped="" ref="0x7f1a28572020"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a2841f020"/></to>
        </wire>
        <wire loc="343:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare2_A0" scoped="" ref="0x7f1a28577020"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a28431c50"/></to>
        </wire>
        <wire loc="231:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_B0" scoped="" ref="0x7f1a2859d8a0"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a2849e930"/></to>
        </wire>
        <wire loc="293:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture1_A0" scoped="" ref="0x7f1a285838a0"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a28454610"/></to>
        </wire>
        <wire loc="195:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_A2" scoped="" ref="0x7f1a285a9020"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a284c3020"/></to>
        </wire>
        <wire loc="258:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_B4" scoped="" ref="0x7f1a28590420"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a2847a260"/></to>
        </wire>
        <wire loc="344:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture2_A0" scoped="" ref="0x7f1a28577db0"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a28430930"/></to>
        </wire>
        <wire loc="183:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_A0" scoped="" ref="0x7f1a285ade20"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a284d4a90"/></to>
        </wire>
        <wire loc="246:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_B2" scoped="" ref="0x7f1a28595020"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a2848bcb0"/></to>
        </wire>
        <wire loc="189:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_A1" scoped="" ref="0x7f1a285ab200"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a284cb7b0"/></to>
        </wire>
        <wire loc="252:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_B3" scoped="" ref="0x7f1a28593580"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a28482ac0"/></to>
        </wire>
        <wire loc="306:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control1_A2" scoped="" ref="0x7f1a2857fbf0"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a28444c40"/></to>
        </wire>
        <wire loc="211:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_A4" scoped="" ref="0x7f1a285a2d50"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a284b0ac0"/></to>
        </wire>
        <wire loc="273:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_B6" scoped="" ref="0x7f1a28588020"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a28467ac0"/></to>
        </wire>
        <wire loc="342:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control2_A0" scoped="" ref="0x7f1a2857aa60"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a284328a0"/></to>
        </wire>
        <wire loc="205:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_A3" scoped="" ref="0x7f1a285a4710"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a284b8cb0"/></to>
        </wire>
        <wire loc="267:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_B5" scoped="" ref="0x7f1a2858ba30"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a2846fcb0"/></to>
        </wire>
        <wire loc="299:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare1_A1" scoped="" ref="0x7f1a28581d50"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a2844b480"/></to>
        </wire>
        <wire loc="181:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_A0" scoped="" ref="0x7f1a285b6a60"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a2851b9d0"/></to>
        </wire>
        <wire loc="244:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_B2" scoped="" ref="0x7f1a28598a60"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a2848dc40"/></to>
        </wire>
        <wire loc="232:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_B0" scoped="" ref="0x7f1a2859c710"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a2849d610"/></to>
        </wire>
        <wire loc="350:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare2_A1" scoped="" ref="0x7f1a28574170"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a284287a0"/></to>
        </wire>
        <wire loc="238:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_B1" scoped="" ref="0x7f1a2859abc0"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a28494480"/></to>
        </wire>
        <wire loc="291:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control1_A0" scoped="" ref="0x7f1a285855b0"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a28456500"/></to>
        </wire>
        <wire loc="336:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer2_A" scoped="" ref="0x7f1a2857cd80"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28439260"/></to>
        </wire>
        <wire loc="300:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture1_A1" scoped="" ref="0x7f1a28580b10"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a2844a160"/></to>
        </wire>
        <wire loc="175:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer0_A" scoped="" ref="0x7f1a285b72f0"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28524820"/></to>
        </wire>
        <wire loc="203:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_A3" scoped="" ref="0x7f1a285a6420"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a284bac40"/></to>
        </wire>
        <wire loc="265:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_B5" scoped="" ref="0x7f1a2858d740"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a28471c40"/></to>
        </wire>
        <wire loc="351:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture2_A1" scoped="" ref="0x7f1a28573020"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a28426480"/></to>
        </wire>
        <wire loc="190:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_A1" scoped="" ref="0x7f1a285aa020"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a284ca480"/></to>
        </wire>
        <wire loc="253:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_B3" scoped="" ref="0x7f1a285913f0"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a284817a0"/></to>
        </wire>
        <wire loc="196:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_A2" scoped="" ref="0x7f1a285a8580"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a284c2480"/></to>
        </wire>
        <wire loc="259:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare0_B4" scoped="" ref="0x7f1a2858f8a0"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a28479610"/></to>
        </wire>
        <wire loc="212:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_A4" scoped="" ref="0x7f1a285a1b10"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a284af7a0"/></to>
        </wire>
        <wire loc="274:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Capture0_B6" scoped="" ref="0x7f1a28588db0"/></from>
          <to><interface-ref name="Capture" scoped="" ref="0x7f1a284667a0"/></to>
        </wire>
        <wire loc="230:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_B0" scoped="" ref="0x7f1a2859e420"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a2849f500"/></to>
        </wire>
        <wire loc="349:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control2_A1" scoped="" ref="0x7f1a28576d50"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a284293f0"/></to>
        </wire>
        <wire loc="307:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Compare1_A2" scoped="" ref="0x7f1a2857d0d0"/></from>
          <to><interface-ref name="Compare" scoped="" ref="0x7f1a28442020"/></to>
        </wire>
        <wire loc="188:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_A1" scoped="" ref="0x7f1a285b2d90"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a284cc4c0"/></to>
        </wire>
        <wire loc="251:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_B3" scoped="" ref="0x7f1a28594020"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a28483780"/></to>
        </wire>
        <wire loc="210:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_A4" scoped="" ref="0x7f1a285a38d0"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a284b1780"/></to>
        </wire>
        <wire loc="272:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Control0_B6" scoped="" ref="0x7f1a2858aa60"/></from>
          <to><interface-ref name="Control" scoped="" ref="0x7f1a28468780"/></to>
        </wire>
        <wire loc="176:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1a28522d90"/></from>
          <to><interface-ref name="VectorTimer0_A0" scoped="" ref="0x7f1a2856cda0"/></to>
        </wire>
        <wire loc="177:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1a28520450"/></from>
          <to><interface-ref name="VectorTimer0_A1" scoped="" ref="0x7f1a2856b560"/></to>
        </wire>
        <wire loc="178:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Overflow" scoped="" ref="0x7f1a28522740"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a285220d0"/>
          <arguments>
            <value cst="I:7">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="184:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a284d2930"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28524820"/></to>
        </wire>
        <wire loc="185:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a284d0020"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a285220d0"/>
          <arguments>
            <value cst="I:0">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="191:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a284c92f0"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28524820"/></to>
        </wire>
        <wire loc="192:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a284c8930"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a285220d0"/>
          <arguments>
            <value cst="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="198:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a284bf020"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28524820"/></to>
        </wire>
        <wire loc="199:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a284be7a0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a285220d0"/>
          <arguments>
            <value cst="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="206:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a284b7b40"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28524820"/></to>
        </wire>
        <wire loc="207:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a284b52f0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a285220d0"/>
          <arguments>
            <value cst="I:3">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="213:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a284ae610"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28524820"/></to>
        </wire>
        <wire loc="214:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a284acc50"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a285220d0"/>
          <arguments>
            <value cst="I:4">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="225:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1a284a32f0"/></from>
          <to><interface-ref name="VectorTimer0_B0" scoped="" ref="0x7f1a2856bcc0"/></to>
        </wire>
        <wire loc="226:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1a284a3940"/></from>
          <to><interface-ref name="VectorTimer0_B1" scoped="" ref="0x7f1a2856a480"/></to>
        </wire>
        <wire loc="227:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Overflow" scoped="" ref="0x7f1a284a4c20"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a284a45b0"/>
          <arguments>
            <value cst="I:7">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="233:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a2849c480"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a284a6c80"/></to>
        </wire>
        <wire loc="234:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a2849aac0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a284a45b0"/>
          <arguments>
            <value cst="I:0">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="240:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a28492020"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a284a6c80"/></to>
        </wire>
        <wire loc="241:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a284917a0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a284a45b0"/>
          <arguments>
            <value cst="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="247:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a2848ab40"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a284a6c80"/></to>
        </wire>
        <wire loc="248:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a284882f0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a284a45b0"/>
          <arguments>
            <value cst="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="254:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a28480610"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a284a6c80"/></to>
        </wire>
        <wire loc="255:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a2847fc50"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a284a45b0"/>
          <arguments>
            <value cst="I:3">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="261:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a28477160"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a284a6c80"/></to>
        </wire>
        <wire loc="262:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a284767a0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a284a45b0"/>
          <arguments>
            <value cst="I:4">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="268:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a2846eb40"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a284a6c80"/></to>
        </wire>
        <wire loc="269:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a2846c2f0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a284a45b0"/>
          <arguments>
            <value cst="I:5">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="275:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a28465610"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a284a6c80"/></to>
        </wire>
        <wire loc="276:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a28464c50"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a284a45b0"/>
          <arguments>
            <value cst="I:6">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="286:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1a2845a2f0"/></from>
          <to><interface-ref name="VectorTimer1_A0" scoped="" ref="0x7f1a2856abe0"/></to>
        </wire>
        <wire loc="287:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1a2845a940"/></from>
          <to><interface-ref name="VectorTimer1_A1" scoped="" ref="0x7f1a28569400"/></to>
        </wire>
        <wire loc="288:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Overflow" scoped="" ref="0x7f1a2845bc20"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a2845b5b0"/>
          <arguments>
            <value cst="I:7">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="294:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a28453480"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a2845dc80"/></to>
        </wire>
        <wire loc="295:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a28452ac0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a2845b5b0"/>
          <arguments>
            <value cst="I:0">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="301:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a28449020"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a2845dc80"/></to>
        </wire>
        <wire loc="302:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a284487a0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a2845b5b0"/>
          <arguments>
            <value cst="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="309:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a28441b40"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a2845dc80"/></to>
        </wire>
        <wire loc="310:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a2843f2f0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a2845b5b0"/>
          <arguments>
            <value cst="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="337:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1a28436750"/></from>
          <to><interface-ref name="VectorTimer2_A0" scoped="" ref="0x7f1a28569b60"/></to>
        </wire>
        <wire loc="338:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1a28436da0"/></from>
          <to><interface-ref name="VectorTimer2_A1" scoped="" ref="0x7f1a28568400"/></to>
        </wire>
        <wire loc="339:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Overflow" scoped="" ref="0x7f1a28436100"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a28437a60"/>
          <arguments>
            <value cst="I:7">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="345:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a2842f7a0"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28439260"/></to>
        </wire>
        <wire loc="346:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a2842ede0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a28437a60"/>
          <arguments>
            <value cst="I:0">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="352:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a284252f0"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28439260"/></to>
        </wire>
        <wire loc="353:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a28424930"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a28437a60"/>
          <arguments>
            <value cst="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="359:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a2841c020"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a28439260"/></to>
        </wire>
        <wire loc="360:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
          <from><interface-ref name="Event" scoped="" ref="0x7f1a2841b7a0"/></from>
          <to><interface-ref name="Event" scoped="" ref="0x7f1a28437a60"/>
          <arguments>
            <value cst="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component>
    <component qname="HplMsp430UsciInterruptsB0P" loc="9:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB0P.nc">
      <documentation loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB0P.nc">
        <short>&#10; Define the interrupt handlers for USCI module B0.</short>
        <long>&#10; Define the interrupt handlers for USCI module B0.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/hakan/github/pillforge/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/hakan/github/pillforge/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIORenP" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc" abstract="" safe="">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f1a28bec920" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f1a28beccd0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f1a28beb0d0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f1a28beb480" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_ren_addr" ref="0x7f1a28beb830" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f1a28bebba0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
          <component-ref qname="HplMsp430GeneralIORenP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430UsciA0P" loc="2:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
        <short> A non-generic instance of Msp430UsciC for USCI_A0.</short>
        <long> A non-generic instance of Msp430UsciC for USCI_A0. *</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="18:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
          <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a2824ad30"/></from>
          <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a2823a9e0"/></to>
        </wire>
        <wire loc="22:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
          <from><interface-ref name="Interrupts" scoped="" ref="0x7f1a282461d0"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a2823b3e0"/></to>
        </wire>
        <wire loc="16:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
          <from><interface-ref name="USCI" scoped="" ref="0x7f1a28255480"/></from>
          <to><interface-ref name="Usci" scoped="" ref="0x7f1a282430c0"/></to>
        </wire>
        <wire loc="19:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
          <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28249590"/></from>
          <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28239270"/></to>
        </wire>
        <wire loc="17:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a2824b9c0"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a2823bb00"/></to>
        </wire>
        <wire loc="20:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a282482e0"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28239e80"/></to>
        </wire>
        <wire loc="21:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28238da0"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28246e10"/></to>
        </wire>
        <wire loc="25:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
          <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a282386a0"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a28231600"/></to>
        </wire>
        <wire loc="26:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
          <from><interface-ref name="Usci" scoped="" ref="0x7f1a28231d30"/></from>
          <to><interface-ref name="Usci" scoped="" ref="0x7f1a282430c0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430UsciUartA1P" loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
      <configuration/>
      <wiring>
        <wire loc="26:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a288a4390"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28627ca0"/></to>
        </wire>
        <wire loc="28:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="UartByte" scoped="" ref="0x7f1a288b22c0"/></from>
          <to><interface-ref name="UartByte" scoped="" ref="0x7f1a286270d0"/></to>
        </wire>
        <wire loc="27:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="UartStream" scoped="" ref="0x7f1a288a3760"/></from>
          <to><interface-ref name="UartStream" scoped="" ref="0x7f1a28628020"/></to>
        </wire>
        <wire loc="29:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a28899900"/></from>
          <to><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a286265b0"/></to>
        </wire>
        <wire loc="21:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="Usci" scoped="" ref="0x7f1a28626dd0"/></from>
          <to><interface-ref name="USCI" scoped="" ref="0x7f1a2885c8a0"/></to>
        </wire>
        <wire loc="22:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="Interrupts" scoped="" ref="0x7f1a2861eda0"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a2884bae0"/>
          <arguments>
            <value cst="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="23:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28619e40"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28853a80"/></to>
        </wire>
        <wire loc="25:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a28619850"/></from>
          <to><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a28897670"/></to>
        </wire>
        <wire loc="30:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="URXD" scoped="" ref="0x7f1a2861d410"/></from>
          <to><interface-ref name="URXD" scoped="" ref="0x7f1a28897d70"/></to>
        </wire>
        <wire loc="31:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="UTXD" scoped="" ref="0x7f1a2861b5d0"/></from>
          <to><interface-ref name="UTXD" scoped="" ref="0x7f1a28896020"/></to>
        </wire>
        <wire loc="34:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
          <from><interface-ref name="LocalTime_bms" scoped="" ref="0x7f1a28618720"/></from>
          <to><interface-ref name="LocalTime" scoped="" ref="0x7f1a2860ed50"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="McuSleepC" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc" safe="">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10; Uses TI defines to identify which USCI resources are present.&#10; Locate these by searching for __MSP430_HAS_ in the toolchain&#10; header files in msp430/include.&#10;&#10; This pass-through configuration allows us to wire other things directly into &#10; McuSleep at a later time, without breaking architecture to do so.&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc">
          <from><interface-ref name="McuSleepEvents" scoped="" ref="0x7f1a290cc130"/></from>
          <to><interface-ref name="McuSleepEvents" scoped="" ref="0x7f1a290c8020"/></to>
        </wire>
        <wire loc="71:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc">
          <from><interface-ref name="McuSleep" scoped="" ref="0x7f1a292bc810"/></from>
          <to><interface-ref name="McuSleep" scoped="" ref="0x7f1a290c92d0"/></to>
        </wire>
        <wire loc="72:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc">
          <from><interface-ref name="McuPowerState" scoped="" ref="0x7f1a29257d20"/></from>
          <to><interface-ref name="McuPowerState" scoped="" ref="0x7f1a290c9930"/></to>
        </wire>
        <wire loc="75:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc">
          <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1a290c88b0"/></from>
          <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1a290cbc80"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430UsciSpiB0C" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc" abstract="">
      <documentation loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
        <short>&#10; Generic configuration for a client that shares USCI_B0 in SPI mode.</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="63:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
          <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a2798eb50"/></from>
          <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a281761d0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
          <from><interface-ref name="SpiBlock" scoped="" ref="0x7f1a2798dc20"/></from>
          <to><interface-ref name="SpiBlock" scoped="" ref="0x7f1a2818f4e0"/></to>
        </wire>
        <wire loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
          <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1a2798d460"/></from>
          <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1a28192cb0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
          <from><interface-ref name="SpiByte" scoped="" ref="0x7f1a2798c2c0"/></from>
          <to><interface-ref name="SpiByte" scoped="" ref="0x7f1a2818fb00"/></to>
        </wire>
        <wire loc="62:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a27991e50"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a28178e70"/>
          <arguments>
            <value cst="U:">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
          <from><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2798c930"/></from>
          <to><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2818d190"/></to>
        </wire>
        <wire loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
          <from><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2818ce20"/>
          <arguments>
            <value cst="U:">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </from>
          <to><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2798b1e0"/></to>
        </wire>
        <wire loc="72:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a281722c0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2818c020"/>
          <arguments>
            <value cst="U:">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a279c3020" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a279c3020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1a279c37b0" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a279c37b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430UsciI2CP" loc="103:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc" abstract="" safe="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a282e4230" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a282e4230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1a282e4560" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
          <from><interface-ref name="Alarm" scoped="" ref="0x7f1a285f4d30"/></from>
          <to><interface-ref name="Alarm" scoped="" ref="0x7f1a2832d2a0"/></to>
        </wire>
        <wire loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
          <from><interface-ref name="Init" scoped="" ref="0x7f1a285f4400"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a283a59c0"/></to>
        </wire>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
          <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1a28326b90"/></from>
          <to><interface-ref name="Alarm" scoped="" ref="0x7f1a283a4260"/></to>
        </wire>
        <wire loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
          <from><interface-ref name="Counter" scoped="" ref="0x7f1a28329690"/></from>
          <to><interface-ref name="Counter" scoped="" ref="0x7f1a28397900"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="HplMsp430InterruptP" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftCaptureC" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc" abstract="">
      <documentation loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
        <short>&#10; Emulates GPIO capture functionality using GpioInterrupt and the &#10; standard 32khz counter&#10;&#10; </short>
        <long>&#10; Emulates GPIO capture functionality using GpioInterrupt and the &#10; standard 32khz counter&#10;&#10; @author Phil Buonadonna&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
          <from><interface-ref name="GpioCapture" scoped="" ref="0x7f1a2795a0c0"/></from>
          <to><interface-ref name="GpioCapture" scoped="" ref="0x7f1a27953020"/></to>
        </wire>
        <wire loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
          <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1a27953b00"/></from>
          <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1a27954360"/></to>
        </wire>
        <wire loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
          <from><interface-ref name="Counter32khz32" scoped="" ref="0x7f1a27943820"/></from>
          <to><interface-ref name="Counter" scoped="" ref="0x7f1a2793c020"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="McuSleepP" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepP.nc" safe="">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepP.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10; Uses TI defines to identify which USCI resources are present.&#10; Locate these by searching for HAS_T in the TI Code Composer Studio&#10; header files in ccsv4/msp430/include.  MSPGCC and IAR should match&#10; these definitions.&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
          <from><interface-ref name="SplitControl" scoped="" ref="0x7f1a27d160c0"/></from>
          <to><interface-ref name="SplitControl" scoped="" ref="0x7f1a27cbbe30"/></to>
        </wire>
        <wire loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
          <from><interface-ref name="Send" scoped="" ref="0x7f1a27d16c10"/></from>
          <to><interface-ref name="Send" scoped="" ref="0x7f1a27cb9020"/></to>
        </wire>
        <wire loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
          <from><interface-ref name="Receive" scoped="" ref="0x7f1a27d15690"/></from>
          <to><interface-ref name="Receive" scoped="" ref="0x7f1a27cb9950"/></to>
        </wire>
        <wire loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
          <from><interface-ref name="RadioChannel" scoped="" ref="0x7f1a27d15ce0"/></from>
          <to><interface-ref name="RadioChannel" scoped="" ref="0x7f1a27cb8020"/></to>
        </wire>
        <wire loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
          <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></from>
          <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a27cba920"/></to>
        </wire>
        <wire loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
          <from><interface-ref name="RadioState" scoped="" ref="0x7f1a27cb8970"/></from>
          <to><interface-ref name="RadioState" scoped="" ref="0x7f1a27d0d0f0"/></to>
        </wire>
        <wire loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
          <from><interface-ref name="Tasklet" scoped="" ref="0x7f1a27cb7730"/></from>
          <to><interface-ref name="Tasklet" scoped="" ref="0x7f1a28eb5020"/></to>
        </wire>
        <wire loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
          <from><interface-ref name="RadioSend" scoped="" ref="0x7f1a27cb6270"/></from>
          <to><interface-ref name="RadioSend" scoped="" ref="0x7f1a27d093f0"/></to>
        </wire>
        <wire loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
          <from><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27cb6b60"/></from>
          <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27d09d60"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430Counter32khzC" loc="52:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Counter32khzC.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;&#10; The cc430f5137 and the msp430f5138{,a} (both x5 family) have at a minimum the&#10; T0A5 and T1A3 timer h/w.  We assign T0A to the 32KiHz timer and T1A to the&#10; 1 MiHz (TMicro) timer (see Msp430CounterMicro).&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="59:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Counter32khzC.nc">
          <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1a28396aa0"/></from>
          <to><interface-ref name="Counter" scoped="" ref="0x7f1a2838fb80"/></to>
        </wire>
        <wire loc="60:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Counter32khzC.nc">
          <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a28381c50"/></from>
          <to><interface-ref name="Timer2_A" scoped="" ref="0x7f1a2857cd80"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port14" scoped="" ref="0x7f1a27913bc0"/></from>
          <to><interface-ref name="Port14" scoped="" ref="0x7f1a278fd8a0"/></to>
        </wire>
        <wire loc="82:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port26" scoped="" ref="0x7f1a27909bc0"/></from>
          <to><interface-ref name="Port26" scoped="" ref="0x7f1a278f3a30"/></to>
        </wire>
        <wire loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port17" scoped="" ref="0x7f1a27910bc0"/></from>
          <to><interface-ref name="Port17" scoped="" ref="0x7f1a278fa8a0"/></to>
        </wire>
        <wire loc="77:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port21" scoped="" ref="0x7f1a2790ebc0"/></from>
          <to><interface-ref name="Port21" scoped="" ref="0x7f1a278f88a0"/></to>
        </wire>
        <wire loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port12" scoped="" ref="0x7f1a27915c80"/></from>
          <to><interface-ref name="Port12" scoped="" ref="0x7f1a279008a0"/></to>
        </wire>
        <wire loc="80:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port24" scoped="" ref="0x7f1a2790bbc0"/></from>
          <to><interface-ref name="Port24" scoped="" ref="0x7f1a278f58a0"/></to>
        </wire>
        <wire loc="71:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port15" scoped="" ref="0x7f1a27912bc0"/></from>
          <to><interface-ref name="Port15" scoped="" ref="0x7f1a278fc8a0"/></to>
        </wire>
        <wire loc="83:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port27" scoped="" ref="0x7f1a27908bc0"/></from>
          <to><interface-ref name="Port27" scoped="" ref="0x7f1a278f2a30"/></to>
        </wire>
        <wire loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port10" scoped="" ref="0x7f1a27919dd0"/></from>
          <to><interface-ref name="Port10" scoped="" ref="0x7f1a27906970"/></to>
        </wire>
        <wire loc="78:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port22" scoped="" ref="0x7f1a2790dbc0"/></from>
          <to><interface-ref name="Port22" scoped="" ref="0x7f1a278f78a0"/></to>
        </wire>
        <wire loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port13" scoped="" ref="0x7f1a27914c40"/></from>
          <to><interface-ref name="Port13" scoped="" ref="0x7f1a278ff8a0"/></to>
        </wire>
        <wire loc="81:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port25" scoped="" ref="0x7f1a2790ac40"/></from>
          <to><interface-ref name="Port25" scoped="" ref="0x7f1a278f4a30"/></to>
        </wire>
        <wire loc="72:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port16" scoped="" ref="0x7f1a27911bc0"/></from>
          <to><interface-ref name="Port16" scoped="" ref="0x7f1a278fb8a0"/></to>
        </wire>
        <wire loc="76:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port20" scoped="" ref="0x7f1a2790fbc0"/></from>
          <to><interface-ref name="Port20" scoped="" ref="0x7f1a278f98a0"/></to>
        </wire>
        <wire loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port11" scoped="" ref="0x7f1a27916d20"/></from>
          <to><interface-ref name="Port11" scoped="" ref="0x7f1a279038b0"/></to>
        </wire>
        <wire loc="79:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
          <from><interface-ref name="Port23" scoped="" ref="0x7f1a2790cbc0"/></from>
          <to><interface-ref name="Port23" scoped="" ref="0x7f1a278f68a0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430UsciI2CB1P" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <configuration/>
      <wiring>
        <wire loc="74:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a280eb020"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a27fd1b70"/></to>
        </wire>
        <wire loc="76:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="I2CReg" scoped="" ref="0x7f1a280f4e60"/></from>
          <to><interface-ref name="I2CReg" scoped="" ref="0x7f1a27fd4570"/></to>
        </wire>
        <wire loc="77:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="I2CSlave" scoped="" ref="0x7f1a280f35a0"/></from>
          <to><interface-ref name="I2CSlave" scoped="" ref="0x7f1a27fd36c0"/></to>
        </wire>
        <wire loc="75:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="I2CPacket" scoped="" ref="0x7f1a28104cd0"/></from>
          <to><interface-ref name="I2CBasicAddr" scoped="" ref="0x7f1a27fd9740"/></to>
        </wire>
        <wire loc="78:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a280ebd80"/></from>
          <to><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a27fd0530"/></to>
        </wire>
        <wire loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="Usci" scoped="" ref="0x7f1a27fd0d50"/></from>
          <to><interface-ref name="USCI" scoped="" ref="0x7f1a280e4d20"/></to>
        </wire>
        <wire loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="Interrupts" scoped="" ref="0x7f1a27fc8da0"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a280d0960"/>
          <arguments>
            <value cst="I:3">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="71:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a27fc3e40"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a280d1ac0"/></to>
        </wire>
        <wire loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a27fc3850"/></from>
          <to><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a280eac00"/></to>
        </wire>
        <wire loc="79:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="Panic" scoped="" ref="0x7f1a27fc25c0"/></from>
          <to><interface-ref name="Panic" scoped="" ref="0x7f1a280de320"/></to>
        </wire>
        <wire loc="80:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="Platform" scoped="" ref="0x7f1a27fc2d20"/></from>
          <to><interface-ref name="Platform" scoped="" ref="0x7f1a280deae0"/></to>
        </wire>
        <wire loc="81:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="SCL" scoped="" ref="0x7f1a27fc55d0"/></from>
          <to><interface-ref name="SCL" scoped="" ref="0x7f1a280e9390"/></to>
        </wire>
        <wire loc="82:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
          <from><interface-ref name="SDA" scoped="" ref="0x7f1a27fc7410"/></from>
          <to><interface-ref name="SDA" scoped="" ref="0x7f1a280e76b0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430UsciSpiA0P" loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <configuration/>
      <wiring>
        <wire loc="28:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28266b70"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a281b73a0"/></to>
        </wire>
        <wire loc="30:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="SpiBlock" scoped="" ref="0x7f1a28260170"/></from>
          <to><interface-ref name="SpiBlock" scoped="" ref="0x7f1a281b9e00"/></to>
        </wire>
        <wire loc="29:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1a28265e50"/></from>
          <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1a281b9680"/></to>
        </wire>
        <wire loc="31:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="SpiByte" scoped="" ref="0x7f1a28261710"/></from>
          <to><interface-ref name="SpiByte" scoped="" ref="0x7f1a281b8410"/></to>
        </wire>
        <wire loc="32:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a28261d80"/></from>
          <to><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a281b89e0"/></to>
        </wire>
        <wire loc="23:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="Usci" scoped="" ref="0x7f1a281b7bc0"/></from>
          <to><interface-ref name="USCI" scoped="" ref="0x7f1a28255480"/></to>
        </wire>
        <wire loc="24:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="Interrupts" scoped="" ref="0x7f1a281afc10"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a282461d0"/>
          <arguments>
            <value cst="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="25:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a281a8e40"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a282482e0"/></to>
        </wire>
        <wire loc="27:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a281a8850"/></from>
          <to><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2825faa0"/></to>
        </wire>
        <wire loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="SIMO" scoped="" ref="0x7f1a281ae2b0"/></from>
          <to><interface-ref name="SIMO" scoped="" ref="0x7f1a2825e1f0"/></to>
        </wire>
        <wire loc="34:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="SOMI" scoped="" ref="0x7f1a281ac440"/></from>
          <to><interface-ref name="SOMI" scoped="" ref="0x7f1a2825c530"/></to>
        </wire>
        <wire loc="35:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
          <from><interface-ref name="CLK" scoped="" ref="0x7f1a281aa5d0"/></from>
          <to><interface-ref name="CLK" scoped="" ref="0x7f1a28258840"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="103:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
          <from><interface-ref name="Send" scoped="" ref="0x7f1a27dab770"/></from>
          <to><interface-ref name="Send" scoped="" ref="0x7f1a27d61d80"/></to>
        </wire>
        <wire loc="106:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
          <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27da6600"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27d5f400"/></to>
        </wire>
        <wire loc="111:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
          <from><interface-ref name="Receive" scoped="" ref="0x7f1a27da71c0"/></from>
          <to><interface-ref name="SubReceive" scoped="" ref="0x7f1a27da4020"/></to>
        </wire>
        <wire loc="102:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
          <from><interface-ref name="PacketLink" scoped="" ref="0x7f1a27da7800"/></from>
          <to><interface-ref name="PacketLink" scoped="" ref="0x7f1a27d606f0"/></to>
        </wire>
        <wire loc="104:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27d5e310"/></from>
          <to><interface-ref name="SubSend" scoped="" ref="0x7f1a27da5590"/></to>
        </wire>
        <wire loc="105:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
          <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27d5ec00"/></from>
          <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27da3670"/></to>
        </wire>
        <wire loc="107:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a27d589c0"/></from>
          <to><interface-ref name="SubPacket" scoped="" ref="0x7f1a27da4700"/></to>
        </wire>
        <wire loc="109:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
          <from><interface-ref name="DelayTimer" scoped="" ref="0x7f1a27d5c6f0"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a27d52cc0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
          <from><interface-ref name="Counter" scoped="" ref="0x7f1a28397900"/></from>
          <to><interface-ref name="Counter" scoped="" ref="0x7f1a2837bcf0"/></to>
        </wire>
        <wire loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
          <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1a2835d0f0"/></from>
          <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1a28396aa0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="PlatformP" loc="57:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <module/>
    </component>
    <component qname="NoDiagMsgC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/NoDiagMsgC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="70:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28e9d020"/></from>
          <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28e1a020"/></to>
        </wire>
        <wire loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="Packet" scoped="" ref="0x7f1a28ea12b0"/></from>
          <to><interface-ref name="Packet" scoped="" ref="0x7f1a28e1e400"/></to>
        </wire>
        <wire loc="67:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="AMSend" scoped="" ref="0x7f1a28ea04d0"/></from>
          <to><interface-ref name="AMSend" scoped="" ref="0x7f1a28e1d190"/></to>
        </wire>
        <wire loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="Snoop" scoped="" ref="0x7f1a28e9e430"/></from>
          <to><interface-ref name="Snoop" scoped="" ref="0x7f1a28e1c780"/></to>
        </wire>
        <wire loc="68:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="Receive" scoped="" ref="0x7f1a28e9f800"/></from>
          <to><interface-ref name="Receive" scoped="" ref="0x7f1a28e1c020"/></to>
        </wire>
        <wire loc="72:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28e9dc70"/></from>
          <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28e1a780"/></to>
        </wire>
        <wire loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="AMPacket" scoped="" ref="0x7f1a28ea5bf0"/></from>
          <to><interface-ref name="AMPacket" scoped="" ref="0x7f1a28e20e20"/></to>
        </wire>
        <wire loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28e9b8c0"/></from>
          <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28e19020"/></to>
        </wire>
        <wire loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1a28e16720"/></from>
          <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1a28e105a0"/></to>
        </wire>
        <wire loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a28e196b0"/></from>
          <to><interface-ref name="SubPacket" scoped="" ref="0x7f1a28e9a060"/></to>
        </wire>
        <wire loc="76:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a28e185d0"/></from>
          <to><interface-ref name="SubSend" scoped="" ref="0x7f1a28e959f0"/></to>
        </wire>
        <wire loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a28e17020"/></from>
          <to><interface-ref name="SubReceive" scoped="" ref="0x7f1a28e92550"/></to>
        </wire>
        <wire loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
          <from><interface-ref name="Config" scoped="" ref="0x7f1a28e17630"/></from>
          <to><interface-ref name="Config" scoped="" ref="0x7f1a28e92c60"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="AMReceiverC" loc="43:/home/hakan/github/pillforge/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <parameters>
        <constant name="amId" ref="0x7f1a290b6e10" loc="43:/home/hakan/github/pillforge/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/system/AMReceiverC.nc">
          <from><interface-ref name="Packet" scoped="" ref="0x7f1a29053ae0"/></from>
          <to><interface-ref name="Packet" scoped="" ref="0x7f1a2902e630"/></to>
        </wire>
        <wire loc="54:/home/hakan/github/pillforge/tinyos/tos/system/AMReceiverC.nc">
          <from><interface-ref name="Receive" scoped="" ref="0x7f1a2905a180"/></from>
          <to><interface-ref name="Receive" scoped="" ref="0x7f1a2903fcc0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
              </type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="56:/home/hakan/github/pillforge/tinyos/tos/system/AMReceiverC.nc">
          <from><interface-ref name="AMPacket" scoped="" ref="0x7f1a29042af0"/></from>
          <to><interface-ref name="AMPacket" scoped="" ref="0x7f1a2902d2d0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="HplMsp430UsciInterruptsB1P" loc="9:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB1P.nc">
      <documentation loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB1P.nc">
        <short>&#10; Define the interrupt handlers for USCI module B1.</short>
        <long>&#10; Define the interrupt handlers for USCI module B1.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="38:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <configuration/>
      <wiring>
        <wire loc="67:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="SplitControl" scoped="" ref="0x7f1a2903be40"/></from>
          <to><interface-ref name="SplitControl" scoped="" ref="0x7f1a29000580"/></to>
        </wire>
        <wire loc="81:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a29015060"/></from>
          <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a28fea020"/></to>
        </wire>
        <wire loc="72:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1a2902e020"/></from>
          <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28ff9020"/></to>
        </wire>
        <wire loc="74:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="Packet" scoped="" ref="0x7f1a2902e630"/></from>
          <to><interface-ref name="Packet" scoped="" ref="0x7f1a28ff7020"/></to>
        </wire>
        <wire loc="69:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="AMSend" scoped="" ref="0x7f1a2902fb00"/></from>
          <to><interface-ref name="AMSend" scoped="" ref="0x7f1a28ffc5c0"/></to>
        </wire>
        <wire loc="71:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="Snoop" scoped="" ref="0x7f1a2903a900"/></from>
          <to><interface-ref name="Snoop" scoped="" ref="0x7f1a28ffa430"/></to>
        </wire>
        <wire loc="78:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a2901edd0"/></from>
          <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a28ff4e80"/></to>
        </wire>
        <wire loc="70:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="Receive" scoped="" ref="0x7f1a2903fcc0"/></from>
          <to><interface-ref name="Receive" scoped="" ref="0x7f1a28ffb800"/></to>
        </wire>
        <wire loc="77:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a290224c0"/></from>
          <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a28ff44e0"/></to>
        </wire>
        <wire loc="79:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="PacketLink" scoped="" ref="0x7f1a2901d020"/></from>
          <to><interface-ref name="PacketLink" scoped="" ref="0x7f1a28ff3990"/></to>
        </wire>
        <wire loc="75:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="AMPacket" scoped="" ref="0x7f1a2902d2d0"/></from>
          <to><interface-ref name="AMPacket" scoped="" ref="0x7f1a28ff7c90"/></to>
        </wire>
        <wire loc="80:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="RadioChannel" scoped="" ref="0x7f1a29012ce0"/></from>
          <to><interface-ref name="RadioChannel" scoped="" ref="0x7f1a28ff27a0"/></to>
        </wire>
        <wire loc="83:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
          <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a29007b30"/></from>
          <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a28fdfe60"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430UsciA1P" loc="4:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
      <documentation loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
        <short> A non-generic instance of Msp430UsciC for USCI_A1.</short>
        <long> A non-generic instance of Msp430UsciC for USCI_A1. *</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="20:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
          <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a288541d0"/></from>
          <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a286bf020"/></to>
        </wire>
        <wire loc="24:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
          <from><interface-ref name="Interrupts" scoped="" ref="0x7f1a2884bae0"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a286c1a20"/></to>
        </wire>
        <wire loc="18:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
          <from><interface-ref name="USCI" scoped="" ref="0x7f1a2885c8a0"/></from>
          <to><interface-ref name="Usci" scoped="" ref="0x7f1a286c9730"/></to>
        </wire>
        <wire loc="21:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
          <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a2884edb0"/></from>
          <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a286bf7a0"/></to>
        </wire>
        <wire loc="19:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a28856e70"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a286c0190"/></to>
        </wire>
        <wire loc="22:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28853a80"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a286be400"/></to>
        </wire>
        <wire loc="23:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a286bc3a0"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2884d750"/></to>
        </wire>
        <wire loc="27:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
          <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a286bec00"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a286b7bc0"/></to>
        </wire>
        <wire loc="28:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
          <from><interface-ref name="Usci" scoped="" ref="0x7f1a286b43d0"/></from>
          <to><interface-ref name="Usci" scoped="" ref="0x7f1a286c9730"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="ArbiterP" loc="52:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f1a28730800" loc="52:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a2831ace0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a2831ace0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430UsciP" loc="88:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc" abstract="" safe="">
      <documentation loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
        <short>&#10; Core implementation for any USCI module present on an MSP430 chip.</short>
        <long>&#10; Core implementation for any USCI module present on an MSP430 chip.&#10;&#10; This module makes available the module-specific registers, along&#10; with a small number of higher-level functions like generic USCI&#10; chip configuration that are shared among the various modes of the&#10; module.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Derek Baker &#60;derek@red-slate.co.uk>&#10; @author Doug Carlson &#60;carlson@cs.jhu.edu>&#10; @author Marcus Chang &#60;marcus.chang@gmail.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_USCI_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do &#34;CFLAGS += -DMSP430_USCI_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_USCI_ATOMIC_LOWLEVEL is blank, this code makes the&#10; assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomics&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;&#10; Also note that many of the fields in various registers shouldn't be&#10; set unless the device is in reset.   See the Users guide for details&#10; ie. SLAU208M for the x5 family cpus.&#10;</long>
      </documentation>
      <parameters>
        <constant name="USCI_ID" ref="0x7f1a28834a00" loc="90:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
          <component-ref qname="HplMsp430UsciP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </constant>
        <constant name="UCmxCTLW0_" ref="0x7f1a28834dd0" loc="92:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
          <component-ref qname="HplMsp430UsciP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC1101C" loc="25:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <configuration/>
      <wiring>
        <wire loc="64:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="SpiBlock" scoped="" ref="0x7f1a279a3650"/></from>
          <to><interface-ref name="SpiBlock" scoped="" ref="0x7f1a27992c70"/></to>
        </wire>
        <wire loc="63:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="SpiByte" scoped="" ref="0x7f1a279a3020"/></from>
          <to><interface-ref name="SpiByte" scoped="" ref="0x7f1a27993d60"/></to>
        </wire>
        <wire loc="57:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="CSN" scoped="" ref="0x7f1a279a3ce0"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a2797f020"/></to>
        </wire>
        <wire loc="59:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="GDO2" scoped="" ref="0x7f1a279a0340"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a27970020"/></to>
        </wire>
        <wire loc="62:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="SpiResource" scoped="" ref="0x7f1a279a42c0"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a279930c0"/></to>
        </wire>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="RADIO_EN" scoped="" ref="0x7f1a2799f690"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a2796cc70"/></to>
        </wire>
        <wire loc="80:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="Gdo0Capture" scoped="" ref="0x7f1a2799e9d0"/></from>
          <to><interface-ref name="GpioCapture" scoped="" ref="0x7f1a2795bc00"/></to>
        </wire>
        <wire loc="58:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="GDO0" scoped="" ref="0x7f1a279a1020"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a27975020"/></to>
        </wire>
        <wire loc="89:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a2799d840"/></from>
          <to><interface-ref name="LocalTime" scoped="" ref="0x7f1a2781d5d0"/></to>
        </wire>
        <wire loc="85:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="Init" scoped="" ref="0x7f1a2799c8e0"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a2781f2f0"/></to>
        </wire>
        <wire loc="84:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="Alarm" scoped="" ref="0x7f1a2799a200"/></from>
          <to><interface-ref name="Alarm32khz16" scoped="" ref="0x7f1a2781fce0"/></to>
        </wire>
        <wire loc="52:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a279792f0"/></from>
          <to><interface-ref name="Port26" scoped="" ref="0x7f1a28d00020"/></to>
        </wire>
        <wire loc="53:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a279742f0"/></from>
          <to><interface-ref name="Port23" scoped="" ref="0x7f1a28d07710"/></to>
        </wire>
        <wire loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a2796f2f0"/></from>
          <to><interface-ref name="Port24" scoped="" ref="0x7f1a28d059a0"/></to>
        </wire>
        <wire loc="78:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1a2792ccf0"/></from>
          <to><interface-ref name="Port23" scoped="" ref="0x7f1a2790cbc0"/></to>
        </wire>
        <wire loc="79:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
          <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1a2793d760"/></from>
          <to><interface-ref name="Interrupt" scoped="" ref="0x7f1a2792c1f0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f1a2851d630" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f1a2851da00" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PlatformUsciMapC" loc="43:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
        <short>&#10; Connect the appropriate pins for USCI support on a CC430.</short>
        <long>&#10; Connect the appropriate pins for USCI support on a CC430.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="49:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="URXD" scoped="" ref="0x7f1a28897d70"/></from>
          <to><interface-ref name="UCA1RXD" scoped="" ref="0x7f1a28c3c720"/></to>
        </wire>
        <wire loc="50:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="UTXD" scoped="" ref="0x7f1a28896020"/></from>
          <to><interface-ref name="UCA1TXD" scoped="" ref="0x7f1a28c3e400"/></to>
        </wire>
        <wire loc="53:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="SIMO" scoped="" ref="0x7f1a2825e1f0"/></from>
          <to><interface-ref name="UCA0SIMO" scoped="" ref="0x7f1a28c569c0"/></to>
        </wire>
        <wire loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="SOMI" scoped="" ref="0x7f1a2825c530"/></from>
          <to><interface-ref name="UCA0SOMI" scoped="" ref="0x7f1a28c54ce0"/></to>
        </wire>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="CLK" scoped="" ref="0x7f1a28258840"/></from>
          <to><interface-ref name="UCA0CLK" scoped="" ref="0x7f1a28c5fcd0"/></to>
        </wire>
        <wire loc="58:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="SIMO" scoped="" ref="0x7f1a2818b540"/></from>
          <to><interface-ref name="UCB0SIMO" scoped="" ref="0x7f1a28c4d730"/></to>
        </wire>
        <wire loc="59:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="SOMI" scoped="" ref="0x7f1a28189850"/></from>
          <to><interface-ref name="UCB0SOMI" scoped="" ref="0x7f1a28c4b9c0"/></to>
        </wire>
        <wire loc="60:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="CLK" scoped="" ref="0x7f1a28185ad0"/></from>
          <to><interface-ref name="UCB0CLK" scoped="" ref="0x7f1a28c51020"/></to>
        </wire>
        <wire loc="68:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="SDA" scoped="" ref="0x7f1a280e76b0"/></from>
          <to><interface-ref name="UCB1SDA" scoped="" ref="0x7f1a28c2dcd0"/></to>
        </wire>
        <wire loc="69:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="SCL" scoped="" ref="0x7f1a280e9390"/></from>
          <to><interface-ref name="UCB1SCL" scoped="" ref="0x7f1a28c2a020"/></to>
        </wire>
        <wire loc="70:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/usci/PlatformUsciMapC.nc">
          <from><interface-ref name="Platform" scoped="" ref="0x7f1a280deae0"/></from>
          <to><interface-ref name="Platform" scoped="" ref="0x7f1a28dc1e00"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Jo&#9155;&#9123;o Gon&#9155;&#9127;alves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="1252:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ACLK" scoped="" ref="0x7f1a28c63700"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28bb3100"/></to>
        </wire>
        <wire loc="810:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port14" scoped="" ref="0x7f1a28d17020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b9bb80"/></to>
        </wire>
        <wire loc="823:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port26" scoped="" ref="0x7f1a28d00020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b59550"/></to>
        </wire>
        <wire loc="873:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port71" scoped="" ref="0x7f1a28cb2580"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a7ab80"/></to>
        </wire>
        <wire loc="886:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port83" scoped="" ref="0x7f1a28c9b580"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a3a9f0"/></to>
        </wire>
        <wire loc="1278:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB1STE" scoped="" ref="0x7f1a28c33400"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b1c6d0"/></to>
        </wire>
        <wire loc="828:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port30" scoped="" ref="0x7f1a28cfc710"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b4d3f0"/></to>
        </wire>
        <wire loc="841:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port42" scoped="" ref="0x7f1a28ce68a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b0ed10"/></to>
        </wire>
        <wire loc="854:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port54" scoped="" ref="0x7f1a28ccf8a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ace6d0"/></to>
        </wire>
        <wire loc="865:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port64" scoped="" ref="0x7f1a28cbd200"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a9a820"/></to>
        </wire>
        <wire loc="878:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port76" scoped="" ref="0x7f1a28ca6580"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a5b060"/></to>
        </wire>
        <wire loc="1224:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA0CCR4" scoped="" ref="0x7f1a28c7fe60"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b956d0"/></to>
        </wire>
        <wire loc="1291:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC6" scoped="" ref="0x7f1a28c1b700"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a8dd10"/></to>
        </wire>
        <wire loc="1310:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TB0CCR1" scoped="" ref="0x7f1a28c0db40"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28abc6d0"/></to>
        </wire>
        <wire loc="1285:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC0" scoped="" ref="0x7f1a28c283e0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ab59f0"/></to>
        </wire>
        <wire loc="813:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port17" scoped="" ref="0x7f1a28d109a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b89b80"/></to>
        </wire>
        <wire loc="1233:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA2CCR1" scoped="" ref="0x7f1a28c6e590"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b68e00"/></to>
        </wire>
        <wire loc="1261:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA0CLK" scoped="" ref="0x7f1a28c5fcd0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b53820"/></to>
        </wire>
        <wire loc="1273:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA1SIMO" scoped="" ref="0x7f1a28c3a9c0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b00550"/></to>
        </wire>
        <wire loc="1294:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC9" scoped="" ref="0x7f1a28c14020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ae03f0"/></to>
        </wire>
        <wire loc="1313:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TB0CCR4" scoped="" ref="0x7f1a28c06590"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a5b060"/></to>
        </wire>
        <wire loc="928:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="PortJ1" scoped="" ref="0x7f1a28c8e8a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a289d63f0"/></to>
        </wire>
        <wire loc="818:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port21" scoped="" ref="0x7f1a28d0b020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b7b3f0"/></to>
        </wire>
        <wire loc="831:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port33" scoped="" ref="0x7f1a28cf5020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b3a6d0"/></to>
        </wire>
        <wire loc="844:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port45" scoped="" ref="0x7f1a28cde200"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28afa820"/></to>
        </wire>
        <wire loc="857:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port57" scoped="" ref="0x7f1a28cc8200"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28abc6d0"/></to>
        </wire>
        <wire loc="868:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port67" scoped="" ref="0x7f1a28cb7b30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a851f0"/></to>
        </wire>
        <wire loc="1229:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA1CCR2" scoped="" ref="0x7f1a28c75b40"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b7b3f0"/></to>
        </wire>
        <wire loc="1315:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TB0CCR6" scoped="" ref="0x7f1a28c02b40"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b286d0"/></to>
        </wire>
        <wire loc="1319:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="MCLK" scoped="" ref="0x7f1a28bfb570"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a55b80"/></to>
        </wire>
        <wire loc="1288:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC3" scoped="" ref="0x7f1a28c22cb0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28aa1550"/></to>
        </wire>
        <wire loc="808:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port12" scoped="" ref="0x7f1a28d1c9a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ba76d0"/></to>
        </wire>
        <wire loc="821:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port24" scoped="" ref="0x7f1a28d059a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b68e00"/></to>
        </wire>
        <wire loc="834:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port36" scoped="" ref="0x7f1a28cef9a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b286d0"/></to>
        </wire>
        <wire loc="1267:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB0SDA" scoped="" ref="0x7f1a28c49cd0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b4d3f0"/></to>
        </wire>
        <wire loc="1303:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="SVMOUT" scoped="" ref="0x7f1a28c124f0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b22060"/></to>
        </wire>
        <wire loc="1323:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC12" scoped="" ref="0x7f1a28bf9900"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a7f120"/></to>
        </wire>
        <wire loc="1259:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA0SIMO" scoped="" ref="0x7f1a28c569c0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b3a6d0"/></to>
        </wire>
        <wire loc="884:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port81" scoped="" ref="0x7f1a28ca0e50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a473f0"/></to>
        </wire>
        <wire loc="1289:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC4" scoped="" ref="0x7f1a28c1f020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a9a820"/></to>
        </wire>
        <wire loc="839:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port40" scoped="" ref="0x7f1a28cea020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b1c6d0"/></to>
        </wire>
        <wire loc="852:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port52" scoped="" ref="0x7f1a28cd3200"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ada020"/></to>
        </wire>
        <wire loc="1281:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB1SDA" scoped="" ref="0x7f1a28c2dcd0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b159f0"/></to>
        </wire>
        <wire loc="863:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port62" scoped="" ref="0x7f1a28cc2b30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28aa71f0"/></to>
        </wire>
        <wire loc="876:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port74" scoped="" ref="0x7f1a28cace50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a68b80"/></to>
        </wire>
        <wire loc="889:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port86" scoped="" ref="0x7f1a28c95e50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a26550"/></to>
        </wire>
        <wire loc="1222:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA0CCR2" scoped="" ref="0x7f1a28c838b0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ba1060"/></to>
        </wire>
        <wire loc="1235:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA2CLK" scoped="" ref="0x7f1a28c6ab30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b75740"/></to>
        </wire>
        <wire loc="1257:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA0TXD" scoped="" ref="0x7f1a28c5a400"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b3a6d0"/></to>
        </wire>
        <wire loc="1262:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA0STE" scoped="" ref="0x7f1a28c5c020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b41b80"/></to>
        </wire>
        <wire loc="1326:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC15" scoped="" ref="0x7f1a28bf2200"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a6d060"/></to>
        </wire>
        <wire loc="1264:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB0STE" scoped="" ref="0x7f1a28c4f400"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b53820"/></to>
        </wire>
        <wire loc="1249:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="RTCCLK" scoped="" ref="0x7f1a28c67020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b59550"/></to>
        </wire>
        <wire loc="1317:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TB0OUTH" scoped="" ref="0x7f1a28bfd210"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b22060"/></to>
        </wire>
        <wire loc="1258:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA0RXD" scoped="" ref="0x7f1a28c58720"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b34060"/></to>
        </wire>
        <wire loc="1271:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA1TXD" scoped="" ref="0x7f1a28c3e400"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b00550"/></to>
        </wire>
        <wire loc="811:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port15" scoped="" ref="0x7f1a28d153f0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b956d0"/></to>
        </wire>
        <wire loc="824:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port27" scoped="" ref="0x7f1a28cfe3f0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b53820"/></to>
        </wire>
        <wire loc="1260:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA0SOMI" scoped="" ref="0x7f1a28c54ce0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b34060"/></to>
        </wire>
        <wire loc="1225:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA0CLK" scoped="" ref="0x7f1a28c7c200"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28bb3100"/></to>
        </wire>
        <wire loc="861:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port60" scoped="" ref="0x7f1a28cc6580"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ab59f0"/></to>
        </wire>
        <wire loc="874:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port72" scoped="" ref="0x7f1a28cb08a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a736d0"/></to>
        </wire>
        <wire loc="829:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port31" scoped="" ref="0x7f1a28cfa9a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b46020"/></to>
        </wire>
        <wire loc="842:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port43" scoped="" ref="0x7f1a28ce4b30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b071f0"/></to>
        </wire>
        <wire loc="855:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port55" scoped="" ref="0x7f1a28ccdb30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ac7060"/></to>
        </wire>
        <wire loc="887:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port84" scoped="" ref="0x7f1a28c998a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a34d10"/></to>
        </wire>
        <wire loc="866:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port65" scoped="" ref="0x7f1a28cbb580"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a93a60"/></to>
        </wire>
        <wire loc="879:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port77" scoped="" ref="0x7f1a28ca48a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a55b80"/></to>
        </wire>
        <wire loc="1227:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA1CCR0" scoped="" ref="0x7f1a28c7a590"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b89b80"/></to>
        </wire>
        <wire loc="1251:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="SMCLK" scoped="" ref="0x7f1a28c65410"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b75740"/></to>
        </wire>
        <wire loc="929:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="PortJ2" scoped="" ref="0x7f1a28c8cb30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a289d16d0"/></to>
        </wire>
        <wire loc="806:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port10" scoped="" ref="0x7f1a28d1e410"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28bb3100"/></to>
        </wire>
        <wire loc="819:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port22" scoped="" ref="0x7f1a28d093f0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b75740"/></to>
        </wire>
        <wire loc="832:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port34" scoped="" ref="0x7f1a28cf33f0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b34060"/></to>
        </wire>
        <wire loc="845:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port46" scoped="" ref="0x7f1a28cdc580"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28af3a60"/></to>
        </wire>
        <wire loc="1269:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB0CLK" scoped="" ref="0x7f1a28c51020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b41b80"/></to>
        </wire>
        <wire loc="1286:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC1" scoped="" ref="0x7f1a28c26700"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28aafd10"/></to>
        </wire>
        <wire loc="1292:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC7" scoped="" ref="0x7f1a28c19990"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a851f0"/></to>
        </wire>
        <wire loc="1311:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TB0CCR2" scoped="" ref="0x7f1a28c0be60"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a68b80"/></to>
        </wire>
        <wire loc="850:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port50" scoped="" ref="0x7f1a28cd8b30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ae69f0"/></to>
        </wire>
        <wire loc="1234:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA2CCR2" scoped="" ref="0x7f1a28c6c8b0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b601f0"/></to>
        </wire>
        <wire loc="1283:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB1CLK" scoped="" ref="0x7f1a28c35020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b071f0"/></to>
        </wire>
        <wire loc="1220:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA0CCR0" scoped="" ref="0x7f1a28c87270"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28badb80"/></to>
        </wire>
        <wire loc="1230:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA1CLK" scoped="" ref="0x7f1a28c73e50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b8f060"/></to>
        </wire>
        <wire loc="1314:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TB0CCR5" scoped="" ref="0x7f1a28c048b0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b2fb80"/></to>
        </wire>
        <wire loc="1316:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TB0CLK" scoped="" ref="0x7f1a28c00e50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a55b80"/></to>
        </wire>
        <wire loc="1276:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA1STE" scoped="" ref="0x7f1a28c40020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b071f0"/></to>
        </wire>
        <wire loc="809:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port13" scoped="" ref="0x7f1a28d1acc0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ba1060"/></to>
        </wire>
        <wire loc="822:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port25" scoped="" ref="0x7f1a28d03cc0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b601f0"/></to>
        </wire>
        <wire loc="835:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port37" scoped="" ref="0x7f1a28cedcc0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b22060"/></to>
        </wire>
        <wire loc="1274:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA1SOMI" scoped="" ref="0x7f1a28c38ce0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28afa820"/></to>
        </wire>
        <wire loc="1324:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC13" scoped="" ref="0x7f1a28bf7b30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a7ab80"/></to>
        </wire>
        <wire loc="1265:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB0SIMO" scoped="" ref="0x7f1a28c4d730"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b4d3f0"/></to>
        </wire>
        <wire loc="1275:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA1CLK" scoped="" ref="0x7f1a28c44cd0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b1c6d0"/></to>
        </wire>
        <wire loc="1290:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC5" scoped="" ref="0x7f1a28c1d3e0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a93a60"/></to>
        </wire>
        <wire loc="872:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port70" scoped="" ref="0x7f1a28cb5e50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a7f120"/></to>
        </wire>
        <wire loc="885:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port82" scoped="" ref="0x7f1a28c9d200"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a41740"/></to>
        </wire>
        <wire loc="840:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port41" scoped="" ref="0x7f1a28ce8580"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b159f0"/></to>
        </wire>
        <wire loc="853:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port53" scoped="" ref="0x7f1a28cd1580"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ad4b80"/></to>
        </wire>
        <wire loc="1309:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TB0CCR0" scoped="" ref="0x7f1a28c108d0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ac2b80"/></to>
        </wire>
        <wire loc="864:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port63" scoped="" ref="0x7f1a28cc0e50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28aa1550"/></to>
        </wire>
        <wire loc="877:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port75" scoped="" ref="0x7f1a28ca8200"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a616d0"/></to>
        </wire>
        <wire loc="890:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port87" scoped="" ref="0x7f1a28c92200"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a1f820"/></to>
        </wire>
        <wire loc="1223:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA0CCR3" scoped="" ref="0x7f1a28c81b40"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b9bb80"/></to>
        </wire>
        <wire loc="812:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port16" scoped="" ref="0x7f1a28d13710"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b8f060"/></to>
        </wire>
        <wire loc="1232:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA2CCR0" scoped="" ref="0x7f1a28c70210"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b6e9f0"/></to>
        </wire>
        <wire loc="1255:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="DMAE0" scoped="" ref="0x7f1a28c619c0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b59550"/></to>
        </wire>
        <wire loc="862:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port61" scoped="" ref="0x7f1a28cc48a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28aafd10"/></to>
        </wire>
        <wire loc="875:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port73" scoped="" ref="0x7f1a28caeb30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a6d060"/></to>
        </wire>
        <wire loc="817:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port20" scoped="" ref="0x7f1a28d0ecc0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b82060"/></to>
        </wire>
        <wire loc="830:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port32" scoped="" ref="0x7f1a28cf8cc0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b41b80"/></to>
        </wire>
        <wire loc="843:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port44" scoped="" ref="0x7f1a28ce2e50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b00550"/></to>
        </wire>
        <wire loc="856:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port56" scoped="" ref="0x7f1a28ccbe50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ac2b80"/></to>
        </wire>
        <wire loc="867:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port66" scoped="" ref="0x7f1a28cb98a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a8dd10"/></to>
        </wire>
        <wire loc="888:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port85" scoped="" ref="0x7f1a28c97b30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a2c1f0"/></to>
        </wire>
        <wire loc="927:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="PortJ0" scoped="" ref="0x7f1a28c90580"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a289db100"/></to>
        </wire>
        <wire loc="1228:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA1CCR1" scoped="" ref="0x7f1a28c788b0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b82060"/></to>
        </wire>
        <wire loc="930:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="PortJ3" scoped="" ref="0x7f1a28c8ae50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a289cc9f0"/></to>
        </wire>
        <wire loc="807:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port11" scoped="" ref="0x7f1a28d29710"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28badb80"/></to>
        </wire>
        <wire loc="820:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port23" scoped="" ref="0x7f1a28d07710"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b6e9f0"/></to>
        </wire>
        <wire loc="833:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port35" scoped="" ref="0x7f1a28cf1710"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b2fb80"/></to>
        </wire>
        <wire loc="846:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port47" scoped="" ref="0x7f1a28cda8a0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28aedd10"/></to>
        </wire>
        <wire loc="1272:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCA1RXD" scoped="" ref="0x7f1a28c3c720"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28afa820"/></to>
        </wire>
        <wire loc="1280:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB1SOMI" scoped="" ref="0x7f1a28c2f9c0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b0ed10"/></to>
        </wire>
        <wire loc="1282:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB1SCL" scoped="" ref="0x7f1a28c2a020"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b0ed10"/></to>
        </wire>
        <wire loc="1287:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC2" scoped="" ref="0x7f1a28c24990"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28aa71f0"/></to>
        </wire>
        <wire loc="1293:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC8" scoped="" ref="0x7f1a28c17cf0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ae69f0"/></to>
        </wire>
        <wire loc="1312:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TB0CCR3" scoped="" ref="0x7f1a28c08210"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a616d0"/></to>
        </wire>
        <wire loc="883:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port80" scoped="" ref="0x7f1a28ca2b30"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a4e060"/></to>
        </wire>
        <wire loc="851:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="Port51" scoped="" ref="0x7f1a28cd6e50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ae03f0"/></to>
        </wire>
        <wire loc="1325:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="ADC14" scoped="" ref="0x7f1a28bf5e50"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28a736d0"/></to>
        </wire>
        <wire loc="1221:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="TA0CCR1" scoped="" ref="0x7f1a28c85590"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28ba76d0"/></to>
        </wire>
        <wire loc="1266:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB0SOMI" scoped="" ref="0x7f1a28c4b9c0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b46020"/></to>
        </wire>
        <wire loc="1279:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB1SIMO" scoped="" ref="0x7f1a28c31730"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b159f0"/></to>
        </wire>
        <wire loc="1268:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
          <from><interface-ref name="UCB0SCL" scoped="" ref="0x7f1a28c469b0"/></from>
          <to><interface-ref name="IO" scoped="" ref="0x7f1a28b46020"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="HplMsp430UsciC" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc" abstract="" safe="">
      <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
        <short>&#10; Core configuration for any USCI module present on an MSP430 chip.</short>
        <long>&#10; Core configuration for any USCI module present on an MSP430 chip.&#10;&#10; There should be exactly one instance of this configuration for each&#10; USCI module; e.g., USCI_A0 or USCI_B3.  Each instance provides&#10; access to the USCI registers for its module, and maintains the&#10; resource management information required to determine which of the&#10; module's modes is currently active.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="UCmxCTLW0_" ref="0x7f1a288470d0" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <component-ref qname="HplMsp430UsciC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="RESOURCE_NAME" ref="0x7f1a288474c0" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <component-ref qname="HplMsp430UsciC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="90:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a2883c410"/></from>
          <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a286df3a0"/></to>
        </wire>
        <wire loc="86:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="Interrupts" scoped="" ref="0x7f1a2883e4e0"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a28761bb0"/></to>
        </wire>
        <wire loc="92:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a2883cc40"/></from>
          <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a286dfb20"/></to>
        </wire>
        <wire loc="89:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a2883d1d0"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a286e04f0"/></to>
        </wire>
        <wire loc="84:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="Usci" scoped="" ref="0x7f1a28847e20"/></from>
          <to><interface-ref name="Usci" scoped="" ref="0x7f1a28769ac0"/></to>
        </wire>
        <wire loc="93:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a2883b920"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a286dd8b0"/></to>
        </wire>
        <wire loc="85:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a28760310"/></from>
          <to><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a28839300"/></to>
        </wire>
        <wire loc="91:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a286dc1f0"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28838020"/></to>
        </wire>
        <wire loc="94:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a287608e0"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a286dd8b0"/></to>
        </wire>
        <wire loc="97:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
          <from><interface-ref name="Leds" scoped="" ref="0x7f1a2875f080"/></from>
          <to><interface-ref name="Leds" scoped="" ref="0x7f1a286d7020"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
          <from><interface-ref name="Counter" scoped="" ref="0x7f1a2793c020"/></from>
          <to><interface-ref name="Counter" scoped="" ref="0x7f1a27937b40"/></to>
        </wire>
        <wire loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
          <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1a27933020"/></from>
          <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1a28396aa0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
          <from><interface-ref name="BusyWait" scoped="" ref="0x7f1a279cbc20"/></from>
          <to><interface-ref name="BusyWait" scoped="" ref="0x7f1a279c47e0"/></to>
        </wire>
        <wire loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
          <from><interface-ref name="Counter" scoped="" ref="0x7f1a279b7ce0"/></from>
          <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1a279b0390"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="67:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
        <short>&#10; Msp430Timer32khzMapC presents as paramaterized interfaces all of the 32khz&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new Alarm32khz16C()&#34;, &#34;new AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; Msp430Timer32khzMapC presents as paramaterized interfaces all of the 32khz&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new Alarm32khz16C()&#34;, &#34;new AlarmMilli32C()&#34;, and so on.&#10;&#10; Platforms based on the MSP430 are encouraged to copy in and override this&#10; file, presenting only the hardware timers that are available for allocation&#10; on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="77:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
          <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a285bf670"/>
          <arguments>
            <value cst="I:0">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </from>
          <to><interface-ref name="Timer2_A" scoped="" ref="0x7f1a2857cd80"/></to>
        </wire>
        <wire loc="78:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
          <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a285bc3f0"/>
          <arguments>
            <value cst="I:0">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </from>
          <to><interface-ref name="Control2_A1" scoped="" ref="0x7f1a28576d50"/></to>
        </wire>
        <wire loc="79:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
          <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a285bbcf0"/>
          <arguments>
            <value cst="I:0">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </from>
          <to><interface-ref name="Compare2_A1" scoped="" ref="0x7f1a28574170"/></to>
        </wire>
        <wire loc="81:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
          <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a285bf670"/>
          <arguments>
            <value cst="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </from>
          <to><interface-ref name="Timer2_A" scoped="" ref="0x7f1a2857cd80"/></to>
        </wire>
        <wire loc="82:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
          <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a285bc3f0"/>
          <arguments>
            <value cst="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </from>
          <to><interface-ref name="Control2_A2" scoped="" ref="0x7f1a28572020"/></to>
        </wire>
        <wire loc="83:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
          <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a285bbcf0"/>
          <arguments>
            <value cst="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </from>
          <to><interface-ref name="Compare2_A2" scoped="" ref="0x7f1a28571580"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="CC1101DriverLayerP" loc="30:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplMsp430GeneralIORenDsP" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc" abstract="" safe="">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f1a28a1bbf0" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
          <component-ref qname="HplMsp430GeneralIORenDsP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f1a28a18020" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
          <component-ref qname="HplMsp430GeneralIORenDsP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f1a28a183d0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
          <component-ref qname="HplMsp430GeneralIORenDsP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_ren_addr" ref="0x7f1a28a18780" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
          <component-ref qname="HplMsp430GeneralIORenDsP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_ds_addr" ref="0x7f1a28a18b20" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
          <component-ref qname="HplMsp430GeneralIORenDsP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f1a28a17020" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
          <component-ref qname="HplMsp430GeneralIORenDsP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
          <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1a27de4870"/></from>
          <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1a27ddd030"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="Msp430UsciB0P" loc="4:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
      <documentation loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
        <short> A non-generic instance of Msp430UsciC for USCI_B0.</short>
        <long> A non-generic instance of Msp430UsciC for USCI_B0. *</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="20:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
          <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a281761d0"/></from>
          <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a28167a60"/></to>
        </wire>
        <wire loc="24:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
          <from><interface-ref name="Interrupts" scoped="" ref="0x7f1a28173620"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a28168570"/></to>
        </wire>
        <wire loc="18:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
          <from><interface-ref name="USCI" scoped="" ref="0x7f1a281826c0"/></from>
          <to><interface-ref name="Usci" scoped="" ref="0x7f1a28170450"/></to>
        </wire>
        <wire loc="21:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
          <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28176a00"/></from>
          <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28165270"/></to>
        </wire>
        <wire loc="19:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a28178e70"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a28168c90"/></to>
        </wire>
        <wire loc="22:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28174790"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28165e80"/></to>
        </wire>
        <wire loc="23:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28164da0"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a281722c0"/></to>
        </wire>
        <wire loc="27:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
          <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a281646a0"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a2815e620"/></to>
        </wire>
        <wire loc="28:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
          <from><interface-ref name="Usci" scoped="" ref="0x7f1a2815ed50"/></from>
          <to><interface-ref name="Usci" scoped="" ref="0x7f1a28170450"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="HplRadioSpiP" loc="1:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiP.nc">
      <module/>
    </component>
    <component qname="DiagMsgC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsgC.nc">
      <configuration/>
      <wiring>
        <wire loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsgC.nc">
          <from><interface-ref name="DiagMsg" scoped="" ref="0x7f1a27c26020"/></from>
          <to><interface-ref name="DiagMsg" scoped="" ref="0x7f1a27c20200"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430UsciSpiP" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc" abstract="" safe="">
      <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
        <short>&#10; Implement the SPI-related interfaces for a MSP430 USCI module&#10; instance.</short>
        <long>&#10; Implement the SPI-related interfaces for a MSP430 USCI module&#10; instance.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Jo&#9155;&#9123;o Gon&#9155;&#9127;alves &#60;joao.m.goncalves@ist.utl.pt>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC1101RadioC" loc="27:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <configuration/>
      <wiring>
        <wire loc="197:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SplitControl" scoped="" ref="0x7f1a28fd2920"/></from>
          <to><interface-ref name="SplitControl" scoped="" ref="0x7f1a27d36880"/></to>
        </wire>
        <wire loc="279:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a28fa3020"/></from>
          <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a27b343b0"/></to>
        </wire>
        <wire loc="150:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f1a28fc5020"/></from>
          <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1a27ef4a10"/></to>
        </wire>
        <wire loc="138:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SendResource" scoped="" ref="0x7f1a28fbd2c0"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a27f2aa90"/></to>
        </wire>
        <wire loc="114:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28fcb4d0"/></from>
          <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28df5420"/></to>
        </wire>
        <wire loc="111:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="AMSend" scoped="" ref="0x7f1a28fcf980"/></from>
          <to><interface-ref name="AMSend" scoped="" ref="0x7f1a28df76c0"/></to>
        </wire>
        <wire loc="113:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Snoop" scoped="" ref="0x7f1a28fcc900"/></from>
          <to><interface-ref name="Snoop" scoped="" ref="0x7f1a28df6c90"/></to>
        </wire>
        <wire loc="151:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a28fae490"/></from>
          <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27e1dc40"/></to>
        </wire>
        <wire loc="152:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f1a28fb6890"/></from>
          <to><interface-ref name="Packet" scoped="" ref="0x7f1a27f23ac0"/></to>
        </wire>
        <wire loc="277:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a28fa7a90"/></from>
          <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a27b38e80"/></to>
        </wire>
        <wire loc="198:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a28fac080"/></from>
          <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a27d1f270"/></to>
        </wire>
        <wire loc="116:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f1a28fc8ba0"/></from>
          <to><interface-ref name="Packet" scoped="" ref="0x7f1a28df88b0"/></to>
        </wire>
        <wire loc="112:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Receive" scoped="" ref="0x7f1a28fcecb0"/></from>
          <to><interface-ref name="Receive" scoped="" ref="0x7f1a28df6530"/></to>
        </wire>
        <wire loc="250:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a28f9e130"/></from>
          <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a27b7fad0"/></to>
        </wire>
        <wire loc="281:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a28fa0bb0"/></from>
          <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27b2aa40"/></to>
        </wire>
        <wire loc="278:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a28faa540"/></from>
          <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a27b2ee70"/></to>
        </wire>
        <wire loc="231:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a28fb5670"/></from>
          <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27c34600"/></to>
        </wire>
        <wire loc="148:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f1a28fbfa60"/></from>
          <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f1a27ef5720"/></to>
        </wire>
        <wire loc="118:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28fca1d0"/></from>
          <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28df5b80"/></to>
        </wire>
        <wire loc="177:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketLink" scoped="" ref="0x7f1a28facb70"/></from>
          <to><interface-ref name="PacketLink" scoped="" ref="0x7f1a27d40a10"/></to>
        </wire>
        <wire loc="206:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="RadioChannel" scoped="" ref="0x7f1a28fab930"/></from>
          <to><interface-ref name="RadioChannel" scoped="" ref="0x7f1a27cacd90"/></to>
        </wire>
        <wire loc="115:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="AMPacket" scoped="" ref="0x7f1a28fc9470"/></from>
          <to><interface-ref name="AMPacket" scoped="" ref="0x7f1a28df9280"/></to>
        </wire>
        <wire loc="251:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a28f9a3f0"/></from>
          <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a27b82c90"/></to>
        </wire>
        <wire loc="149:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1a28fc6840"/></from>
          <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1a27ef4440"/></to>
        </wire>
        <wire loc="280:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a28fa0350"/></from>
          <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a27b2a1e0"/></to>
        </wire>
        <wire loc="119:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28fcadf0"/></from>
          <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28df33e0"/></to>
        </wire>
        <wire loc="92:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a28f4f880"/></from>
          <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27e20b20"/></to>
        </wire>
        <wire loc="93:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28f478d0"/></from>
          <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28eb6210"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="94:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1a28f40160"/></from>
          <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a27b7fad0"/></to>
        </wire>
        <wire loc="95:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="CC1101Packet" scoped="" ref="0x7f1a28f4b020"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b39d90"/></to>
        </wire>
        <wire loc="100:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Alarm" scoped="" ref="0x7f1a28eaa2c0"/></from>
          <to><interface-ref name="Alarm" scoped="" ref="0x7f1a27b29dd0"/></to>
        </wire>
        <wire loc="106:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Config" scoped="" ref="0x7f1a28df18c0"/></from>
          <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f1a28f6be30"/></to>
        </wire>
        <wire loc="107:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a28df28f0"/></from>
          <to><interface-ref name="BareSend" scoped="" ref="0x7f1a28de9550"/></to>
        </wire>
        <wire loc="108:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a28df12b0"/></from>
          <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f1a27eb4770"/></to>
        </wire>
        <wire loc="109:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a28df3a70"/></from>
          <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f1a27eb4d80"/></to>
        </wire>
        <wire loc="127:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a28dda910"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a27f2aa90"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="131:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a28dda020"/></from>
          <to><interface-ref name="TinyosSend" scoped="" ref="0x7f1a27eb5e00"/></to>
        </wire>
        <wire loc="143:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27ef3080"/></from>
          <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27e20b20"/></to>
        </wire>
        <wire loc="144:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27eef120"/></from>
          <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f1a27eb60a0"/></to>
        </wire>
        <wire loc="145:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27eefa50"/></from>
          <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1a27eb69d0"/></to>
        </wire>
        <wire loc="146:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27ef02e0"/></from>
          <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27eb5020"/></to>
        </wire>
        <wire loc="159:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27eb2c40"/></from>
          <to><interface-ref name="Send" scoped="" ref="0x7f1a27db1a40"/></to>
        </wire>
        <wire loc="160:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27eb15d0"/></from>
          <to><interface-ref name="Receive" scoped="" ref="0x7f1a27d40440"/></to>
        </wire>
        <wire loc="161:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a27eb1be0"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27e1b020"/></to>
        </wire>
        <wire loc="166:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a27e1be60"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27d3f720"/></to>
        </wire>
        <wire loc="171:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Config" scoped="" ref="0x7f1a27daed70"/></from>
          <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f1a28f809c0"/></to>
        </wire>
        <wire loc="172:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27dafc00"/></from>
          <to><interface-ref name="Send" scoped="" ref="0x7f1a27d419c0"/></to>
        </wire>
        <wire loc="178:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27d3b400"/></from>
          <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27c34600"/></to>
        </wire>
        <wire loc="179:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27d3d630"/></from>
          <to><interface-ref name="Send" scoped="" ref="0x7f1a27d21440"/></to>
        </wire>
        <wire loc="180:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27d3c020"/></from>
          <to><interface-ref name="Receive" scoped="" ref="0x7f1a27d21d70"/></to>
        </wire>
        <wire loc="181:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a27d3c630"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27d203d0"/></to>
        </wire>
        <wire loc="193:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubControl" scoped="" ref="0x7f1a27d1fd90"/></from>
          <to><interface-ref name="SplitControl" scoped="" ref="0x7f1a27cad3a0"/></to>
        </wire>
        <wire loc="194:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27d1e8c0"/></from>
          <to><interface-ref name="Send" scoped="" ref="0x7f1a27cade60"/></to>
        </wire>
        <wire loc="195:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27d1d2b0"/></from>
          <to><interface-ref name="Receive" scoped="" ref="0x7f1a27cac7c0"/></to>
        </wire>
        <wire loc="196:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a27d1d8c0"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b7b7e0"/></to>
        </wire>
        <wire loc="203:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="RadioSend" scoped="" ref="0x7f1a27caa590"/></from>
          <to><interface-ref name="RadioSend" scoped="" ref="0x7f1a27c8fa40"/></to>
        </wire>
        <wire loc="204:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27caae80"/></from>
          <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27daf400"/></to>
        </wire>
        <wire loc="205:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="RadioState" scoped="" ref="0x7f1a27cab750"/></from>
          <to><interface-ref name="RadioState" scoped="" ref="0x7f1a27b4cc20"/></to>
        </wire>
        <wire loc="210:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27dae5d0"/></from>
          <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27c8e400"/></to>
        </wire>
        <wire loc="220:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Config" scoped="" ref="0x7f1a27c86b40"/></from>
          <to><interface-ref name="DummyConfig" scoped="" ref="0x7f1a28f6aa50"/></to>
        </wire>
        <wire loc="221:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27c88440"/></from>
          <to><interface-ref name="RadioSend" scoped="" ref="0x7f1a27c35590"/></to>
        </wire>
        <wire loc="222:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27c88d70"/></from>
          <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27c35e80"/></to>
        </wire>
        <wire loc="229:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f1a27c30e60"/></from>
          <to><interface-ref name="PacketFlag" scoped="" ref="0x7f1a27b729b0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="230:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a27c310e0"/></from>
          <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28eb6210"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="232:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Config" scoped="" ref="0x7f1a27c31d30"/></from>
          <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f1a28f85550"/></to>
        </wire>
        <wire loc="233:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27c33020"/></from>
          <to><interface-ref name="RadioSend" scoped="" ref="0x7f1a27be3a40"/></to>
        </wire>
        <wire loc="234:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27c33950"/></from>
          <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27be2400"/></to>
        </wire>
        <wire loc="235:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="DiagMsg" scoped="" ref="0x7f1a27c2f910"/></from>
          <to><interface-ref name="DiagMsg" scoped="" ref="0x7f1a27c26020"/></to>
        </wire>
        <wire loc="240:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Config" scoped="" ref="0x7f1a27bdab40"/></from>
          <to><interface-ref name="DummyConfig" scoped="" ref="0x7f1a28f6aa50"/></to>
        </wire>
        <wire loc="241:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27bdc440"/></from>
          <to><interface-ref name="RadioSend" scoped="" ref="0x7f1a27b4ba40"/></to>
        </wire>
        <wire loc="242:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27bdcd70"/></from>
          <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27b4a400"/></to>
        </wire>
        <wire loc="243:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f1a27bdb5a0"/></from>
          <to><interface-ref name="RadioCCA" scoped="" ref="0x7f1a27b395c0"/></to>
        </wire>
        <wire loc="248:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27b7a760"/></from>
          <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27b2aa40"/></to>
        </wire>
        <wire loc="249:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a27b78800"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b71590"/></to>
        </wire>
        <wire loc="252:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f1a27b77760"/></from>
          <to><interface-ref name="PacketFlag" scoped="" ref="0x7f1a27b729b0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="257:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a27b514a0"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b39d90"/></to>
        </wire>
        <wire loc="267:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Config" scoped="" ref="0x7f1a27b42b40"/></from>
          <to><interface-ref name="DummyConfig" scoped="" ref="0x7f1a28f6aa50"/></to>
        </wire>
        <wire loc="268:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubSend" scoped="" ref="0x7f1a27b44440"/></from>
          <to><interface-ref name="RadioSend" scoped="" ref="0x7f1a27b3a460"/></to>
        </wire>
        <wire loc="269:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubReceive" scoped="" ref="0x7f1a27b44d70"/></from>
          <to><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27b3add0"/></to>
        </wire>
        <wire loc="270:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="SubState" scoped="" ref="0x7f1a27b46410"/></from>
          <to><interface-ref name="RadioState" scoped="" ref="0x7f1a27b3d630"/></to>
        </wire>
        <wire loc="275:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="Config" scoped="" ref="0x7f1a27b24200"/></from>
          <to><interface-ref name="CC1101DriverConfig" scoped="" ref="0x7f1a28f8d350"/></to>
        </wire>
        <wire loc="276:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1a27b232e0"/></from>
          <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a27b7fad0"/></to>
        </wire>
        <wire loc="283:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f1a27b1f110"/></from>
          <to><interface-ref name="PacketFlag" scoped="" ref="0x7f1a27b729b0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="284:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f1a27b1fca0"/></from>
          <to><interface-ref name="PacketFlag" scoped="" ref="0x7f1a27b729b0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="285:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f1a27b1e8d0"/></from>
          <to><interface-ref name="PacketFlag" scoped="" ref="0x7f1a27b729b0"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="286:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
          <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a27b1d470"/></from>
          <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28eb6210"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component>
    <component qname="HplRadioSpiC" loc="4:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
      <configuration/>
      <wiring>
        <wire loc="20:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
          <from><interface-ref name="SpiBlock" scoped="" ref="0x7f1a27992c70"/></from>
          <to><interface-ref name="SpiBlock" scoped="" ref="0x7f1a27983020"/></to>
        </wire>
        <wire loc="19:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
          <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1a27992470"/></from>
          <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1a27985840"/></to>
        </wire>
        <wire loc="18:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
          <from><interface-ref name="SpiByte" scoped="" ref="0x7f1a27993d60"/></from>
          <to><interface-ref name="SpiByte" scoped="" ref="0x7f1a279835f0"/></to>
        </wire>
        <wire loc="17:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a279930c0"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a27986470"/></to>
        </wire>
        <wire loc="21:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
          <from><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a27982440"/></from>
          <to><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2797e020"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f1a28554920" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f1a28554cc0" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f1a285530d0" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f1a28553450" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f1a285537d0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f1a28553b40" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f1a28552020" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f1a285523b0" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f1a28552780" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1a2839d6f0" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1a2839d6f0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1a28356020" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1a28356020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1a28356410" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1a28356410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1a28356bf0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1a28356bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1a28355020" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430UsciSpiB0P" loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <configuration/>
      <wiring>
        <wire loc="26:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2818c020"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2813f8f0"/></to>
        </wire>
        <wire loc="28:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="SpiBlock" scoped="" ref="0x7f1a2818f4e0"/></from>
          <to><interface-ref name="SpiBlock" scoped="" ref="0x7f1a28140480"/></to>
        </wire>
        <wire loc="27:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1a28192cb0"/></from>
          <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1a28141ce0"/></to>
        </wire>
        <wire loc="29:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="SpiByte" scoped="" ref="0x7f1a2818fb00"/></from>
          <to><interface-ref name="SpiByte" scoped="" ref="0x7f1a28140a50"/></to>
        </wire>
        <wire loc="30:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2818d190"/></from>
          <to><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2813f060"/></to>
        </wire>
        <wire loc="21:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="Usci" scoped="" ref="0x7f1a2813d140"/></from>
          <to><interface-ref name="USCI" scoped="" ref="0x7f1a281826c0"/></to>
        </wire>
        <wire loc="22:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="Interrupts" scoped="" ref="0x7f1a281352b0"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a28173620"/>
          <arguments>
            <value cst="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
        <wire loc="23:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a2812c410"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28174790"/></to>
        </wire>
        <wire loc="25:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2812de00"/></from>
          <to><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2818ce20"/></to>
        </wire>
        <wire loc="31:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="SIMO" scoped="" ref="0x7f1a281358c0"/></from>
          <to><interface-ref name="SIMO" scoped="" ref="0x7f1a2818b540"/></to>
        </wire>
        <wire loc="32:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="SOMI" scoped="" ref="0x7f1a281339f0"/></from>
          <to><interface-ref name="SOMI" scoped="" ref="0x7f1a28189850"/></to>
        </wire>
        <wire loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
          <from><interface-ref name="CLK" scoped="" ref="0x7f1a28131b80"/></from>
          <to><interface-ref name="CLK" scoped="" ref="0x7f1a28185ad0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="HplMsp430UsciInterruptsA0P" loc="7:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA0P.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA0P.nc">
        <short>&#10; Define the interrupt handlers for USCI module A0.</short>
        <long>&#10; Define the interrupt handlers for USCI module A0.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LocalTime32khzC" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime32khzC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime32khzC.nc">
        <short> Provide the current time in 32KHz ticks.</short>
        <long> Provide the current time in 32KHz ticks.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime32khzC.nc">
          <from><interface-ref name="LocalTime" scoped="" ref="0x7f1a2781d5d0"/></from>
          <to><interface-ref name="LocalTime" scoped="" ref="0x7f1a2780dcf0"/></to>
        </wire>
        <wire loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime32khzC.nc">
          <from><interface-ref name="Counter" scoped="" ref="0x7f1a2780b020"/></from>
          <to><interface-ref name="Counter" scoped="" ref="0x7f1a2793c020"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
          <from><interface-ref name="SplitControl" scoped="" ref="0x7f1a27d35280"/></from>
          <to><interface-ref name="SubControl" scoped="" ref="0x7f1a27d32970"/></to>
        </wire>
        <wire loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
          <from><interface-ref name="Send" scoped="" ref="0x7f1a27d35dd0"/></from>
          <to><interface-ref name="SubSend" scoped="" ref="0x7f1a27d31500"/></to>
        </wire>
        <wire loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
          <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27d34e30"/></from>
          <to><interface-ref name="SubPacket" scoped="" ref="0x7f1a27d30700"/></to>
        </wire>
        <wire loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
          <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a27d33cb0"/></from>
          <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a27d2dae0"/></to>
        </wire>
        <wire loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
          <from><interface-ref name="Receive" scoped="" ref="0x7f1a27d347f0"/></from>
          <to><interface-ref name="SubReceive" scoped="" ref="0x7f1a27d30020"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
          <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27bcb850"/></from>
          <to><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b8c3b0"/></to>
        </wire>
        <wire loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
          <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a27bcfaf0"/></from>
          <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a27b906f0"/></to>
        </wire>
        <wire loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
          <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a27bd3920"/></from>
          <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a27bc4830"/></to>
        </wire>
        <wire loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
          <from><interface-ref name="SubPacket" scoped="" ref="0x7f1a27b872b0"/></from>
          <to><interface-ref name="SubPacket" scoped="" ref="0x7f1a27bc8bb0"/></to>
        </wire>
        <wire loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
          <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27b8a020"/></from>
          <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27bcaa50"/></to>
        </wire>
        <wire loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
          <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1a27b891e0"/></from>
          <to><interface-ref name="LocalTime" scoped="" ref="0x7f1a2860ed50"/></to>
        </wire>
        <wire loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
          <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f1a27b8b310"/></from>
          <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f1a27bc7b80"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="PlatformClockC" loc="44:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/clock/PlatformClockC.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/clock/PlatformClockC.nc">
        <short>&#10; Top-level initialization of anything to do with the clock&#10; subsystem.</short>
        <long>&#10; Top-level initialization of anything to do with the clock&#10; subsystem.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="48:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/clock/PlatformClockC.nc">
          <from><interface-ref name="Init" scoped="" ref="0x7f1a27fa04e0"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a27f8e380"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1a287541d0" loc="89:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="106:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
          <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a28751020"/></from>
          <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a286ec530"/></to>
        </wire>
        <wire loc="107:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
          <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28751850"/></from>
          <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a286eccb0"/></to>
        </wire>
        <wire loc="105:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a28754bd0"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a286ed720"/></to>
        </wire>
        <wire loc="108:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28750600"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a286eb930"/></to>
        </wire>
        <wire loc="103:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
          <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a2874de60"/></to>
        </wire>
        <wire loc="109:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a286ea270"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2874f3f0"/></to>
        </wire>
        <wire loc="111:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
          <from><interface-ref name="Queue" scoped="" ref="0x7f1a286eaa30"/></from>
          <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1a2874c4a0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a28296df0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a28296df0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="54:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliP.nc">
          <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1a28281430"/></from>
          <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1a28606020"/></to>
        </wire>
        <wire loc="53:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliP.nc">
          <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a2860a850"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
          <from><interface-ref name="Alarm" scoped="" ref="0x7f1a285eb5d0"/></from>
          <to><interface-ref name="Alarm" scoped="" ref="0x7f1a283b1a20"/></to>
        </wire>
        <wire loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
          <from><interface-ref name="Init" scoped="" ref="0x7f1a285eebd0"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a283b1190"/></to>
        </wire>
        <wire loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
          <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a283adb90"/></from>
          <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a283d7830"/></to>
        </wire>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
          <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a283ab2b0"/></from>
          <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a283d5020"/></to>
        </wire>
        <wire loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
          <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a283aa5d0"/></from>
          <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a283d4440"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1a283d2cd0" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1a283d2cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430CounterMicroC.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 MiHz counter for the MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 MiHz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;&#10; The cc430f5137 and the msp430f5138{,a} (both x5 family) have at a minimum the&#10; T0A5 and T1A3 timer h/w.  We assign T0A to the 32KiHz timer and T1A to the&#10; 1 MiHz (TMicro) timer (see Msp430CounterMicro).&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430CounterMicroC.nc">
          <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1a279b0390"/></from>
          <to><interface-ref name="Counter" scoped="" ref="0x7f1a279acb80"/></to>
        </wire>
        <wire loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430CounterMicroC.nc">
          <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a279aac50"/></from>
          <to><interface-ref name="Timer1_A" scoped="" ref="0x7f1a28587cf0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="PlatformC" loc="44:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
          <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1a28dc66c0"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a28dc17d0"/></to>
        </wire>
        <wire loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
          <from><interface-ref name="Platform" scoped="" ref="0x7f1a28dbd0f0"/></from>
          <to><interface-ref name="Platform" scoped="" ref="0x7f1a28dc1e00"/></to>
        </wire>
        <wire loc="57:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
          <from><interface-ref name="PeripheralInit" scoped="" ref="0x7f1a28db9a10"/></from>
          <to><interface-ref name="PeripheralInit" scoped="" ref="0x7f1a28dbd9b0"/></to>
        </wire>
        <wire loc="61:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
          <from><interface-ref name="PlatformPins" scoped="" ref="0x7f1a28dbb710"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a28dad200"/></to>
        </wire>
        <wire loc="64:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
          <from><interface-ref name="PlatformLeds" scoped="" ref="0x7f1a28dbbdd0"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a28dbc850"/></to>
        </wire>
        <wire loc="70:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
          <from><interface-ref name="PlatformClock" scoped="" ref="0x7f1a28dbab70"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a27fa04e0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="TaskletC" loc="38:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="Msp430UsciB1P" loc="4:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
      <documentation loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
        <short> A non-generic instance of Msp430UsciC for USCI_B1.</short>
        <long> A non-generic instance of Msp430UsciC for USCI_B1. *</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="20:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
          <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a280d25e0"/></from>
          <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a280c2020"/></to>
        </wire>
        <wire loc="24:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
          <from><interface-ref name="Interrupts" scoped="" ref="0x7f1a280d0960"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a280c4a20"/></to>
        </wire>
        <wire loc="18:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
          <from><interface-ref name="USCI" scoped="" ref="0x7f1a280e4d20"/></from>
          <to><interface-ref name="Usci" scoped="" ref="0x7f1a280cd7a0"/></to>
        </wire>
        <wire loc="21:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
          <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a280d2e10"/></from>
          <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a280c27a0"/></to>
        </wire>
        <wire loc="19:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a280d4340"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a280c3190"/></to>
        </wire>
        <wire loc="22:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a280d1ac0"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a280c1400"/></to>
        </wire>
        <wire loc="23:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a280c03a0"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a280cf5e0"/></to>
        </wire>
        <wire loc="27:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
          <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a280c1c00"/></from>
          <to><interface-ref name="Interrupts" scoped="" ref="0x7f1a280bbbc0"/></to>
        </wire>
        <wire loc="28:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
          <from><interface-ref name="Usci" scoped="" ref="0x7f1a280b83d0"/></from>
          <to><interface-ref name="Usci" scoped="" ref="0x7f1a280cd7a0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="TimerMilliC" loc="44:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="52:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliC.nc">
          <from><interface-ref name="Timer" scoped="" ref="0x7f1a27d51630"/></from>
          <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1a28281430"/>
          <arguments>
            <value cst="U:">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
          <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1a28606020"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a282a3150"/></to>
        </wire>
        <wire loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
          <from><interface-ref name="LocalTime" scoped="" ref="0x7f1a285f8610"/></from>
          <to><interface-ref name="LocalTime" scoped="" ref="0x7f1a28295830"/></to>
        </wire>
        <wire loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
          <from><interface-ref name="Init" scoped="" ref="0x7f1a2860a850"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a2831f020"/></to>
        </wire>
        <wire loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
          <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1a2829d640"/></from>
          <to><interface-ref name="Timer" scoped="" ref="0x7f1a282f32f0"/></to>
        </wire>
        <wire loc="62:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
          <from><interface-ref name="Alarm" scoped="" ref="0x7f1a282ed850"/></from>
          <to><interface-ref name="Alarm" scoped="" ref="0x7f1a2831f870"/></to>
        </wire>
        <wire loc="63:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
          <from><interface-ref name="Counter" scoped="" ref="0x7f1a28294b30"/></from>
          <to><interface-ref name="Counter" scoped="" ref="0x7f1a28397900"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/hakan/github/pillforge/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/hakan/github/pillforge/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="26:/home/hakan/github/pillforge/tinyos/tos/system/LocalTimeMilliC.nc">
          <from><interface-ref name="LocalTime" scoped="" ref="0x7f1a2860ed50"/></from>
          <to><interface-ref name="LocalTime" scoped="" ref="0x7f1a285f8610"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="PlatformClockP" loc="152:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/clock/PlatformClockP.nc">
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="76:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
          <from><interface-ref name="SplitControl" scoped="" ref="0x7f1a27ca56a0"/></from>
          <to><interface-ref name="SubControl" scoped="" ref="0x7f1a27c9d9c0"/></to>
        </wire>
        <wire loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
          <from><interface-ref name="RadioCCA" scoped="" ref="0x7f1a27c9cab0"/></from>
          <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f1a27c97c10"/></to>
        </wire>
        <wire loc="70:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
          <from><interface-ref name="RadioState" scoped="" ref="0x7f1a27ca12e0"/></from>
          <to><interface-ref name="SubState" scoped="" ref="0x7f1a27c9a830"/></to>
        </wire>
        <wire loc="74:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
          <from><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27c9e2e0"/></from>
          <to><interface-ref name="SubPacket" scoped="" ref="0x7f1a27c96510"/></to>
        </wire>
        <wire loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
          <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f1a27c9d220"/></from>
          <to><interface-ref name="Config" scoped="" ref="0x7f1a27c954f0"/></to>
        </wire>
        <wire loc="72:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
          <from><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27ca0a90"/></from>
          <to><interface-ref name="SubReceive" scoped="" ref="0x7f1a27c973a0"/></to>
        </wire>
        <wire loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
          <from><interface-ref name="BareReceive" scoped="" ref="0x7f1a27ca2c30"/></from>
          <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f1a27c9a150"/></to>
        </wire>
        <wire loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
          <from><interface-ref name="RadioSend" scoped="" ref="0x7f1a27ca0120"/></from>
          <to><interface-ref name="SubSend" scoped="" ref="0x7f1a27c99810"/></to>
        </wire>
        <wire loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
          <from><interface-ref name="BareSend" scoped="" ref="0x7f1a27ca22d0"/></from>
          <to><interface-ref name="SubBareSend" scoped="" ref="0x7f1a27c9b6a0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
      <configuration/>
      <wiring>
        <wire loc="49:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Init" scoped="" ref="0x7f1a28dbc850"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a28d40280"/></to>
        </wire>
        <wire loc="48:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Leds" scoped="" ref="0x7f1a28da5020"/></from>
          <to><interface-ref name="Leds" scoped="" ref="0x7f1a28d40850"/></to>
        </wire>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a28900490"/></from>
          <to><interface-ref name="Port10" scoped="" ref="0x7f1a28d1e410"/></to>
        </wire>
        <wire loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Led0" scoped="" ref="0x7f1a28d3db50"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a28911330"/></to>
        </wire>
        <wire loc="60:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288fbc50"/></from>
          <to><interface-ref name="Port81" scoped="" ref="0x7f1a28ca0e50"/></to>
        </wire>
        <wire loc="61:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Led1" scoped="" ref="0x7f1a28d3cda0"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288fc9e0"/></to>
        </wire>
        <wire loc="65:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288f42f0"/></from>
          <to><interface-ref name="Port82" scoped="" ref="0x7f1a28c9d200"/></to>
        </wire>
        <wire loc="66:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Led2" scoped="" ref="0x7f1a28d3a020"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288f6120"/></to>
        </wire>
        <wire loc="69:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288ef930"/></from>
          <to><interface-ref name="Port11" scoped="" ref="0x7f1a28d29710"/></to>
        </wire>
        <wire loc="70:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Led3" scoped="" ref="0x7f1a28d392b0"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288f0710"/></to>
        </wire>
        <wire loc="73:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288e9020"/></from>
          <to><interface-ref name="Port12" scoped="" ref="0x7f1a28d1c9a0"/></to>
        </wire>
        <wire loc="74:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Led4" scoped="" ref="0x7f1a28d37440"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288ebd10"/></to>
        </wire>
        <wire loc="77:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288e47a0"/></from>
          <to><interface-ref name="Port13" scoped="" ref="0x7f1a28d1acc0"/></to>
        </wire>
        <wire loc="78:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Led5" scoped="" ref="0x7f1a28d365d0"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288e5580"/></to>
        </wire>
        <wire loc="81:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288dfde0"/></from>
          <to><interface-ref name="Port14" scoped="" ref="0x7f1a28d17020"/></to>
        </wire>
        <wire loc="82:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Led6" scoped="" ref="0x7f1a28d35760"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288e0b90"/></to>
        </wire>
        <wire loc="85:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288d8610"/></from>
          <to><interface-ref name="Port15" scoped="" ref="0x7f1a28d153f0"/></to>
        </wire>
        <wire loc="86:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
          <from><interface-ref name="Led7" scoped="" ref="0x7f1a28d348f0"/></from>
          <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288d9390"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
          <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28eebcf0"/></from>
          <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28edcbc0"/></to>
        </wire>
        <wire loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
          <from><interface-ref name="Alarm" scoped="" ref="0x7f1a28edbb50"/></from>
          <to><interface-ref name="Alarm" scoped="" ref="0x7f1a28ee7690"/></to>
        </wire>
        <wire loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
          <from><interface-ref name="Tasklet" scoped="" ref="0x7f1a28ebbd90"/></from>
          <to><interface-ref name="Tasklet" scoped="" ref="0x7f1a28eb5020"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="CC1101ActiveMessageC" loc="31:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <configuration/>
      <wiring>
        <wire loc="77:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="SplitControl" scoped="" ref="0x7f1a29000580"/></from>
          <to><interface-ref name="SplitControl" scoped="" ref="0x7f1a28fd2920"/></to>
        </wire>
        <wire loc="97:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a28fea020"/></from>
          <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a28fa3020"/></to>
        </wire>
        <wire loc="101:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a28fdfe60"/></from>
          <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a28f9a3f0"/></to>
        </wire>
        <wire loc="82:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28ff9020"/></from>
          <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28fcb4d0"/></to>
        </wire>
        <wire loc="87:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="Packet" scoped="" ref="0x7f1a28ff7020"/></from>
          <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f1a28fc8ba0"/></to>
        </wire>
        <wire loc="79:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="AMSend" scoped="" ref="0x7f1a28ffc5c0"/></from>
          <to><interface-ref name="AMSend" scoped="" ref="0x7f1a28fcf980"/></to>
        </wire>
        <wire loc="81:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="Snoop" scoped="" ref="0x7f1a28ffa430"/></from>
          <to><interface-ref name="Snoop" scoped="" ref="0x7f1a28fcc900"/></to>
        </wire>
        <wire loc="96:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a28fefa90"/></from>
          <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a28fa7a90"/></to>
        </wire>
        <wire loc="91:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a28ff4e80"/></from>
          <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a28fac080"/></to>
        </wire>
        <wire loc="104:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1a28fda020"/></from>
          <to><interface-ref name="UnimplementedPacketTimeStamp32khz" scoped="" ref="0x7f1a28fd6210"/></to>
        </wire>
        <wire loc="80:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="Receive" scoped="" ref="0x7f1a28ffb800"/></from>
          <to><interface-ref name="Receive" scoped="" ref="0x7f1a28fcecb0"/></to>
        </wire>
        <wire loc="102:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a28fe6d40"/></from>
          <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a28f9e130"/></to>
        </wire>
        <wire loc="100:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a28fe2820"/></from>
          <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a28fa0bb0"/></to>
        </wire>
        <wire loc="95:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a28ff1540"/></from>
          <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a28faa540"/></to>
        </wire>
        <wire loc="90:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a28ff44e0"/></from>
          <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a28fb5670"/></to>
        </wire>
        <wire loc="84:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28ff9c70"/></from>
          <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28fca1d0"/></to>
        </wire>
        <wire loc="92:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="PacketLink" scoped="" ref="0x7f1a28ff3990"/></from>
          <to><interface-ref name="PacketLink" scoped="" ref="0x7f1a28facb70"/></to>
        </wire>
        <wire loc="88:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="AMPacket" scoped="" ref="0x7f1a28ff7c90"/></from>
          <to><interface-ref name="AMPacket" scoped="" ref="0x7f1a28fc9470"/></to>
        </wire>
        <wire loc="93:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="RadioChannel" scoped="" ref="0x7f1a28ff27a0"/></from>
          <to><interface-ref name="RadioChannel" scoped="" ref="0x7f1a28fab930"/></to>
        </wire>
        <wire loc="98:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a28fe4ae0"/></from>
          <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a28fa0350"/></to>
        </wire>
        <wire loc="85:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
          <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28ff88c0"/></from>
          <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28fcadf0"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1a28dd4590" loc="83:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="99:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a28dcec30"/></from>
          <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a27f30020"/></to>
        </wire>
        <wire loc="98:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <from><interface-ref name="Resource" scoped="" ref="0x7f1a28dd2020"/></from>
          <to><interface-ref name="Resource" scoped="" ref="0x7f1a27f31150"/></to>
        </wire>
        <wire loc="100:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28dcccd0"/></from>
          <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a27f307a0"/></to>
        </wire>
        <wire loc="96:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></from>
          <to><interface-ref name="Init" scoped="" ref="0x7f1a27f9b3f0"/></to>
        </wire>
        <wire loc="101:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a27f2f0d0"/></from>
          <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28dcd390"/></to>
        </wire>
        <wire loc="103:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <from><interface-ref name="Queue" scoped="" ref="0x7f1a27f2f890"/></from>
          <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1a27f9ba00"/></to>
        </wire>
      </wiring>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(Ieee154PacketLayerC.Ieee154PacketLayerP):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <instance>
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Alarm32khz16C" loc="41(Alarm32khz16C):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="UniqueLayerC.UniqueLayerP" loc="38(UniqueLayerC.UniqueLayerP):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <instance>
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="35(UniqueLayerC.NeighborhoodFlagC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <instance>
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer0_B1" loc="39(Msp430Timer0_B1):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:964">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:980">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_A0" loc="39(Msp430Timer0_A0):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:834">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:850">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_B2" loc="39(Msp430Timer0_B2):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:966">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:982">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer1_A1" loc="39(Msp430Timer1_A1):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:900">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:916">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer2_A2" loc="39(Msp430Timer2_A2):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:1030">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1046">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer1_A2" loc="39(Msp430Timer1_A2):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:902">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:918">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_B" loc="39(Msp430Timer0_B):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:1006">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:976">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:960">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer1_A" loc="39(Msp430Timer1_A):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:942">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:912">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:896">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_A2" loc="39(Msp430Timer0_A2):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:838">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:854">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_A3" loc="39(Msp430Timer0_A3):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:840">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:856">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_B4" loc="39(Msp430Timer0_B4):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:970">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:986">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_B5" loc="39(Msp430Timer0_B5):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:972">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:988">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer1_A0" loc="39(Msp430Timer1_A0):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:898">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:914">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer2_A0" loc="39(Msp430Timer2_A0):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:1026">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1042">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_B0" loc="39(Msp430Timer0_B0):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:962">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:978">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_A1" loc="39(Msp430Timer0_A1):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:836">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:852">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_B3" loc="39(Msp430Timer0_B3):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:968">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:984">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_A4" loc="39(Msp430Timer0_A4):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:842">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:858">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_B6" loc="39(Msp430Timer0_B6):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:974">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:990">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer2_A1" loc="39(Msp430Timer2_A1):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:1028">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1044">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer2_A" loc="39(Msp430Timer2_A):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:1070">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1040">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Timer0_A" loc="39(Msp430Timer0_A):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:878">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:848">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:832">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UsciC" loc="51(UsciC):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
        <short>&#10; Core configuration for any USCI module present on an MSP430 chip.</short>
        <long>&#10; Core configuration for any USCI module present on an MSP430 chip.&#10;&#10; There should be exactly one instance of this configuration for each&#10; USCI module; e.g., USCI_A0 or USCI_B3.  Each instance provides&#10; access to the USCI registers for its module, and maintains the&#10; resource management information required to determine which of the&#10; module's modes is currently active.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430UsciC"/>
        <arguments>
          <value cst="I:1472">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="S:Msp430Usci.A0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="UartC" loc="81(UartC):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <documentation loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
        <short>&#10; Implement the UART-related interfaces for a MSP430 USCI module&#10; instance.</short>
        <long>&#10; Implement the UART-related interfaces for a MSP430 USCI module&#10; instance.&#10;&#10; Interrupt Management&#10; --------------------&#10;&#10; Upon grant of the USCI in UART mode to a client, interrupts are&#10; turned off.&#10;&#10; On the MSP430, when the TX interrupt is raised the MCU&#10; automatically clears the UCTXIFG bit that indicates that the TXBUF&#10; is available for writing characters.  Rather than maintain local&#10; state managed by cooperation between the TX interrupt handler and&#10; the send code, we leave the TX interrupt disabled and rely on the&#10; UCTXIFG flag to indicate that single-byte transmission is&#10; permitted.  It is better and simpler to let the h/w maintain the&#10; state.&#10;&#10; An exception to this is in support of the UartSerial.send()&#10; function.  The transmit interrupt is enabled when the outgoing&#10; message is provided; subsequent sends are interrupt-driven, and the&#10; interrupt is disabled just prior to transmitting the last character&#10; of the packet.  This leaves the UCTXIFG flag set upon completion of&#10; the transfer.&#10;&#10; The receive interrupt is enabled upon configuration.  It is&#10; controlled using the UartStream functions.  While a buffered&#10; receive operation is active, received characters will be stored and&#10; no notification provided until the full packet has been received.&#10; If no buffered receive operation is active, the receivedByte()&#10; event will be signaled for each received character.  Per byte&#10; signal per each byte interrupt.&#10;&#10; As with the transmit interrupt, MCU execution of the receive&#10; interrupt clears the UCRXIFG flag, making interrupt-driven&#10; reception fundamentally incompatible with the busy-waiting&#10; UartByte.receive() method.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsciUartP"/>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMilli32C.Transform" loc="51(AlarmMilli32C.Transform):/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMilli32C.AlarmFrom" loc="41(AlarmMilli32C.AlarmFrom):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SoftCaptureC.SoftCaptureP" loc="47(SoftCaptureC.SoftCaptureP):/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc" abstract="">
      <documentation loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc">
        <short>&#10; Emulates GPIO capture functionality using GpioInterrupt and the &#10; standard 32khz counter&#10;&#10; </short>
        <long>&#10; Emulates GPIO capture functionality using GpioInterrupt and the &#10; standard 32khz counter&#10;&#10; @author Phil Buonadonna&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="SoftCaptureP"/>
      </instance>
      <module/>
    </component>
    <component qname="MessageBufferLayerC.MessageBufferLayerP" loc="39(MessageBufferLayerC.MessageBufferLayerP):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <instance>
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Counter" loc="42(Counter):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="I2CP" loc="103(I2CP):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsciI2CP"/>
      </instance>
      <module/>
    </component>
    <component qname="SpiC" loc="48(SpiC):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
        <short>&#10; Implement the SPI-related interfaces for a MSP430 USCI module&#10; instance.</short>
        <long>&#10; Implement the SPI-related interfaces for a MSP430 USCI module&#10; instance.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Jo&#9155;&#9123;o Gon&#9155;&#9127;alves &#60;joao.m.goncalves@ist.utl.pt>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsciSpiP"/>
      </instance>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.PacketLinkLayerP" loc="40(PacketLinkLayerC.PacketLinkLayerP):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <instance>
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.DelayTimerC" loc="44(PacketLinkLayerC.DelayTimerC):/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Transform" loc="54(Transform):/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC.ActiveMessageLayerP" loc="38(ActiveMessageLayerC.ActiveMessageLayerP):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <instance>
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="UsciC" loc="51(UsciC):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
        <short>&#10; Core configuration for any USCI module present on an MSP430 chip.</short>
        <long>&#10; Core configuration for any USCI module present on an MSP430 chip.&#10;&#10; There should be exactly one instance of this configuration for each&#10; USCI module; e.g., USCI_A0 or USCI_B3.  Each instance provides&#10; access to the USCI registers for its module, and maintains the&#10; resource management information required to determine which of the&#10; module's modes is currently active.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430UsciC"/>
        <arguments>
          <value cst="I:1536">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="S:Msp430Usci.A1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="CSNM" loc="42(CSNM):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="GDO2M" loc="42(GDO2M):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SoftCaptureC" loc="47(SoftCaptureC):/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
      <documentation loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
        <short>&#10; Emulates GPIO capture functionality using GpioInterrupt and the &#10; standard 32khz counter&#10;&#10; </short>
        <long>&#10; Emulates GPIO capture functionality using GpioInterrupt and the &#10; standard 32khz counter&#10;&#10; @author Phil Buonadonna&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SoftCaptureC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="GDO0M" loc="42(GDO0M):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43(Msp430InterruptC):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="P10" loc="42(P10):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:514">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:516">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:522">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:518">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P14" loc="42(P14):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:514">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:516">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:522">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:518">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P26" loc="42(P26):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:513">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:515">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:517">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:523">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:519">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P71" loc="42(P71):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:608">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:610">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:612">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:618">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:614">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P83" loc="42(P83):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:609">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:611">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:613">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:619">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:615">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P40" loc="42(P40):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:545">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:547">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:549">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:555">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:551">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P30" loc="42(P30):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:544">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:546">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:548">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:554">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:550">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P42" loc="42(P42):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:545">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:547">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:549">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:555">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:551">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P54" loc="42(P54):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:576">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:578">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:580">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:586">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:582">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P64" loc="42(P64):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:577">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:579">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:581">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:587">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:583">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P76" loc="42(P76):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:608">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:610">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:612">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:618">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:614">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P15" loc="42(P15):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:514">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:516">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:522">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:518">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P66" loc="42(P66):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:577">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:579">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:581">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:587">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:583">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P57" loc="42(P57):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:576">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:578">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:580">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:586">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:582">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P60" loc="42(P60):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:577">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:579">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:581">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:587">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:583">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P17" loc="42(P17):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:514">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:516">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:522">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:518">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P24" loc="42(P24):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:513">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:515">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:517">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:523">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:519">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P27" loc="42(P27):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:513">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:515">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:517">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:523">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:519">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P44" loc="42(P44):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:545">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:547">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:549">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:555">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:551">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P51" loc="42(P51):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:576">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:578">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:580">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:586">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:582">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PJ1" loc="42(PJ1):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIORenDsP"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:802">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:804">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:806">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:808">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P21" loc="42(P21):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:513">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:515">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:517">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:523">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:519">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P33" loc="42(P33):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:544">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:546">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:548">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:554">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:550">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P45" loc="42(P45):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:545">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:547">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:549">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:555">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:551">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P67" loc="42(P67):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:577">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:579">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:581">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:587">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:583">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P36" loc="42(P36):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:544">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:546">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:548">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:554">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:550">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P77" loc="42(P77):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:608">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:610">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:612">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:618">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:614">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P63" loc="42(P63):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:577">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:579">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:581">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:587">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:583">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P12" loc="42(P12):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:514">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:516">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:522">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:518">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P37" loc="42(P37):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:544">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:546">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:548">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:554">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:550">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P70" loc="42(P70):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:608">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:610">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:612">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:618">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:614">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P81" loc="42(P81):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:609">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:611">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:613">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:619">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:615">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P52" loc="42(P52):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:576">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:578">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:580">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:586">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:582">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P41" loc="42(P41):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:545">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:547">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:549">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:555">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:551">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P62" loc="42(P62):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:577">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:579">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:581">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:587">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:583">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P74" loc="42(P74):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:608">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:610">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:612">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:618">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:614">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P86" loc="42(P86):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:609">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:611">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:613">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:619">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:615">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P13" loc="42(P13):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:514">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:516">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:522">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:518">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P22" loc="42(P22):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:513">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:515">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:517">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:523">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:519">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P32" loc="42(P32):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:544">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:546">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:548">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:554">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:550">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P73" loc="42(P73):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:608">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:610">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:612">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:618">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:614">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P34" loc="42(P34):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:544">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:546">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:548">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:554">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:550">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P72" loc="42(P72):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:608">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:610">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:612">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:618">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:614">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P31" loc="42(P31):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:544">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:546">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:548">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:554">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:550">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P43" loc="42(P43):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:545">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:547">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:549">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:555">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:551">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P55" loc="42(P55):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:576">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:578">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:580">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:586">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:582">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P84" loc="42(P84):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:609">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:611">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:613">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:619">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:615">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P65" loc="42(P65):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:577">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:579">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:581">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:587">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:583">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PJ2" loc="42(PJ2):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIORenDsP"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:802">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:804">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:806">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:808">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P46" loc="42(P46):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:545">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:547">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:549">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:555">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:551">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P61" loc="42(P61):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:577">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:579">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:581">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:587">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:583">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P50" loc="42(P50):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:576">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:578">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:580">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:586">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:582">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P25" loc="42(P25):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:513">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:515">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:517">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:523">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:519">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P11" loc="42(P11):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:514">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:516">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:522">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:518">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P16" loc="42(P16):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:514">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:516">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:522">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:518">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P35" loc="42(P35):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:544">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:546">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:548">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:554">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:550">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P82" loc="42(P82):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:609">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:611">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:613">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:619">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:615">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P53" loc="42(P53):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:576">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:578">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:580">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:586">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:582">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P56" loc="42(P56):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:576">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:578">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:580">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:586">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:582">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P75" loc="42(P75):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:608">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:610">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:612">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:618">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:614">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P87" loc="42(P87):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:609">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:611">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:613">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:619">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:615">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P23" loc="42(P23):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:513">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:515">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:517">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:523">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:519">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P20" loc="42(P20):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:513">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:515">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:517">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:523">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:519">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P85" loc="42(P85):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:609">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:611">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:613">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:619">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:615">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PJ0" loc="42(PJ0):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIORenDsP"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:802">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:804">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:806">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:808">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PJ3" loc="42(PJ3):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIORenDsP"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:802">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:804">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:806">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:808">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P47" loc="42(P47):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:545">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:547">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:549">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:555">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:551">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="P80" loc="42(P80):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <documentation loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplMsp430GeneralIORenP"/>
        <arguments>
          <value cst="I:609">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:611">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:613">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:619">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:615">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430UsciC.ArbiterC" loc="89(HplMsp430UsciC.ArbiterC):/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="U:">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430UsciC.HplUsciP" loc="88(HplMsp430UsciC.HplUsciP):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc" abstract="">
      <documentation loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
        <short>&#10; Core implementation for any USCI module present on an MSP430 chip.</short>
        <long>&#10; Core implementation for any USCI module present on an MSP430 chip.&#10;&#10; This module makes available the module-specific registers, along&#10; with a small number of higher-level functions like generic USCI&#10; chip configuration that are shared among the various modes of the&#10; module.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Derek Baker &#60;derek@red-slate.co.uk>&#10; @author Doug Carlson &#60;carlson@cs.jhu.edu>&#10; @author Marcus Chang &#60;marcus.chang@gmail.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_USCI_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do &#34;CFLAGS += -DMSP430_USCI_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_USCI_ATOMIC_LOWLEVEL is blank, this code makes the&#10; assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomics&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;&#10; Also note that many of the fields in various registers shouldn't be&#10; set unless the device is in reset.   See the Users guide for details&#10; ie. SLAU208M for the x5 family cpus.&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="HplMsp430UsciP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Transform" loc="54(Transform):/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51(BusyWaitCounterC):/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b0270"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1a290b05e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UsciC" loc="51(UsciC):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
        <short>&#10; Core configuration for any USCI module present on an MSP430 chip.</short>
        <long>&#10; Core configuration for any USCI module present on an MSP430 chip.&#10;&#10; There should be exactly one instance of this configuration for each&#10; USCI module; e.g., USCI_A0 or USCI_B3.  Each instance provides&#10; access to the USCI registers for its module, and maintains the&#10; resource management information required to determine which of the&#10; module's modes is currently active.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430UsciC"/>
        <arguments>
          <value cst="I:1504">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="S:Msp430Usci.B0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="LowPowerListeningLayerC" loc="35(LowPowerListeningLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35(Ieee154MessageLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="SendResourceC" loc="83(SendResourceC):/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="ActiveMessageLayerC" loc="35(ActiveMessageLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35(Ieee154PacketLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="TimeStampingLayerC" loc="37(TimeStampingLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="SoftwareAckLayerC" loc="38(SoftwareAckLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="73(PacketLinkLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="MessageBufferLayerC" loc="35(MessageBufferLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="RadioAlarmC" loc="37(RadioAlarmC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35(AutoResourceAcquireLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50(TinyosNetworkLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35(UniqueLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="CollisionAvoidanceLayerC" loc="35(CollisionAvoidanceLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="TrafficMonitorLayerC" loc="35(TrafficMonitorLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38(MetadataFlagsLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="CsmaLayerC" loc="35(CsmaLayerC):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="SpiC" loc="45(SpiC):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <documentation loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
        <short>&#10; Generic configuration for a client that shares USCI_B0 in SPI mode.</short>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsciSpiB0C"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="SpiC" loc="48(SpiC):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
        <short>&#10; Implement the SPI-related interfaces for a MSP430 USCI module&#10; instance.</short>
        <long>&#10; Implement the SPI-related interfaces for a MSP430 USCI module&#10; instance.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Jo&#9155;&#9123;o Gon&#9155;&#9127;alves &#60;joao.m.goncalves@ist.utl.pt>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsciSpiP"/>
      </instance>
      <module/>
    </component>
    <component qname="CounterToLocalTime32khzC" loc="46(CounterToLocalTime32khzC):/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyC.LowPowerListeningDummyP" loc="35(LowPowerListeningDummyC.LowPowerListeningDummyP):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <instance>
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampingLayerP" loc="38(TimeStampingLayerC.TimeStampingLayerP):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <instance>
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="FcfsArbiterC.Arbiter" loc="52(FcfsArbiterC.Arbiter):/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc" abstract="">
      <documentation loc="30:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FcfsArbiterC.Queue" loc="42(FcfsArbiterC.Queue):/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="">
      <instance>
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Alarm32khz16C.Msp430Alarm" loc="43(Alarm32khz16C.Msp430Alarm):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Alarm32khz16C.Msp430Timer" loc="37(Alarm32khz16C.Msp430Timer):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Counter" loc="42(Counter):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b0270"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1a290b05e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UsciC" loc="51(UsciC):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
        <short>&#10; Core configuration for any USCI module present on an MSP430 chip.</short>
        <long>&#10; Core configuration for any USCI module present on an MSP430 chip.&#10;&#10; There should be exactly one instance of this configuration for each&#10; USCI module; e.g., USCI_A0 or USCI_B3.  Each instance provides&#10; access to the USCI registers for its module, and maintains the&#10; resource management information required to determine which of the&#10; module's modes is currently active.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430UsciC"/>
        <arguments>
          <value cst="I:1568">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="S:Msp430Usci.B1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="VirtualizeTimerC" loc="46(VirtualizeTimerC):/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46(CounterToLocalTimeC):/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41(AlarmMilli32C):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
      <wiring>
      </wiring>
    </component>
    <component qname="AlarmToTimerC" loc="46(AlarmToTimerC):/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsP" loc="45(PlatformLedsP):/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <documentation loc="35:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
        <short>&#10; This module provides the general Led interface.</short>
        <long>&#10; This module provides the general Led interface.&#10;&#10; The advantage to doing it this way is we can now create a platforms&#10; that provide more or less than 3 LED's, and the LED's can be pull-up or&#10; pull-down enabled.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PlatformLedsP"/>
      </instance>
      <module/>
    </component>
    <component qname="Led0Impl" loc="42(Led0Impl):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Led1Impl" loc="42(Led1Impl):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Led2Impl" loc="42(Led2Impl):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Led3Impl" loc="42(Led3Impl):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Led4Impl" loc="42(Led4Impl):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Led5Impl" loc="42(Led5Impl):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Led6Impl" loc="42(Led6Impl):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Led7Impl" loc="42(Led7Impl):/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="RadioAlarmC.RadioAlarmP" loc="39(RadioAlarmC.RadioAlarmP):/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <instance>
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC.Arbiter" loc="49(SimpleFcfsArbiterC.Arbiter):/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="30:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance>
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC.Queue" loc="42(SimpleFcfsArbiterC.Queue):/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="">
      <instance>
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="Leds" ref="0x7f1a286d7020" loc="41:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a286d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a286d73a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a286d7530"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a286d76c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a286d7850"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a286d79e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a286d7b70"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a286d7d00"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a286d6020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a286d61b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a286d6340"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a286d64d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a286d6660"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a286d67f0"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a286d6a80"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a286d6c10"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a286d6da0"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a286d5020"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a286d51b0"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a286d5340"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a286d54d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a286d5660"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a286d57f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a286d5980"/>
        <function-ref name="set" scoped="" ref="0x7f1a286d5b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a286d5ca0"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a286d4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f1a27ea8820" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27ea8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f1a27ea8ba0"/>
        <function-ref name="address" scoped="" ref="0x7f1a27ea8d30"/>
        <function-ref name="destination" scoped="" ref="0x7f1a27ea7020"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a27ea71b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a27ea7340"/>
        <function-ref name="pan" scoped="" ref="0x7f1a27ea74d0"/>
        <function-ref name="setPan" scoped="" ref="0x7f1a27ea7660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27ea77f0"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27ea7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27ea7c40" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27ea7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27ea6020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27ea61b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27ea6340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27ea64d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27ea6660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27ea67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f1a27ead680" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27ead680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f1a27eada00"/>
        <function-ref name="getDSN" scoped="" ref="0x7f1a27eadb90"/>
        <function-ref name="setFCF" scoped="" ref="0x7f1a27eadd20"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f1a27eaa020"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f1a27eaa1b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f1a27eaa340"/>
        <function-ref name="setDSN" scoped="" ref="0x7f1a27eaa4d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f1a27eaa660"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f1a27eaa7f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f1a27eaa980"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f1a27eaab10"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f1a27eaaca0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f1a27eaae30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a27ea9120"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27ea92b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f1a27ea9440"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f1a27ea95d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f1a27ea9760"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f1a27ea98f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27ea9a80"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a27ea9c10"/>
        <function-ref name="getFCF" scoped="" ref="0x7f1a27ea9da0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a27ea8020"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f1a27ea81b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f1a27ea8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27ea6bf0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27ea6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27ea5020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27ea51b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27ea5340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27ea54d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27ea5660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27ea57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1a290eb020" loc="56:/home/hakan/github/pillforge/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1a290eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a290eb3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a290eb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f1a290e85d0" loc="57:/home/hakan/github/pillforge/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1a290e85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f1a290e8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1a290ec080" loc="55:/home/hakan/github/pillforge/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1a290ec080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a290ec400"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1a290ec590"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1a290ec720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1a2838bad0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a2838bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2838be50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28389020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a283891b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28389340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a283894d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28389660"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a283897f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28389980"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28389b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28389ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a28389e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1a2838d990" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a2838d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1a28390c90"/></type-var>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2838c7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2838b170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2838cc80"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2838b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f1a27de31c0" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Neighborhood" scoped="" ref="0x7f1a27de31c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f1a27de3540"/>
        <function-ref name="insertNode" scoped="" ref="0x7f1a27de36d0"/>
        <function-ref name="getNode" scoped="" ref="0x7f1a27de3860"/>
        <function-ref name="evicted" scoped="" ref="0x7f1a27de39f0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1a27de3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1a29447320" loc="48:/home/hakan/github/pillforge/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1a29447320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a294476a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a29447830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1a293d83a0" loc="47:/home/hakan/github/pillforge/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1a293d83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a293d8720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1a293d88b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1a293d8a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27c7d020" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27c7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27c7d3a0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27c7d530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27c7d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27c7da40" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27c7da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27c7ddc0"/>
        <function-ref name="header" scoped="" ref="0x7f1a27c7b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f1a27c7b2e0" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a27c7b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a27c7b660"/>
        <function-ref name="wait" scoped="" ref="0x7f1a27c7b7f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27c7b980"/>
        <function-ref name="isFree" scoped="" ref="0x7f1a27c7bb10"/>
        <function-ref name="getNow" scoped="" ref="0x7f1a27c7bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f1a27c74480" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f1a27c74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27c74800"/>
        <function-ref name="get" scoped="" ref="0x7f1a27c74990"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27c74b20"/>
        <function-ref name="set" scoped="" ref="0x7f1a27c74cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27c7a060" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27c7a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1a27c7a3e0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f1a27c7a570"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a27c7a700"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f1a27c7a890"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f1a27c7aa20"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f1a27c7abb0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a27c7ad40"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a27c79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27c7fc70" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27c7fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27c7e020"/>
        <function-ref name="header" scoped="" ref="0x7f1a27c7e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1a27c7f300" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27c7f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27c7f680"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27c7f810"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27c7f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1a27c7e4e0" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27c7e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1a27c7e860"/>
        <function-ref name="noAck" scoped="" ref="0x7f1a27c7e9f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1a27c7eb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DiagMsg" ref="0x7f1a27c77020" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DiagMsg" scoped="" ref="0x7f1a27c77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DiagMsg"/>
      </instance>
      <interface-functions>
        <function-ref name="int32s" scoped="" ref="0x7f1a27c773a0"/>
        <function-ref name="str" scoped="" ref="0x7f1a27c77530"/>
        <function-ref name="send" scoped="" ref="0x7f1a27c776c0"/>
        <function-ref name="int16" scoped="" ref="0x7f1a27c77850"/>
        <function-ref name="hex32" scoped="" ref="0x7f1a27c779e0"/>
        <function-ref name="int32" scoped="" ref="0x7f1a27c77b70"/>
        <function-ref name="chr" scoped="" ref="0x7f1a27c77d00"/>
        <function-ref name="uint32s" scoped="" ref="0x7f1a27c71020"/>
        <function-ref name="real" scoped="" ref="0x7f1a27c711b0"/>
        <function-ref name="hex8" scoped="" ref="0x7f1a27c71340"/>
        <function-ref name="uint16" scoped="" ref="0x7f1a27c714d0"/>
        <function-ref name="uint64s" scoped="" ref="0x7f1a27c71660"/>
        <function-ref name="uint32" scoped="" ref="0x7f1a27c717f0"/>
        <function-ref name="uint8" scoped="" ref="0x7f1a27c71a80"/>
        <function-ref name="hex8s" scoped="" ref="0x7f1a27c71c10"/>
        <function-ref name="record" scoped="" ref="0x7f1a27c71da0"/>
        <function-ref name="uint8s" scoped="" ref="0x7f1a27c56020"/>
        <function-ref name="reals" scoped="" ref="0x7f1a27c561b0"/>
        <function-ref name="int64" scoped="" ref="0x7f1a27c56340"/>
        <function-ref name="uint16s" scoped="" ref="0x7f1a27c564d0"/>
        <function-ref name="int64s" scoped="" ref="0x7f1a27c56660"/>
        <function-ref name="hex16" scoped="" ref="0x7f1a27c567f0"/>
        <function-ref name="uint64" scoped="" ref="0x7f1a27c56980"/>
        <function-ref name="int16s" scoped="" ref="0x7f1a27c56b10"/>
        <function-ref name="int8" scoped="" ref="0x7f1a27c56ca0"/>
        <function-ref name="hex16s" scoped="" ref="0x7f1a27c55220"/>
        <function-ref name="hex32s" scoped="" ref="0x7f1a27c553b0"/>
        <function-ref name="chrs" scoped="" ref="0x7f1a27c55540"/>
        <function-ref name="int8s" scoped="" ref="0x7f1a27c556d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1a28d81910" loc="52:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1a28d81910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d81c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d81e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d87020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d871b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d87340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d874d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d87660"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d877f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x7f1a28d7f020" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led3" scoped="" ref="0x7f1a28d7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d7f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d7f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d7f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d7f850"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d7f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d7fb70"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d7fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led6" ref="0x7f1a28d7c980" loc="58:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led6" scoped="" ref="0x7f1a28d7c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d7cd00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d7b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d7b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d7b340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d7b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d7b660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d7b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d7b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a28d8b0c0" loc="47:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a28d8b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28d8b440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1a28d87b10" loc="53:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1a28d87b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d86020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d861b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d86340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d864d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d86660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d867f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d86980"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d86b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led4" ref="0x7f1a28d7e340" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led4" scoped="" ref="0x7f1a28d7e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d7e6c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d7e850"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d7e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d7eb70"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d7ed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d7d020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d7d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1a28d8b6c0" loc="48:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a28d8b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a28d8ba40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a28d8bbd0"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a28d8bd60"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a28d8a020"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a28d8a1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a28d8a340"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a28d8a4d0"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a28d8a660"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a28d8a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d8a980"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a28d8ab10"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a28d8aca0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a28d8ae30"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a28d89120"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a28d892b0"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a28d89440"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a28d895d0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a28d89760"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a28d898f0"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a28d89a80"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a28d89c10"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a28d89da0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a28d88020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d881b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a28d88340"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a28d886d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1a28d86e30" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1a28d86e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d801e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d80370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d80500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d80690"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d80820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d809b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d80b40"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d80cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led7" ref="0x7f1a28d7bca0" loc="59:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led7" scoped="" ref="0x7f1a28d7bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d7a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d7a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d7a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d7a550"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d7a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d7a870"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d7aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d7ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led5" ref="0x7f1a28d7d660" loc="57:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led5" scoped="" ref="0x7f1a28d7d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d7d9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d7db70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d7dd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d7c020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d7c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d7c340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d7c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d7c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a286b7bc0" loc="10:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA1P.nc">
      <component-ref qname="HplMsp430UsciInterruptsA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a286b7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a286b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1a286ac430" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA1P.nc">
      <component-ref qname="HplMsp430UsciInterruptsA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a286ac430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a286ac7b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a286ac940"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a286acad0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a286acc60"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a286acdf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a286a9020"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a286a91b0"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a286a9340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a286a94d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a286a9660"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a286a97f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a286a9980"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a286a9b10"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a286a9da0"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a286a8020"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a286a81b0"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a286a8340"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a286a84d0"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a286a8660"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a286a87f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a286a8980"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a286a8b10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a286a8ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a286a8e30"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a286a7020"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a286a73b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a286b43d0" loc="12:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA1P.nc">
      <component-ref qname="HplMsp430UsciInterruptsA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a286b43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a286b4750"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a286b48e0"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a286b4a70"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a286b4c00"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a286b4d90"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a286b3020"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a286b31b0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a286b3340"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a286b34d0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a286b3660"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a286b37f0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a286b3980"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a286b3b10"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a286b3da0"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a286b2020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a286b21b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a286b2340"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a286b24d0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a286b2660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a286b27f0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a286b2980"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a286b2b10"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a286b2ca0"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a286b2e30"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a286b1020"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a286b13b0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a286b1540"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a286b16d0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a286b1860"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a286b19f0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a286b1b80"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a286b1d10"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a286b0020"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a286b01b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a286b0340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a286b04d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a286b0660"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a286b07f0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a286b0980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a286b0b10"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a286b0ca0"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a286b0e30"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a286af020"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a286af1b0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a286af340"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a286af4d0"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a286af660"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a286af7f0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a286af980"/>
        <function-ref name="configure" scoped="" ref="0x7f1a286ae020"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a286ae1b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a286ae340"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a286ae4d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a286ae660"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a286ae7f0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a286ae980"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a286aeb10"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a286aeca0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a286aee30"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a286ad020"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a286ad1b0"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a286ad340"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a286ad4d0"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a286ad660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a286ad7f0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a286ad980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a286adb10"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a286adca0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a286ade30"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a286ac020"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a286ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz16" ref="0x7f1a2781fce0" loc="4:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioAlarmC.nc">
      <component-ref qname="HplRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz16" scoped="" ref="0x7f1a2781fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a2781a670"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2781b550"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a2781a020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a2781ba10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a2781ab30"/>
        <function-ref name="start" scoped="" ref="0x7f1a2781cb60"/>
        <function-ref name="stop" scoped="" ref="0x7f1a2781b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a2781f2f0" loc="3:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioAlarmC.nc">
      <component-ref qname="HplRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a2781f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a2781f670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a2890f020" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Msp430GpioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a2890f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2890f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2890f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a2890f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2890f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a2890f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a2890fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a2890fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2890e020"/>
        <function-ref name="get" scoped="" ref="0x7f1a2890e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a2890e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a2890e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a2890e660"/>
        <function-ref name="set" scoped="" ref="0x7f1a2890e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a2890ea80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a2890ec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a2890eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a2890d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a28913b40" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Msp430GpioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a28913b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28910020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a289101b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28910340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a289104d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28910660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a289107f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28910980"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28910b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a28daa110" loc="43:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/pins/PlatformPinsP.nc">
      <component-ref qname="PlatformPinsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a28daa110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28daa490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f1a27b395c0" loc="35:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioCCA" scoped="" ref="0x7f1a27b395c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f1a27b39940"/>
        <function-ref name="request" scoped="" ref="0x7f1a27b39ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f1a27b343b0" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a27b343b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b33ac0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b33570"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a27b33020"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b31090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f1a27b1fca0" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSIFlag" scoped="" ref="0x7f1a27b1fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b1e0a0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b1e230"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27b1e3c0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b1e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1a27b232e0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1a27b232e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27b22840"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27b20020"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27b22110"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b20750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f1a27b3d630" loc="32:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioState" scoped="" ref="0x7f1a27b3d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27b3d9b0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27b3db40"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27b3dcd0"/>
        <function-ref name="done" scoped="" ref="0x7f1a27b3de60"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27b3a020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27b3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f1a27b1d470" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a27b1d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a27b1d7f0"/>
        <function-ref name="wait" scoped="" ref="0x7f1a27b1d980"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27b1db10"/>
        <function-ref name="isFree" scoped="" ref="0x7f1a27b1dca0"/>
        <function-ref name="getNow" scoped="" ref="0x7f1a27b1de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f1a27b38e80" loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a27b38e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b365e0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b36090"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a27b37ad0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b36b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27b39d90" loc="36:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b39d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b38180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b38310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b384a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b38630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b387c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b38950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27b24200" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27b24200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1101DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b24680"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b24810"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b249a0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f1a27b24b30"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f1a27b24cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27b3add0" loc="34:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27b3add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27b39180"/>
        <function-ref name="header" scoped="" ref="0x7f1a27b39310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a27b29dd0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a27b29dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="tradio_size" ref="0x7f1a290b0dd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a27b256e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27b276b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a27b25090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a27b27b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a27b25ba0"/>
        <function-ref name="start" scoped="" ref="0x7f1a27b28ca0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27b271f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1a27b31940" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1a27b31940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b2e090"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b30af0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a27b305a0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b2e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f1a27b2aa40" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27b2aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27b296b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1a27b3a460" loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27b3a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27b3a7e0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27b3a970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27b3ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f1a27b2ee70" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a27b2ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b2c5e0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b2c090"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a27b2dad0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b2cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f1a27b1e8d0" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f1a27b1e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b1ec50"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b1ede0"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27b1d020"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b1d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f1a27b1f110" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f1a27b1f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b1f490"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b1f620"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27b1f7b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b1f940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1a27b2a1e0" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerC.nc">
      <component-ref qname="CC1101DriverLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a27b2a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1a27b2a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a28dad200" loc="42:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/pins/PlatformPinsC.nc">
      <component-ref qname="PlatformPinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a28dad200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28dad580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27e13590" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27e13590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27e13910"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27e13aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27e13c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27e12020" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27e12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27e123a0"/>
        <function-ref name="header" scoped="" ref="0x7f1a27e12530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27e17600" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27e17600"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27e17980"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27e17b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27e17ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27e12880" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27e12880"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f1a27e12c00"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1a27e12d90"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f1a27e0f020"/>
        <function-ref name="getSender" scoped="" ref="0x7f1a27e0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27e10c00" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27e10c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27e13020"/>
        <function-ref name="header" scoped="" ref="0x7f1a27e131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1a27f6de40" loc="60:/home/hakan/github/pillforge/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a27f6de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27f6c1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1a27f6e620" loc="57:/home/hakan/github/pillforge/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1a27f6e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1a27f6e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f1a27f6d740" loc="59:/home/hakan/github/pillforge/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f1a27f6d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27f6dac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f1a27f6ec90" loc="58:/home/hakan/github/pillforge/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1a27f6ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27f6d0a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1a27f6d230"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1a27f6d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a2796cc70" loc="10:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/DummyIoP.nc">
      <component-ref qname="DummyIoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a2796cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a27969020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a279691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a27969340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a279694d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27969660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a279697f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27969980"/>
        <function-ref name="clr" scoped="" ref="0x7f1a27969b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1a285c1780" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Msp430Timer32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a285c1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285c1b00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a285c1c90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285c1e20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285c6020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1a285ce710" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Msp430Timer32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a285ce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a285cea90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a285cec20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285cedb0"/>
        <function-ref name="get" scoped="" ref="0x7f1a285e3020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285e31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285e3340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a285e34d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285e3660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a285e37f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a285e3980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a285e3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1a285cd020" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Msp430Timer32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a285cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285cd3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a285cd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285cd6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a285cd850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285cd9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285cdb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285cdd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a285cc020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1a283748e0" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="TransformCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1a283748e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1a28379160"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1a28379940"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a28373780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28371150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28373c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28371610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1a28376230" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="TransformCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a28376230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1a2837a570"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1a2837ad40"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a28375090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28375a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28375550"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28374020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1a27929020" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="Msp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1a27929020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a279293a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27929530"/>
        <function-ref name="disable" scoped="" ref="0x7f1a279296c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1a27929850"/>
        <function-ref name="enable" scoped="" ref="0x7f1a279299e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a27929b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1a2792ba60" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="Msp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1a2792ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2792bde0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2792a020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1a2792a1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1a2792a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a2874b960" loc="44:/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a2874b960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a2874bce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1a28749020" loc="45:/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1a28749020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1a287493a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1a28749530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1a287496c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1a28749850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioCapture" ref="0x7f1a27959a60" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc">
      <component-ref qname="SoftCaptureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioCapture" scoped="" ref="0x7f1a27959a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1a27959de0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27952020"/>
        <function-ref name="captured" scoped="" ref="0x7f1a279521b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1a27952340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f1a27952680" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc">
      <component-ref qname="SoftCaptureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1a27952680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a27952a00"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27952b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1a27952d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1a27951020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter32khz32" ref="0x7f1a27951670" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc">
      <component-ref qname="SoftCaptureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter32khz32" scoped="" ref="0x7f1a27951670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a279505b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2794f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a27950a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2794f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a2868f1d0" loc="85:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2868f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a2868f550"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2868f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1a2867e3a0" loc="95:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a2867e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a2867e720"/>
        <function-ref name="userId" scoped="" ref="0x7f1a2867e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1a28690030" loc="84:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1a28690030"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a286903b0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1a28690540"/>
        <function-ref name="receive" scoped="" ref="0x7f1a286906d0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1a28690860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupts" ref="0x7f1a28684a50" loc="90:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a28684a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28684dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1a286831f0" loc="91:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1a286831f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28683570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28683700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28683890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28683a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28683bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28683d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28682020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a286821b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28682340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a286824d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28682660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a286827f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28682980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28682c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28682da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28681020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a286811b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1a28681530" loc="92:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1a28681530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a286818b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28681a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28681bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28681d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28680020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a286801b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28680340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a286804d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28680660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a286807f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28680980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28680b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28680ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a2867f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a2867f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a2867f340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a2867f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1a28693a10" loc="83:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1a28693a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28693d90"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1a28692020"/>
        <function-ref name="receive" scoped="" ref="0x7f1a286921b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1a28692340"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1a286924d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1a28692660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a286927f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a2867fd40" loc="94:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2867fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a2867e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime_bms" ref="0x7f1a2867ed90" loc="96:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime_bms" scoped="" ref="0x7f1a2867ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2867c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a2868e020" loc="86:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2868e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a2868e3a0"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a2868e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a2868e900" loc="89:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="Msp430UsciUartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a2868e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a2868ec80"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a2868ee10"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a2868d020"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a2868d1b0"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a2868d340"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a2868d4d0"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a2868d660"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a2868d7f0"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a2868d980"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a2868db10"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a2868dca0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a2868de30"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a2868c020"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a2868c2b0"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a2868c440"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a2868c5d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a2868c760"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a2868c8f0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a2868ca80"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a2868cc10"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a2868cda0"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a2868b020"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a2868b1b0"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a2868b340"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a2868b4d0"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a2868b860"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a2868b9f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a2868bb80"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a2868bd10"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a2868a020"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a2868a1b0"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a2868a340"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a2868a4d0"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a2868a660"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a2868a7f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a2868a980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a2868ab10"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a2868aca0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a2868ae30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a28687020"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a286871b0"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a28687340"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a286874d0"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a28687660"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a286877f0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28687980"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a28687b10"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a28687ca0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a28687e30"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28686420"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a286865b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a28686740"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a286868d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a28686a60"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a28686bf0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a28686d80"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a28685020"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a286851b0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a28685340"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a286854d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a28685660"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a286857f0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28685980"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a28685b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a28685ca0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a28685e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a28684020"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a286841b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a28684340"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a286844d0"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a28684660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a28de8aa0" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a28de8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28de8e20"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28de7020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28de71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1a28de7460" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a28de7460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28de77e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a28de7970"/>
        <function-ref name="request" scoped="" ref="0x7f1a28de7b00"/>
        <function-ref name="granted" scoped="" ref="0x7f1a28de7c90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28de7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1a28de8020" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1a28de8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28de83a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28de8530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28de86c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1a28dc3720" loc="58:/home/hakan/github/pillforge/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a28dc3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28dc3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1a28dc4220" loc="57:/home/hakan/github/pillforge/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1a28dc4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1a28dc45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f1a28f6aa50" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DummyConfig" scoped="" ref="0x7f1a28f6aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f1a28f6add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f1a28f7cc80" loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f1a28f7cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f1a28f7f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f1a28f6be30" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f1a28f6be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28f761e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f1a28f76370"/>
        <function-ref name="source" scoped="" ref="0x7f1a28f76500"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28f76690"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28f76820"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28f769b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28f76b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f1a28f728e0" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f1a28f728e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f1a28f72c60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f1a28f72df0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f1a28f7b020"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f1a28f7b1b0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f1a28f7b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f1a28f478d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28f478d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28f47c50"/>
        <function-ref name="wait" scoped="" ref="0x7f1a28f47de0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28f4d020"/>
        <function-ref name="isFree" scoped="" ref="0x7f1a28f4d1b0"/>
        <function-ref name="getNow" scoped="" ref="0x7f1a28f4d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1a28f40160" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1a28f40160"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a28f3f7c0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a28f3e020"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a28f3f090"/>
        <function-ref name="set" scoped="" ref="0x7f1a28f3e750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f1a28f7d640" loc="36:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CsmaConfig" scoped="" ref="0x7f1a28f7d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f1a28f7d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f1a28f85550" loc="34:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f1a28f85550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1a28f858d0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f1a28f85a60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a28f85bf0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f1a28f85d80"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f1a28f92020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f1a28f921b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a28f92340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a28f924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f1a28f4f880" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a28f4f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f1a28f4fc00"/>
        <function-ref name="getDSN" scoped="" ref="0x7f1a28f4fd90"/>
        <function-ref name="setFCF" scoped="" ref="0x7f1a28f68020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f1a28f681b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f1a28f68340"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f1a28f684d0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f1a28f68660"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f1a28f687f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f1a28f68980"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f1a28f68b10"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f1a28f68ca0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f1a28f68e30"/>
        <function-ref name="localAddr" scoped="" ref="0x7f1a28f67020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a28f672b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a28f67440"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f1a28f675d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f1a28f67760"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f1a28f678f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f1a28f67a80"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a28f67c10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a28f67da0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f1a28f4e020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a28f4e1b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f1a28f4e340"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f1a28f4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f1a28f809c0" loc="35:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UniqueConfig" scoped="" ref="0x7f1a28f809c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f1a28f80d40"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1a28f8c020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f1a28f8c1b0"/>
        <function-ref name="getSender" scoped="" ref="0x7f1a28f8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f1a28f77340" loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f1a28f77340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f1a28f776c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f1a28f77850"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f1a28f779e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f1a28f77b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1101Packet" ref="0x7f1a28f4b020" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC1101Packet" scoped="" ref="0x7f1a28f4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28f4b3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28f4b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28f4b6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28f4b850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a28f4b9e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a28f4bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1101DriverConfig" ref="0x7f1a28f8d350" loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioP.nc">
      <component-ref qname="CC1101RadioP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC1101DriverConfig" scoped="" ref="0x7f1a28f8d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1101DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28f8d6d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a28f8d860"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a28f8d9f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f1a28f8db80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f1a28f8dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_B1" ref="0x7f1a28599a30" loc="99:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_B1" scoped="" ref="0x7f1a28599a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28599db0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28598020"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285981b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28598340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285984d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28598660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_A0" ref="0x7f1a285b3020" loc="68:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_A0" scoped="" ref="0x7f1a285b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285b33a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a285b3530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285b36c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285b3850"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285b39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_B2" ref="0x7f1a28596020" loc="102:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_B2" scoped="" ref="0x7f1a28596020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285965a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28596730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285968c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28596a50"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28596be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control1_A1" ref="0x7f1a285828d0" loc="129:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control1_A1" scoped="" ref="0x7f1a285828d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28582c50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28582de0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28581020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a285811b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a28581340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285814d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28581660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a285817f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28581980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare2_A2" ref="0x7f1a28571580" loc="163:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare2_A2" scoped="" ref="0x7f1a28571580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28571900"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28571a90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28571c20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28571db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28570020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture1_A2" ref="0x7f1a2857de60" loc="136:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture1_A2" scoped="" ref="0x7f1a2857de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2857c210"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2857c3a0"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2857c530"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2857c6c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2857c850"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2857c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer0_B" ref="0x7f1a285a0b90" loc="91:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0_B" scoped="" ref="0x7f1a285a0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2859f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a2859f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2859f340"/>
        <function-ref name="get" scoped="" ref="0x7f1a2859f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2859f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2859f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a2859f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2859fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2859fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a2859fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2859e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture2_A2" ref="0x7f1a285703f0" loc="164:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture2_A2" scoped="" ref="0x7f1a285703f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28570770"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28570900"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28570a90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28570c20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28570db0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2856f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer1_A" ref="0x7f1a28587cf0" loc="123:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1_A" scoped="" ref="0x7f1a28587cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a285860a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28586230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285863c0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28586550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285866e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28586870"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28586a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28586b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28586d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28585020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a285851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_A2" ref="0x7f1a285a73f0" loc="77:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_A2" scoped="" ref="0x7f1a285a73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285a7770"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a285a7900"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285a7a90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285a7c20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285a7db0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a285a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_A3" ref="0x7f1a285a58a0" loc="81:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_A3" scoped="" ref="0x7f1a285a58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285a5c20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a285a5db0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285a4020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285a41b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_B4" ref="0x7f1a2858e710" loc="111:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_B4" scoped="" ref="0x7f1a2858e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2858ea90"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2858ec20"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2858edb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2858d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2858d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2858d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_B5" ref="0x7f1a2858cbc0" loc="114:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_B5" scoped="" ref="0x7f1a2858cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2858b020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a2858b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a2858b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a2858b4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2858b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare1_A0" ref="0x7f1a28584a30" loc="126:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare1_A0" scoped="" ref="0x7f1a28584a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28584db0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28583020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285831b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28583340"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_B1" ref="0x7f1a2859b740" loc="97:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_B1" scoped="" ref="0x7f1a2859b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2859bac0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2859bc50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2859bde0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2859a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2859a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2859a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a2859a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a2859a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a2859a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control2_A2" ref="0x7f1a28572020" loc="162:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control2_A2" scoped="" ref="0x7f1a28572020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285723a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28572530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285726c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28572850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285729e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28572b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28572d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28571020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare2_A0" ref="0x7f1a28577020" loc="155:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare2_A0" scoped="" ref="0x7f1a28577020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285773a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28577530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285776c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28577850"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285779e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_B0" ref="0x7f1a2859d8a0" loc="94:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_B0" scoped="" ref="0x7f1a2859d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2859dc20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a2859ddb0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a2859c020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a2859c1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2859c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture1_A0" ref="0x7f1a285838a0" loc="127:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture1_A0" scoped="" ref="0x7f1a285838a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28583c20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28583db0"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28582020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285821b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28582340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a285824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_A2" ref="0x7f1a285a9020" loc="75:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_A2" scoped="" ref="0x7f1a285a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285a93a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a285a9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285a96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a285a9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285a99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285a9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285a9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a285a8020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_B4" ref="0x7f1a28590420" loc="109:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_B4" scoped="" ref="0x7f1a28590420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285907a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28590930"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28590ac0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28590c50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a28590de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2858f020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a2858f1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a2858f340"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a2858f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture2_A0" ref="0x7f1a28577db0" loc="156:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture2_A0" scoped="" ref="0x7f1a28577db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28576180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28576310"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285764a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28576630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285767c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28576950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_A0" ref="0x7f1a285ade20" loc="69:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_A0" scoped="" ref="0x7f1a285ade20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285b21c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a285b2350"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285b24e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285b2670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285b2800"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a285b2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_B2" ref="0x7f1a28595020" loc="103:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_B2" scoped="" ref="0x7f1a28595020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285953a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28595530"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285956c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28595850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285959e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28595b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_A1" ref="0x7f1a285ab200" loc="72:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_A1" scoped="" ref="0x7f1a285ab200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285ab580"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a285ab710"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285ab8a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285aba30"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285abbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_B3" ref="0x7f1a28593580" loc="106:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_B3" scoped="" ref="0x7f1a28593580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28593900"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28593a90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28593c20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28593db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28591020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control1_A2" ref="0x7f1a2857fbf0" loc="134:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control1_A2" scoped="" ref="0x7f1a2857fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2857e020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2857e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2857e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2857e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2857e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2857e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a2857e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a2857eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a2857eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_A4" ref="0x7f1a285a2d50" loc="85:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_A4" scoped="" ref="0x7f1a285a2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285a1100"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a285a1290"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285a1420"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285a15b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285a1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_B6" ref="0x7f1a28588020" loc="118:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_B6" scoped="" ref="0x7f1a28588020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285883a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28588530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285886c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28588850"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285889e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control2_A0" ref="0x7f1a2857aa60" loc="154:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control2_A0" scoped="" ref="0x7f1a2857aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2857ade0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28579020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285791b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28579340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285794d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28579660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285797f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28579980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28579b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_A3" ref="0x7f1a285a4710" loc="82:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_A3" scoped="" ref="0x7f1a285a4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285a4b90"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a285a4d20"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285a3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285a31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285a3340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a285a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_B5" ref="0x7f1a2858ba30" loc="115:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_B5" scoped="" ref="0x7f1a2858ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2858bdb0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2858a020"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2858a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2858a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2858a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2858a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare1_A1" ref="0x7f1a28581d50" loc="130:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare1_A1" scoped="" ref="0x7f1a28581d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28580100"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28580290"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28580420"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285805b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28580740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_A0" ref="0x7f1a285b6a60" loc="67:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_A0" scoped="" ref="0x7f1a285b6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285b6de0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a285b5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285b51b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a285b5340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285b54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285b5660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285b57f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a285b5980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285b5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_B2" ref="0x7f1a28598a60" loc="101:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_B2" scoped="" ref="0x7f1a28598a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28598de0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28597020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285971b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28597340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285974d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28597660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285977f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28597980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28597b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_B0" ref="0x7f1a2859c710" loc="95:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_B0" scoped="" ref="0x7f1a2859c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2859ca90"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2859cc20"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2859cdb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2859b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2859b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2859b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare2_A1" ref="0x7f1a28574170" loc="159:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare2_A1" scoped="" ref="0x7f1a28574170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285744f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28574680"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28574810"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285749a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28574b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_B1" ref="0x7f1a2859abc0" loc="98:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_B1" scoped="" ref="0x7f1a2859abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28599020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a285991b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28599340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285994d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28599660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control1_A0" ref="0x7f1a285855b0" loc="125:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control1_A0" scoped="" ref="0x7f1a285855b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28585930"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28585ac0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28585c50"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28585de0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a28584020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285841b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28584340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a285844d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28584660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer2_A" ref="0x7f1a2857cd80" loc="152:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2_A" scoped="" ref="0x7f1a2857cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2857b610"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a2857b7a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2857b930"/>
        <function-ref name="get" scoped="" ref="0x7f1a2857bac0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2857bc50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2857bde0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a2857a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2857a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2857a340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a2857a4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2857a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture1_A1" ref="0x7f1a28580b10" loc="131:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture1_A1" scoped="" ref="0x7f1a28580b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2857f020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2857f1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2857f340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2857f4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2857f660"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2857f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer0_A" ref="0x7f1a285b72f0" loc="65:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0_A" scoped="" ref="0x7f1a285b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a285b7670"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a285b7800"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285b7990"/>
        <function-ref name="get" scoped="" ref="0x7f1a285b7b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285b7cb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285b7e40"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a285b6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285b61b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a285b6340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a285b64d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a285b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_A3" ref="0x7f1a285a6420" loc="80:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_A3" scoped="" ref="0x7f1a285a6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285a67a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a285a6930"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285a6ac0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a285a6c50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285a6de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285a5020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285a51b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a285a5340"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_B5" ref="0x7f1a2858d740" loc="113:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_B5" scoped="" ref="0x7f1a2858d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2858dac0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2858dc50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2858dde0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2858c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2858c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2858c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a2858c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a2858c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a2858c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture2_A1" ref="0x7f1a28573020" loc="160:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture2_A1" scoped="" ref="0x7f1a28573020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285733a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28573530"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285736c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28573850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285739e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28573b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_A1" ref="0x7f1a285aa020" loc="73:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_A1" scoped="" ref="0x7f1a285aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285aa3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a285aa530"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285aa6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285aa850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285aa9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a285aab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_B3" ref="0x7f1a285913f0" loc="107:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_B3" scoped="" ref="0x7f1a285913f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28591770"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28591900"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28591a90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28591c20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28591db0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28590020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_A2" ref="0x7f1a285a8580" loc="76:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_A2" scoped="" ref="0x7f1a285a8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285a8900"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a285a8a90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285a8c20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285a8db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare0_B4" ref="0x7f1a2858f8a0" loc="110:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare0_B4" scoped="" ref="0x7f1a2858f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2858fc20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a2858fdb0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a2858e020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a2858e1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2858e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_A4" ref="0x7f1a285a1b10" loc="86:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_A4" scoped="" ref="0x7f1a285a1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285a0020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a285a01b0"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285a0340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285a04d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285a0660"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a285a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture0_B6" ref="0x7f1a28588db0" loc="119:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture0_B6" scoped="" ref="0x7f1a28588db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28587180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28587310"/>
        <function-ref name="captured" scoped="" ref="0x7f1a285874a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28587630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285877c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28587950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_B0" ref="0x7f1a2859e420" loc="93:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_B0" scoped="" ref="0x7f1a2859e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2859e7a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2859e930"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2859eac0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2859ec50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2859ede0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2859d020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a2859d1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a2859d340"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a2859d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control2_A1" ref="0x7f1a28576d50" loc="158:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control2_A1" scoped="" ref="0x7f1a28576d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28575100"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28575290"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28575420"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a285755b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a28575740"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285758d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28575a60"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28575bf0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28575d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare1_A2" ref="0x7f1a2857d0d0" loc="135:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare1_A2" scoped="" ref="0x7f1a2857d0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2857d450"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a2857d5e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a2857d770"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a2857d900"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2857da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_A1" ref="0x7f1a285b2d90" loc="71:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_A1" scoped="" ref="0x7f1a285b2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285ac180"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a285ac310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285ac4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a285ac630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285ac7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285ac950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285acae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a285acc70"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285ace00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_B3" ref="0x7f1a28594020" loc="105:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_B3" scoped="" ref="0x7f1a28594020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285943a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28594530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285946c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28594850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285949e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28594b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28594d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28593020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_A4" ref="0x7f1a285a38d0" loc="84:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_A4" scoped="" ref="0x7f1a285a38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285a3c50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a285a3de0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285a2020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a285a21b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285a2340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285a24d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285a2660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a285a27f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control0_B6" ref="0x7f1a2858aa60" loc="117:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control0_B6" scoped="" ref="0x7f1a2858aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2858ade0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28589020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285891b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28589340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285894d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28589660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285897f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28589980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28589b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a2815e620" loc="10:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB0P.nc">
      <component-ref qname="HplMsp430UsciInterruptsB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a2815e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a2815e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1a28154d90" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB0P.nc">
      <component-ref qname="HplMsp430UsciInterruptsB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a28154d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a28153180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a28153310"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a281534a0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a28153630"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a281537c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a28153950"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a28153ae0"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a28153c70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a28153e00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28152020"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a281521b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a28152340"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a281524d0"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a28152760"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a281528f0"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a28152a80"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a28152c10"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a28152da0"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a28151020"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a281511b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a28151340"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a281514d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a28151660"/>
        <function-ref name="set" scoped="" ref="0x7f1a281517f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a28151980"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a28151d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a2815ed50" loc="12:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB0P.nc">
      <component-ref qname="HplMsp430UsciInterruptsB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a2815ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a2815b100"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a2815b290"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a2815b420"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a2815b5b0"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a2815b740"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a2815b8d0"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a2815ba60"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a2815bbf0"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a2815bd80"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a2815a020"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a2815a1b0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a2815a340"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a2815a4d0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a2815a760"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a2815a8f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a2815aa80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a2815ac10"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a2815ada0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a28159020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a281591b0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a28159340"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a281594d0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a28159660"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a281597f0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a28159980"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a28159d10"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a28158020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a281581b0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a28158340"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a281584d0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a28158660"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a281587f0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a28158980"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a28158b10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a28158ca0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a28158e30"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a28157020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a281571b0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a28157340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a281574d0"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a28157660"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a281577f0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a28157980"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a28157b10"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a28157ca0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28157e30"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a28156020"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a281561b0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a28156340"/>
        <function-ref name="configure" scoped="" ref="0x7f1a281568d0"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a28156a60"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a28156bf0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a28156d80"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a28155020"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a281551b0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a28155340"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a281554d0"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a28155660"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a281557f0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a28155980"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a28155b10"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a28155ca0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28155e30"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a28154020"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a281541b0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a28154340"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a281544d0"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a28154660"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a281547f0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a28154980"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a28154b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f1a28e105a0" loc="54:/home/hakan/github/pillforge/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1a28e105a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1a28e10920"/>
        <function-ref name="changed" scoped="" ref="0x7f1a28e10ab0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1a28e10c40"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1a28e10dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28be9560" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="HplMsp430GeneralIORenP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28be9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28be98e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28be9a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28be9c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28be9d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28be8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28be81b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28be8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28be84d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28be8660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28be87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28be8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28be8b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28be8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28be7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28be71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28be7340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28be74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a2824ad30" loc="6:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
      <component-ref qname="Msp430UsciA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a2824ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a282490e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a28249270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a28246e10" loc="11:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
      <component-ref qname="Msp430UsciA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28246e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a282451c0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28245350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a282461d0" loc="9:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
      <component-ref qname="Msp430UsciA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a282461d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28246550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USCI" ref="0x7f1a28255480" loc="4:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
      <component-ref qname="Msp430UsciA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="USCI" scoped="" ref="0x7f1a28255480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a28255800"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a28255990"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a28255b20"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a28255cb0"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a28255e40"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a28252020"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a282521b0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a28252340"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a282524d0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a28252660"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a282527f0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a28252980"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a28252b10"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a28252da0"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a28251020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a282511b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a28251340"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a282514d0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a28251660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a282517f0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a28251980"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a28251b10"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a28251ca0"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a28251e30"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a28250020"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a282503b0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a28250540"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a282506d0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a28250860"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a282509f0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a28250b80"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a28250d10"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a2824f020"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a2824f1b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a2824f340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a2824f4d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a2824f660"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a2824f7f0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a2824f980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a2824fb10"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a2824fca0"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a2824fe30"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a2824e020"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a2824e1b0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a2824e340"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a2824e4d0"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a2824e660"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a2824e7f0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a2824e980"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2824d020"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a2824d1b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a2824d340"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a2824d4d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a2824d660"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a2824d7f0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a2824d980"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a2824db10"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a2824dca0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a2824de30"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a2824c020"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a2824c1b0"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a2824c340"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a2824c4d0"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a2824c660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a2824c7f0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a2824c980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a2824cb10"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a2824cca0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a2824ce30"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a2824b020"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a2824b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a28249590" loc="7:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
      <component-ref qname="Msp430UsciA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28249590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28249910"/>
        <function-ref name="requested" scoped="" ref="0x7f1a28249aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a28249c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28249dc0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a28248020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a2824b9c0" loc="5:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
      <component-ref qname="Msp430UsciA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a2824b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a2824bd40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a2824a020"/>
        <function-ref name="request" scoped="" ref="0x7f1a2824a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a2824a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a2824a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a282482e0" loc="8:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA0P.nc">
      <component-ref qname="Msp430UsciA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a282482e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28248660"/>
        <function-ref name="userId" scoped="" ref="0x7f1a282487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a288a4390" loc="7:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
      <component-ref qname="Msp430UsciUartA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a288a4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a288a4710"/>
        <function-ref name="configure" scoped="" ref="0x7f1a288a48a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1a288b22c0" loc="6:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
      <component-ref qname="Msp430UsciUartA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1a288b22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a288b2640"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1a288b27d0"/>
        <function-ref name="receive" scoped="" ref="0x7f1a288b2960"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1a288b2af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1a28897d70" loc="12:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
      <component-ref qname="Msp430UsciUartA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1a28897d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2889c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2889c310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a2889c4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2889c630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a2889c7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a2889c950"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a2889cae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2889cc70"/>
        <function-ref name="get" scoped="" ref="0x7f1a2889ce00"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28898020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288981b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28898340"/>
        <function-ref name="set" scoped="" ref="0x7f1a288984d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28898760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a288988f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28898a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28898c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1a28896020" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
      <component-ref qname="Msp430UsciUartA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1a28896020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288963a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28896530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a288966c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28896850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288969e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28896b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28896d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28895020"/>
        <function-ref name="get" scoped="" ref="0x7f1a288951b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28895340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288954d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28895660"/>
        <function-ref name="set" scoped="" ref="0x7f1a288957f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28895a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28895c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28895da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28894020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1a288a3760" loc="5:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
      <component-ref qname="Msp430UsciUartA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1a288a3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a288a3ae0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1a288a3c70"/>
        <function-ref name="receive" scoped="" ref="0x7f1a288a3e00"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1a288b3020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1a288b31b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1a288b3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a288b34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a28897670" loc="11:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
      <component-ref qname="Msp430UsciUartA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a28897670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a288979f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a28899900" loc="8:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartA1P.nc">
      <component-ref qname="Msp430UsciUartA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a28899900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a28899c80"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a28899e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f1a290cbc80" loc="64:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1a290cbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1a2918a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleepEvents" ref="0x7f1a290cc130" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleepEvents" scoped="" ref="0x7f1a290cc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleepEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="preSleep" scoped="" ref="0x7f1a290cc4b0"/>
        <function-ref name="postSleep" scoped="" ref="0x7f1a290cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f1a292bc810" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1a292bc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f1a292bcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f1a29257d20" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f1a29257d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1a291f40e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a2798eb50" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="Msp430UsciSpiB0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a2798eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a2798d020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a2798d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBlock" ref="0x7f1a2798dc20" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="Msp430UsciSpiB0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a2798dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a2798c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1a2798d460" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="Msp430UsciSpiB0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1a2798d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a2798d7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a2798d970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1a2798c2c0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="Msp430UsciSpiB0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a2798c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a2798c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a2798b1e0" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="Msp430UsciSpiB0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2798b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a2798b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a27991e50" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="Msp430UsciSpiB0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a27991e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a2798e210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a2798e3a0"/>
        <function-ref name="request" scoped="" ref="0x7f1a2798e530"/>
        <function-ref name="granted" scoped="" ref="0x7f1a2798e6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a2798e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a2798c930" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="Msp430UsciSpiB0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2798c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a2798ccb0"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a2798ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1a279c2020" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1a279c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a279c3020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a279c37b0"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1a279c2e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1a279c1670" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a279c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a279c3020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a279c37b0"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a279c05b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a279be020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a279c0a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a279be4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a2808f410" loc="108:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2808f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a2808f790"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2808f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDA" ref="0x7f1a28085390" loc="114:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f1a28085390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28085710"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a280858a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28085a30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28085bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28085d50"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28084020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a280841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28084340"/>
        <function-ref name="get" scoped="" ref="0x7f1a280844d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28084660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a280847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28084980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28084b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28084da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28083020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a280831b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28083340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Panic" ref="0x7f1a28080c40" loc="118:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Panic" scoped="" ref="0x7f1a28080c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Panic"/>
      </instance>
      <interface-functions>
        <function-ref name="warn" scoped="" ref="0x7f1a2807f020"/>
        <function-ref name="panic" scoped="" ref="0x7f1a2807f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupts" ref="0x7f1a28086be0" loc="113:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a28086be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28085020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CBasicAddr" ref="0x7f1a280981d0" loc="105:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x7f1a280981d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f1a281123d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f1a28112690"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1a28098e00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1a28095330"/>
        <function-ref name="write" scoped="" ref="0x7f1a28097a50"/>
        <function-ref name="readDone" scoped="" ref="0x7f1a280966d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a28081e40" loc="116:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a28081e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a280801e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CReg" ref="0x7f1a28093450" loc="106:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CReg" scoped="" ref="0x7f1a28093450"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CReg"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="reg_writeBlock" scoped="" ref="0x7f1a280937d0"/>
        <function-ref name="reg_write16" scoped="" ref="0x7f1a28093960"/>
        <function-ref name="reg_read16" scoped="" ref="0x7f1a28093af0"/>
        <function-ref name="slave_present" scoped="" ref="0x7f1a28093c80"/>
        <function-ref name="reg_write" scoped="" ref="0x7f1a28093e10"/>
        <function-ref name="reg_read" scoped="" ref="0x7f1a28092020"/>
        <function-ref name="reg_readBlock" scoped="" ref="0x7f1a280921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CSlave" ref="0x7f1a280929c0" loc="107:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CSlave" scoped="" ref="0x7f1a280929c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CSlave"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="slaveTransmitRequested" scoped="" ref="0x7f1a28091b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1a28091020"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1a280911b0"/>
        <function-ref name="slaveTransmit" scoped="" ref="0x7f1a28091340"/>
        <function-ref name="slaveReceiveRequested" scoped="" ref="0x7f1a280914d0"/>
        <function-ref name="slaveStart" scoped="" ref="0x7f1a28091660"/>
        <function-ref name="slaveStop" scoped="" ref="0x7f1a28092d40"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1a280917f0"/>
        <function-ref name="slaveReceive" scoped="" ref="0x7f1a28091980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCL" ref="0x7f1a280836b0" loc="115:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f1a280836b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28083a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28083bc0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28083d50"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28082020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a280821b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28082340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a280824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28082660"/>
        <function-ref name="get" scoped="" ref="0x7f1a280827f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28082980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28082b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28082ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28082e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28081120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a280812b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28081440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a280815d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1a280804a0" loc="117:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a280804a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28080820"/>
        <function-ref name="userId" scoped="" ref="0x7f1a280809b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a2808e1d0" loc="109:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2808e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a2808e550"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a2808e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a2808eab0" loc="112:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a2808eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a2808ee30"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a2808d020"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a2808d1b0"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a2808d340"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a2808d4d0"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a2808d660"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a2808d7f0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a2808d980"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a2808db10"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a2808dca0"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a2808de30"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a2808c020"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a2808c1b0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a2808c440"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a2808c5d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a2808c760"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a2808c8f0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a2808ca80"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a2808cc10"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a2808cda0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a2808b020"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a2808b1b0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a2808b340"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a2808b4d0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a2808b660"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a2808b9f0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a2808bb80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a2808bd10"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a2808a020"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a2808a1b0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a2808a340"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a2808a4d0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a2808a660"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a2808a7f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a2808a980"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a2808ab10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a2808aca0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a2808ae30"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a28089020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a280891b0"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a28089340"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a280894d0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a28089660"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a280897f0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a28089980"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28089b10"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a28089ca0"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a28089e30"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a28088020"/>
        <function-ref name="configure" scoped="" ref="0x7f1a280885b0"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a28088740"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a280888d0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a28088a60"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a28088bf0"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a28088d80"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a28087020"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a280871b0"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a28087340"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a280874d0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a28087660"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a280877f0"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a28087980"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28087b10"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a28087ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a28087e30"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a28086020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a280861b0"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a28086340"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a280864d0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a28086660"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a280867f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f1a2807f460" loc="119:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f1a2807f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="usecsRaw" scoped="" ref="0x7f1a2807f8e0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f1a2807fa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27ee2110" loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27ee2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27ee2490"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27ee2620"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27ee27b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27ee2b20" loc="70:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27ee2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27ee1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f1a27ee5020" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27ee5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27ee53a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27ee5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27ee56c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27ee5850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27ee59e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27ee5b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f1a27ee4a50" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TinyosReceive" scoped="" ref="0x7f1a27ee4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27ee4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27ee1380" loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27ee1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27ee1700"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27ee1890"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27ee1a20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27ee1bb0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27ee1d40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27ee0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f1a27ee4020" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TinyosSend" scoped="" ref="0x7f1a27ee4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27ee43a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27ee4530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27ee46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f1a27eeadf0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f1a27eeadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27ee71c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27ee7350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27ee74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f1a27ee7870" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1a27ee7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27ee7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f1a27ee3180" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TinyosPacket" scoped="" ref="0x7f1a27ee3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27ee3500"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27ee3690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27ee3820"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27ee39b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27ee3b40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27ee3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1a282d4020" loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1a282d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a282d43a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a282d4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1a282deb60" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f1a282deb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a282e4230"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a282d9110"/>
        <function-ref name="fired" scoped="" ref="0x7f1a282db5f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a282da4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a282da020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a282d9a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a282d9590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a282dba70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a282dc790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a282daab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a282dcc60"/>
        <function-ref name="stop" scoped="" ref="0x7f1a282db170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a282e35a0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a282e35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a282e4230"/></type-var>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a282dfa80"/>
        <function-ref name="fired" scoped="" ref="0x7f1a282e1090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a282e1e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a282e1990"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a282de4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a282de020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a282e1510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a282e2200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a282df470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a282e26d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a282e2ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a285f4d30" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a285f4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a285f0670"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285f1550"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a285f0020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a285f1a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a285f0b30"/>
        <function-ref name="start" scoped="" ref="0x7f1a285f2b60"/>
        <function-ref name="stop" scoped="" ref="0x7f1a285f1090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a285f4400" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a285f4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a285f4780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1a278fd8a0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1a278fd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278fdc20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278fddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278fc020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278fc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278fc340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1a278f3a30" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1a278f3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278f3db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278f2020"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278f21b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278f2340"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278f24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278f2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1a278fa8a0" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1a278fa8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278fac20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278fadb0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278f9020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278f91b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278f9340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1a278f88a0" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1a278f88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278f8c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278f8db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278f7020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278f71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278f7340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1a279008a0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1a279008a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27900c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27900db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278ff020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278ff1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278ff340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1a278f58a0" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1a278f58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278f5d20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278f4020"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278f41b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278f4340"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278f44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1a278fc8a0" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1a278fc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278fcc20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278fcdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278fb020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278fb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278fb340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1a278f2a30" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1a278f2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278f2db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278f1020"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278f11b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278f1340"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278f14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1a27906970" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1a27906970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27906cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27906e80"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27903030"/>
        <function-ref name="edge" scoped="" ref="0x7f1a279031c0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27903350"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279034e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1a278f78a0" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1a278f78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278f7c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278f7db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278f6020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278f61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278f6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1a278ff8a0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1a278ff8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278ffc20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278ffdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278fd020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278fd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278fd340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1a278f4a30" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1a278f4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278f4db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278f3020"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278f31b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278f3340"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278f34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1a278fb8a0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1a278fb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278fbc20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278fbdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278fa020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278fa1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278fa340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1a278f98a0" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1a278f98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278f9c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278f9db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278f8020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278f81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278f8340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1a279038b0" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1a279038b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27903c30"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27903dc0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27900020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a279001b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27900340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1a278f68a0" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1a278f68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a278f6c20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a278f6db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a278f5020"/>
        <function-ref name="edge" scoped="" ref="0x7f1a278f51b0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a278f5340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a278f54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a27f5c6b0" loc="52:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a27f5c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a27f5ca30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a27f5cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a27f5bc70" loc="56:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a27f5bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a27f5a020"/>
        <function-ref name="configure" scoped="" ref="0x7f1a27f5a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1a27f5a510" loc="57:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1a27f5a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1a27f5a890"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1a27f5aa20"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1a27f5abb0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1a27f5ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a27f5e430" loc="51:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a27f5e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a27f5e7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a27f5e940"/>
        <function-ref name="request" scoped="" ref="0x7f1a27f5ead0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a27f5ec60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a27f5edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a27f5ce80" loc="53:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a27f5ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a27f5b220"/>
        <function-ref name="userId" scoped="" ref="0x7f1a27f5b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1a27f57410" loc="68:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1a27f57410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a27f57790"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a27f57920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioCapture" ref="0x7f1a2795a0c0" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
      <component-ref qname="SoftCaptureC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioCapture" scoped="" ref="0x7f1a2795a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1a2795a440"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2795a5d0"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2795a760"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1a2795a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f1a27954360" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
      <component-ref qname="SoftCaptureC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1a27954360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a279546e0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27954870"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1a27954a00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1a27954b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f1a290c88b0" loc="62:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepP.nc">
      <component-ref qname="McuSleepP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1a290c88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1a290c8c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleepEvents" ref="0x7f1a290c8020" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepP.nc">
      <component-ref qname="McuSleepP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleepEvents" scoped="" ref="0x7f1a290c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleepEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="preSleep" scoped="" ref="0x7f1a290c83a0"/>
        <function-ref name="postSleep" scoped="" ref="0x7f1a290c8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f1a290c92d0" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepP.nc">
      <component-ref qname="McuSleepP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1a290c92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f1a290c9650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f1a290c9930" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepP.nc">
      <component-ref qname="McuSleepP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f1a290c9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1a290c9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a27d160c0" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a27d160c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27d16440"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27d165d0"/>
        <function-ref name="start" scoped="" ref="0x7f1a27d16760"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d168f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f1a27d0d0f0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioState" scoped="" ref="0x7f1a27d0d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27d0d470"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27d0d600"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27d0d790"/>
        <function-ref name="done" scoped="" ref="0x7f1a27d0d920"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27d0dab0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27d0dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27d16c10" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27d16c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d15020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d151b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d15340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f1a27d09d60" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27d09d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d11180"/>
        <function-ref name="header" scoped="" ref="0x7f1a27d11310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a27d15690" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a27d15690"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d15a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f1a27d093f0" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27d093f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d09770"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27d09900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d09a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1a27d15ce0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioChannel" scoped="" ref="0x7f1a27d15ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1a27d140a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27d14230"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27d143c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f1a28396aa0" loc="53:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1a28396aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a283938d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a283912a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28393d90"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28391760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f1a27bba5e0" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f1a27bba5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27bba960"/>
        <function-ref name="get" scoped="" ref="0x7f1a27bbaaf0"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27bbac80"/>
        <function-ref name="set" scoped="" ref="0x7f1a27bbae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27bbb4e0" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27bbb4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27bbb860"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27bbb9f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27bbbb80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27bbbd10"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27bba020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27bba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27bb78d0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27bb78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27bb7c50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27bb7de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27bb6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27bb61b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27bb6340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27bb64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f1a27bbf840" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a27bbf840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27bbedd0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27bbd540"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27bbe6a0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27bbdc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f1a27bb9350" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27bb9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27bb8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f1a27bb86a0" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1a27bb86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27bb73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1a27bc3770" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a27bc3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27bc2ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27bc1460"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27bc25b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27bc1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1a27913bc0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1a27913bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27912020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a279121b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27912340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a279124d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27912660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1a27909bc0" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1a27909bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27908020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a279081b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27908340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a279084d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27908660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1a27910bc0" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1a27910bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2790f020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2790f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2790f340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a2790f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a2790f660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a2790f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1a2790ebc0" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1a2790ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2790d020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2790d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2790d340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a2790d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a2790d660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a2790d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1a27915c80" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1a27915c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a279140a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27914230"/>
        <function-ref name="disable" scoped="" ref="0x7f1a279143c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1a27914550"/>
        <function-ref name="enable" scoped="" ref="0x7f1a279146e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a27914870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1a2790bbc0" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1a2790bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2790a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2790a230"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2790a3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1a2790a550"/>
        <function-ref name="enable" scoped="" ref="0x7f1a2790a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a2790a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1a27912bc0" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1a27912bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27911020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a279111b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27911340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a279114d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27911660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279117f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1a27908bc0" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1a27908bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27907020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a279071b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27907340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a279074d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27907660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1a27919dd0" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1a27919dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27916180"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27916310"/>
        <function-ref name="disable" scoped="" ref="0x7f1a279164a0"/>
        <function-ref name="edge" scoped="" ref="0x7f1a27916630"/>
        <function-ref name="enable" scoped="" ref="0x7f1a279167c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a27916950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1a2790dbc0" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1a2790dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2790c020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2790c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2790c340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a2790c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a2790c660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a2790c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1a27914c40" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1a27914c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27913020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a279131b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27913340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a279134d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27913660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1a2790ac40" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1a2790ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27909020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a279091b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27909340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a279094d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27909660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1a27911bc0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1a27911bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27910020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a279101b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27910340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a279104d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27910660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279107f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1a2790fbc0" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1a2790fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2790e020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2790e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2790e340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a2790e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a2790e660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a2790e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1a27916d20" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1a27916d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a279150e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27915270"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27915400"/>
        <function-ref name="edge" scoped="" ref="0x7f1a27915590"/>
        <function-ref name="enable" scoped="" ref="0x7f1a27915720"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a279158b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1a2790cbc0" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1a2790cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2790b020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2790b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2790b340"/>
        <function-ref name="edge" scoped="" ref="0x7f1a2790b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1a2790b660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a2790b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a280eb020" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a280eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a280eb3a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a280eb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDA" ref="0x7f1a280e76b0" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f1a280e76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a280e7a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a280e7bc0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a280e7d50"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a280e6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a280e61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a280e6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a280e64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a280e6660"/>
        <function-ref name="get" scoped="" ref="0x7f1a280e67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a280e6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a280e6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a280e6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a280e6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a280e5120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a280e52b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a280e5440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a280e55d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Panic" ref="0x7f1a280de320" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Panic" scoped="" ref="0x7f1a280de320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Panic"/>
      </instance>
      <interface-functions>
        <function-ref name="warn" scoped="" ref="0x7f1a280de6a0"/>
        <function-ref name="panic" scoped="" ref="0x7f1a280de830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f1a280deae0" loc="62:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f1a280deae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="usecsRaw" scoped="" ref="0x7f1a280dee60"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f1a280e4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a280eac00" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a280eac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a280e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CReg" ref="0x7f1a280f4e60" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CReg" scoped="" ref="0x7f1a280f4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CReg"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="reg_writeBlock" scoped="" ref="0x7f1a280ff210"/>
        <function-ref name="reg_write16" scoped="" ref="0x7f1a280ff3a0"/>
        <function-ref name="reg_read16" scoped="" ref="0x7f1a280ff530"/>
        <function-ref name="slave_present" scoped="" ref="0x7f1a280ff6c0"/>
        <function-ref name="reg_write" scoped="" ref="0x7f1a280ff850"/>
        <function-ref name="reg_read" scoped="" ref="0x7f1a280ff9e0"/>
        <function-ref name="reg_readBlock" scoped="" ref="0x7f1a280ffb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CSlave" ref="0x7f1a280f35a0" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CSlave" scoped="" ref="0x7f1a280f35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CSlave"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="slaveTransmitRequested" scoped="" ref="0x7f1a280f2660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1a280f3ab0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1a280f3c40"/>
        <function-ref name="slaveTransmit" scoped="" ref="0x7f1a280f3dd0"/>
        <function-ref name="slaveReceiveRequested" scoped="" ref="0x7f1a280f2020"/>
        <function-ref name="slaveStart" scoped="" ref="0x7f1a280f21b0"/>
        <function-ref name="slaveStop" scoped="" ref="0x7f1a280f3920"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1a280f2340"/>
        <function-ref name="slaveReceive" scoped="" ref="0x7f1a280f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f1a28104cd0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CPacket" scoped="" ref="0x7f1a28104cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f1a281123d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f1a28112690"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1a28114980"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1a28105e60"/>
        <function-ref name="write" scoped="" ref="0x7f1a281135c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1a28105250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a280ebd80" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a280ebd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a280ea180"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a280ea310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCL" ref="0x7f1a280e9390" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciI2CB1P.nc">
      <component-ref qname="Msp430UsciI2CB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f1a280e9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a280e9710"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a280e98a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a280e9a30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a280e9bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a280e9d50"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a280e8020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a280e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a280e8340"/>
        <function-ref name="get" scoped="" ref="0x7f1a280e84d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a280e8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a280e87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a280e8980"/>
        <function-ref name="set" scoped="" ref="0x7f1a280e8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a280e8da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a280e7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a280e71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a280e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a28266b70" loc="9:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <component-ref qname="Msp430UsciSpiA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28266b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a2825f020"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2825f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBlock" ref="0x7f1a28260170" loc="6:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <component-ref qname="Msp430UsciSpiA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a28260170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a282604f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1a28265e50" loc="5:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <component-ref qname="Msp430UsciSpiA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1a28265e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a2826d210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a2826d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1a28261710" loc="7:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <component-ref qname="Msp430UsciSpiA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a28261710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a28261a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a2825faa0" loc="12:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <component-ref qname="Msp430UsciSpiA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2825faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a2825fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1a2825c530" loc="14:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <component-ref qname="Msp430UsciSpiA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1a2825c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2825c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2825ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a2825cbd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2825cd60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28259020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a282591b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28259340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a282594d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28259660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a282597f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28259980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28259b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28259ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28258020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a282581b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28258340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a282584d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLK" ref="0x7f1a28258840" loc="15:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <component-ref qname="Msp430UsciSpiA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLK" scoped="" ref="0x7f1a28258840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28258bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28258d50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28257020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a282571b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28257340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a282574d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28257660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a282577f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28257980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28257b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28257ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28257e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28256020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a282562b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28256440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a282565d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28256760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a28261d80" loc="8:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <component-ref qname="Msp430UsciSpiA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a28261d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a28266180"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a28266310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1a2825e1f0" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiA0P.nc">
      <component-ref qname="Msp430UsciSpiA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1a2825e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2825e570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2825e700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a2825e890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2825ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a2825ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a2825ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a2825d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2825d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a2825d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a2825d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a2825d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a2825d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a2825d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a2825dc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a2825dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a2825c020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a2825c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27da5590" loc="85:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27da5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27da5910"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27da5aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27da5c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27da4020" loc="86:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27da4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27da43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27dab770" loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27dab770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27dabaf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27dabc80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27dabe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27da6600" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27da6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27da6980"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27da6b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27da6ca0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27da6e30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27da5020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27da51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27da4700" loc="87:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27da4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27da4a80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27da4c10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27da4da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27da3020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27da31b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27da3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a27da71c0" loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a27da71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27da7540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f1a27da3670" loc="88:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27da3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1a27da39f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1a27da3b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1a27da3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1a27da7800" loc="79:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1a27da7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1a27da7b80"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1a27da7d10"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1a27da6020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1a27da61b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1a27da6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1a28397900" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a28397900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2839c780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2839b150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2839cc40"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2839b610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Pmm" ref="0x7f1a28dba4a0" loc="65:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Pmm" scoped="" ref="0x7f1a28dba4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28dba820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformPins" ref="0x7f1a28dbb710" loc="63:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformPins" scoped="" ref="0x7f1a28dbb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28dbba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1a28db9340" loc="67:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f1a28db9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28db96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a28dc17d0" loc="59:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a28dc17d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28dc1b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformLeds" ref="0x7f1a28dbbdd0" loc="64:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformLeds" scoped="" ref="0x7f1a28dbbdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28dba180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformClock" ref="0x7f1a28dbab70" loc="66:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformClock" scoped="" ref="0x7f1a28dbab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28db9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PeripheralInit" ref="0x7f1a28db9a10" loc="68:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PeripheralInit" scoped="" ref="0x7f1a28db9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28db9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f1a28dc1e00" loc="60:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f1a28dc1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="usecsRaw" scoped="" ref="0x7f1a28dbb1c0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f1a28dbb350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DiagMsg" ref="0x7f1a27c20200" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/NoDiagMsgC.nc">
      <component-ref qname="NoDiagMsgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DiagMsg" scoped="" ref="0x7f1a27c20200"/></type-interface>
      <instance>
        <interfacedef-ref qname="DiagMsg"/>
      </instance>
      <interface-functions>
        <function-ref name="int32s" scoped="" ref="0x7f1a27c20580"/>
        <function-ref name="str" scoped="" ref="0x7f1a27c20710"/>
        <function-ref name="send" scoped="" ref="0x7f1a27c208a0"/>
        <function-ref name="int16" scoped="" ref="0x7f1a27c20a30"/>
        <function-ref name="hex32" scoped="" ref="0x7f1a27c20bc0"/>
        <function-ref name="int32" scoped="" ref="0x7f1a27c20d50"/>
        <function-ref name="chr" scoped="" ref="0x7f1a27c1f020"/>
        <function-ref name="uint32s" scoped="" ref="0x7f1a27c1f1b0"/>
        <function-ref name="real" scoped="" ref="0x7f1a27c1f340"/>
        <function-ref name="hex8" scoped="" ref="0x7f1a27c1f4d0"/>
        <function-ref name="uint16" scoped="" ref="0x7f1a27c1f660"/>
        <function-ref name="uint64s" scoped="" ref="0x7f1a27c1f7f0"/>
        <function-ref name="uint32" scoped="" ref="0x7f1a27c1f980"/>
        <function-ref name="uint8" scoped="" ref="0x7f1a27c1fc10"/>
        <function-ref name="hex8s" scoped="" ref="0x7f1a27c1fda0"/>
        <function-ref name="record" scoped="" ref="0x7f1a27c1e020"/>
        <function-ref name="uint8s" scoped="" ref="0x7f1a27c1e1b0"/>
        <function-ref name="reals" scoped="" ref="0x7f1a27c1e340"/>
        <function-ref name="int64" scoped="" ref="0x7f1a27c1e4d0"/>
        <function-ref name="uint16s" scoped="" ref="0x7f1a27c1e660"/>
        <function-ref name="int64s" scoped="" ref="0x7f1a27c1e7f0"/>
        <function-ref name="hex16" scoped="" ref="0x7f1a27c1e980"/>
        <function-ref name="uint64" scoped="" ref="0x7f1a27c1eb10"/>
        <function-ref name="int16s" scoped="" ref="0x7f1a27c1eca0"/>
        <function-ref name="int8" scoped="" ref="0x7f1a27c1ee30"/>
        <function-ref name="hex16s" scoped="" ref="0x7f1a27c1d220"/>
        <function-ref name="hex32s" scoped="" ref="0x7f1a27c1d3b0"/>
        <function-ref name="chrs" scoped="" ref="0x7f1a27c1d540"/>
        <function-ref name="int8s" scoped="" ref="0x7f1a27c1d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a28e959f0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a28e959f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28e95d70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28e98020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28e981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a28e92550" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a28e92550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e928d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1a28e9d020" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28e9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a28e9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1a28ea12b0" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1a28ea12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28ea1630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28ea17c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28ea1950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28ea1ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28ea1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1a28ea04d0" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1a28ea04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28ea0850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28ea09e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28ea0b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28ea0d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28e9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1a28e9e430" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1a28e9e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e9e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a28e9a060" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a28e9a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28e9a3e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28e9a570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28e9a700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28e9a890"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a28e9aa20"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a28e9abb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a28e92c60" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a28e92c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28e94020"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f1a28e941b0"/>
        <function-ref name="source" scoped="" ref="0x7f1a28e94340"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28e944d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28e94660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28e947f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28e94980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a28e9f800" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a28e9f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f1a28e9dc70" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28e9dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1a28ea5bf0" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1a28ea5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28ea2020"/>
        <function-ref name="source" scoped="" ref="0x7f1a28ea21b0"/>
        <function-ref name="address" scoped="" ref="0x7f1a28ea2340"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28ea24d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28ea2660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28ea27f0"/>
        <function-ref name="type" scoped="" ref="0x7f1a28ea2980"/>
        <function-ref name="setType" scoped="" ref="0x7f1a28ea2b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a28ea2ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28ea2e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1a28ea1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f1a28e9b8c0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28e9b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e9bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1a29053ae0" loc="46:/home/hakan/github/pillforge/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1a29053ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a29053e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a290b4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a290b41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a290b4340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a290b44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a2905a180" loc="45:/home/hakan/github/pillforge/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a2905a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a2905a500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1a29042af0" loc="47:/home/hakan/github/pillforge/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1a29042af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a29042e70"/>
        <function-ref name="source" scoped="" ref="0x7f1a290b3030"/>
        <function-ref name="address" scoped="" ref="0x7f1a290b31c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1a290b3350"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a290b34e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a290b3670"/>
        <function-ref name="type" scoped="" ref="0x7f1a290b3800"/>
        <function-ref name="setType" scoped="" ref="0x7f1a290b3990"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a290b3b20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a290b3cb0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1a290b3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a280bbbc0" loc="10:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB1P.nc">
      <component-ref qname="HplMsp430UsciInterruptsB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a280bbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a280b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1a280b0430" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB1P.nc">
      <component-ref qname="HplMsp430UsciInterruptsB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a280b0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a280b07b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a280b0940"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a280b0ad0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a280b0c60"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a280b0df0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a280af020"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a280af1b0"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a280af340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a280af4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a280af660"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a280af7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a280af980"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a280afb10"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a280afda0"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a280ae020"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a280ae1b0"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a280ae340"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a280ae4d0"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a280ae660"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a280ae7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a280ae980"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a280aeb10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a280aeca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a280aee30"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a280ad020"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a280ad3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a280b83d0" loc="12:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB1P.nc">
      <component-ref qname="HplMsp430UsciInterruptsB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a280b83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a280b8750"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a280b88e0"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a280b8a70"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a280b8c00"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a280b8d90"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a280b7020"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a280b71b0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a280b7340"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a280b74d0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a280b7660"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a280b77f0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a280b7980"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a280b7b10"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a280b7da0"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a280b6020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a280b61b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a280b6340"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a280b64d0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a280b6660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a280b67f0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a280b6980"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a280b6b10"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a280b6ca0"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a280b6e30"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a280b5020"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a280b53b0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a280b5540"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a280b56d0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a280b5860"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a280b59f0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a280b5b80"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a280b5d10"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a280b4020"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a280b41b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a280b4340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a280b44d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a280b4660"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a280b47f0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a280b4980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a280b4b10"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a280b4ca0"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a280b4e30"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a280b3020"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a280b31b0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a280b3340"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a280b34d0"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a280b3660"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a280b37f0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a280b3980"/>
        <function-ref name="configure" scoped="" ref="0x7f1a280b2020"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a280b21b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a280b2340"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a280b24d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a280b2660"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a280b27f0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a280b2980"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a280b2b10"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a280b2ca0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a280b2e30"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a280b1020"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a280b11b0"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a280b1340"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a280b14d0"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a280b1660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a280b17f0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a280b1980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a280b1b10"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a280b1ca0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a280b1e30"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a280b0020"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a280b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a2903be40" loc="42:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a2903be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a290401e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a29040370"/>
        <function-ref name="start" scoped="" ref="0x7f1a29040500"/>
        <function-ref name="stop" scoped="" ref="0x7f1a29040690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f1a29015060" loc="57:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a29015060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a29011780"/>
        <function-ref name="get" scoped="" ref="0x7f1a29011230"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a29015c90"/>
        <function-ref name="set" scoped="" ref="0x7f1a29011cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1a2902e020" loc="47:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1a2902e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a2902e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1a2902e630" loc="49:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1a2902e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2902e9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a2902eb40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a2902ecd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a2902ee60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a2902d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1a2902fb00" loc="44:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1a2902fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a2902fe80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a2903f030"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a2903f1c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a2903f350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a2903f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1a2903a900" loc="46:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1a2903a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a2903ac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1a2901edd0" loc="53:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a2901edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1a29028180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1a29028310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1a290284a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1a29028630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a2903fcc0" loc="45:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a2903fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a2903a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1a290224c0" loc="52:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a290224c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1a29022840"/>
        <function-ref name="noAck" scoped="" ref="0x7f1a290229d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1a29022b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1a2901d020" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1a2901d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1a2901d3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1a2901d530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1a2901d6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1a2901d850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1a2901d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1a2902d2d0" loc="50:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1a2902d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a2902d650"/>
        <function-ref name="source" scoped="" ref="0x7f1a2902d7e0"/>
        <function-ref name="address" scoped="" ref="0x7f1a2902d970"/>
        <function-ref name="destination" scoped="" ref="0x7f1a2902db00"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a2902dc90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a2902de20"/>
        <function-ref name="type" scoped="" ref="0x7f1a2902a020"/>
        <function-ref name="setType" scoped="" ref="0x7f1a2902a1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a2902a340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a2902a4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1a2902a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1a29012ce0" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioChannel" scoped="" ref="0x7f1a29012ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1a2901c0a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a2901c230"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a2901c3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1a29007b30" loc="59:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a29007b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a29002210"/>
        <function-ref name="clear" scoped="" ref="0x7f1a29002940"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a29009a80"/>
        <function-ref name="set" scoped="" ref="0x7f1a29001090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a288541d0" loc="8:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
      <component-ref qname="Msp430UsciA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a288541d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a28854550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a288546e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a2884d750" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
      <component-ref qname="Msp430UsciA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2884d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a2884dad0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2884dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a2884bae0" loc="11:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
      <component-ref qname="Msp430UsciA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a2884bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a2884be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USCI" ref="0x7f1a2885c8a0" loc="6:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
      <component-ref qname="Msp430UsciA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="USCI" scoped="" ref="0x7f1a2885c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a2885cc20"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a2885cdb0"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a28891020"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a288911b0"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a28891340"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a288914d0"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a28891660"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a288917f0"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a28891980"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a28891b10"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a28891ca0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a28891e30"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a28890020"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a288902b0"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a28890440"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a288905d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a28890760"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a288908f0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a28890a80"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a28890c10"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a28890da0"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a2885b020"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a2885b1b0"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a2885b340"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a2885b4d0"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a2885b860"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a2885b9f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a2885bb80"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a2885bd10"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a2885a020"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a2885a1b0"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a2885a340"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a2885a4d0"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a2885a660"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a2885a7f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a2885a980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a2885ab10"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a2885aca0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a2885ae30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a28859020"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a288591b0"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a28859340"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a288594d0"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a28859660"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a288597f0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28859980"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a28859b10"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a28859ca0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a28859e30"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28858420"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a288585b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a28858740"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a288588d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a28858a60"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a28858bf0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a28858d80"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a28857020"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a288571b0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a28857340"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a288574d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a28857660"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a288577f0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28857980"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a28857b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a28857ca0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a28857e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a28856020"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a288561b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a28856340"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a288564d0"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a28856660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a2884edb0" loc="9:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
      <component-ref qname="Msp430UsciA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a2884edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28853180"/>
        <function-ref name="requested" scoped="" ref="0x7f1a28853310"/>
        <function-ref name="granted" scoped="" ref="0x7f1a288534a0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28853630"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a288537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a28856e70" loc="7:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
      <component-ref qname="Msp430UsciA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a28856e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28855220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a288553b0"/>
        <function-ref name="request" scoped="" ref="0x7f1a28855540"/>
        <function-ref name="granted" scoped="" ref="0x7f1a288556d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28855860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a28853a80" loc="10:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciA1P.nc">
      <component-ref qname="Msp430UsciA1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28853a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28853e00"/>
        <function-ref name="userId" scoped="" ref="0x7f1a28852020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a2872e9f0" loc="55:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a2872e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a2872ed70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a2872c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a2872bdf0" loc="60:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2872bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a2872a1c0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2872a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1a2872a6b0" loc="61:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1a2872a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1a2872aa30"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1a2872abc0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1a2872ad50"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1a28729020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a2872c340" loc="56:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a2872c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a2872c6c0"/>
        <function-ref name="requested" scoped="" ref="0x7f1a2872c850"/>
        <function-ref name="granted" scoped="" ref="0x7f1a2872c9e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a2872cb70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a2872cd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1a287292a0" loc="62:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a287292a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a28729620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a287297b0"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a28729940"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a28729ad0"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a28729c60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a28729df0"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a28728020"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a287281b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a28728340"/>
        <function-ref name="get" scoped="" ref="0x7f1a287284d0"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a28728660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a287287f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a28728980"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a28728c10"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a28728da0"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a28727020"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a287271b0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a28727340"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a287274d0"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a28727660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a287277f0"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a28727980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a28727b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28727ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a28727e30"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a28726220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a2872f660" loc="54:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a2872f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a2872f9e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a2872fb70"/>
        <function-ref name="request" scoped="" ref="0x7f1a2872fd00"/>
        <function-ref name="granted" scoped="" ref="0x7f1a2872e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a2872e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a2872b020" loc="57:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a2872b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a2872b3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1a2872b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1a287235d0" loc="75:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1a287235d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a28723950"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a28723ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f1a28304700" loc="74:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f1a28304700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a28304a80"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a28304c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1a28312d30" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a28312d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a2831ace0"/></type-var>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a2830e670"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2830f550"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a2830e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a2830fa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a2830eb30"/>
        <function-ref name="start" scoped="" ref="0x7f1a28311b60"/>
        <function-ref name="stop" scoped="" ref="0x7f1a2830f090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a28317770" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28317770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a2831ace0"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a28313c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1a283141e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a28313020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a28314ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a28312590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a28312110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a28314660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a28316390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a28313630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a28316860"/>
        <function-ref name="stop" scoped="" ref="0x7f1a28316d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1a2882ae70" loc="100:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a2882ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28829220"/>
        <function-ref name="userId" scoped="" ref="0x7f1a288293b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a2882a020" loc="96:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a2882a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a2882a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1a28829630" loc="101:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a28829630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a288299b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a28829b40"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a28829cd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a28829e60"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a28828020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a288281b0"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a28828340"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a288284d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a28828660"/>
        <function-ref name="get" scoped="" ref="0x7f1a288287f0"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a28828980"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a28828b10"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a28828ca0"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a28827020"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a288271b0"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a28827340"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a288274d0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a28827660"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a288277f0"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a28827980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a28827b10"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a28827ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a28827e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28826020"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a288261b0"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a28826540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usci" ref="0x7f1a28833760" loc="95:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a28833760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a28833ae0"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a28833c70"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a28833e00"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a28832020"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a288321b0"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a28832340"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a288324d0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a28832660"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a288327f0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a28832980"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a28832b10"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a28832ca0"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a28832e30"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a28831120"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a288312b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a28831440"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a288315d0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a28831760"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a288318f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a28831a80"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a28831c10"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a28831da0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a28830020"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a288301b0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a28830340"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a288306d0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a28830860"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a288309f0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a28830b80"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a28830d10"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a2882f020"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a2882f1b0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a2882f340"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a2882f4d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a2882f660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a2882f7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a2882f980"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a2882fb10"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a2882fca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a2882fe30"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a2882e020"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a2882e1b0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a2882e340"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a2882e4d0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a2882e660"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a2882e7f0"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a2882e980"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a2882eb10"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a2882eca0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2882d420"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a2882d5b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a2882d740"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a2882d8d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a2882da60"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a2882dbf0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a2882dd80"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a2882c020"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a2882c1b0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a2882c340"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a2882c4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a2882c660"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a2882c7f0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a2882c980"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a2882cb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a2882cca0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a2882ce30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a2882b020"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a2882b1b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a2882b340"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a2882b4d0"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a2882b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1a2882a830" loc="99:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a2882a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a2882abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBlock" ref="0x7f1a279a3650" loc="29:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a279a3650"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a279a39d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1a279a3020" loc="28:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a279a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a279a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f1a279a3ce0" loc="30:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1a279a3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a279a20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a279a2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a279a23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a279a2550"/>
        <function-ref name="get" scoped="" ref="0x7f1a279a26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a279a2870"/>
        <function-ref name="set" scoped="" ref="0x7f1a279a2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a279a2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GDO2" ref="0x7f1a279a0340" loc="32:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GDO2" scoped="" ref="0x7f1a279a0340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a279a06c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a279a0850"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a279a09e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a279a0b70"/>
        <function-ref name="get" scoped="" ref="0x7f1a279a0d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2799f020"/>
        <function-ref name="set" scoped="" ref="0x7f1a2799f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a2799f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f1a279a42c0" loc="27:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1a279a42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a279a4640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a279a47d0"/>
        <function-ref name="request" scoped="" ref="0x7f1a279a4960"/>
        <function-ref name="granted" scoped="" ref="0x7f1a279a4af0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a279a4c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RADIO_EN" ref="0x7f1a2799f690" loc="33:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RADIO_EN" scoped="" ref="0x7f1a2799f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2799fa10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2799fba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2799fd30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a2799e020"/>
        <function-ref name="get" scoped="" ref="0x7f1a2799e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2799e340"/>
        <function-ref name="set" scoped="" ref="0x7f1a2799e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a2799e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gdo0Capture" ref="0x7f1a2799e9d0" loc="34:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gdo0Capture" scoped="" ref="0x7f1a2799e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1a2799ed50"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2799d020"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2799d1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1a2799d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GDO0" ref="0x7f1a279a1020" loc="31:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GDO0" scoped="" ref="0x7f1a279a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a279a13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a279a1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a279a16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a279a1850"/>
        <function-ref name="get" scoped="" ref="0x7f1a279a19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a279a1b70"/>
        <function-ref name="set" scoped="" ref="0x7f1a279a1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a279a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f1a2799d840" loc="37:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a2799d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2799c4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a2799c8e0" loc="38:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a2799c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a2799cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a2799a200" loc="39:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplCC1101C.nc">
      <component-ref qname="HplCC1101C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a2799a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a27998b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27999a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a279984e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a27998020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a27997020"/>
        <function-ref name="start" scoped="" ref="0x7f1a27999090"/>
        <function-ref name="stop" scoped="" ref="0x7f1a279995a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f1a27e9f820" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27e9f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f1a27e9fba0"/>
        <function-ref name="address" scoped="" ref="0x7f1a27e9fd30"/>
        <function-ref name="destination" scoped="" ref="0x7f1a27e9e020"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a27e9e1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a27e9e340"/>
        <function-ref name="pan" scoped="" ref="0x7f1a27e9e4d0"/>
        <function-ref name="setPan" scoped="" ref="0x7f1a27e9e660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27e9e7f0"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27e9e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27e9ec40" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27e9ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27e9d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27e9d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27e9d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27e9d4d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27e9d660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27e9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f1a27ea4680" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27ea4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f1a27ea4a00"/>
        <function-ref name="getDSN" scoped="" ref="0x7f1a27ea4b90"/>
        <function-ref name="setFCF" scoped="" ref="0x7f1a27ea4d20"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f1a27ea1020"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f1a27ea11b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f1a27ea1340"/>
        <function-ref name="setDSN" scoped="" ref="0x7f1a27ea14d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f1a27ea1660"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f1a27ea17f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f1a27ea1980"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f1a27ea1b10"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f1a27ea1ca0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f1a27ea1e30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a27ea0120"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27ea02b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f1a27ea0440"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f1a27ea05d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f1a27ea0760"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f1a27ea08f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27ea0a80"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a27ea0c10"/>
        <function-ref name="getFCF" scoped="" ref="0x7f1a27ea0da0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a27e9f020"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f1a27e9f1b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f1a27e9f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1a27e9dbb0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1a27e9dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1a27e9c020"/>
        <function-ref name="changed" scoped="" ref="0x7f1a27e9c1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1a27e9c340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1a27e9c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27e9c830" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27e9c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27e9cbb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27e9cd40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27e9b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27e9b1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27e9b340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27e9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a285186f0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerCapComP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a285186f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28518a70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28518c00"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28518d90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28517020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285171b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28517340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a2851a400" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerCapComP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a2851a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2851a780"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2851a910"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2851aaa0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2851ac30"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2851adc0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28519020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285191b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28519340"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a28515020" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerCapComP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a28515020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a285153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a28519880" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerCapComP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a28519880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28519c00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28519d90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28518020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285181b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28518340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a285176c0" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerCapComP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a285176c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28517a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28517bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28517d60"/>
        <function-ref name="get" scoped="" ref="0x7f1a28516020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285161b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28516340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a285164d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28516660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a285167f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28516980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a28516b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ACLK" ref="0x7f1a28c63700" loc="486:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ACLK" scoped="" ref="0x7f1a28c63700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c63a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c63c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c63da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c62020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c621b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c62340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c62660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c627f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c62980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c62b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c62ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c62e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c61120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c612b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c61440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c615d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1a28d17020" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1a28d17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d173a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d17530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d176c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d17850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d179e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d17b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d17d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d16020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d161b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d16340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d164d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d16660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d167f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d16a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d16c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d16da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1a28d00020" loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1a28d00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d003a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d00530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d006c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d00850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d009e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d00b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d00d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cff020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cff1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cff340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cff4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cff660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cff7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cffa80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cffc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cffda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cfe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port71" ref="0x7f1a28cb2580" loc="117:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port71" scoped="" ref="0x7f1a28cb2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cb2900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cb2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cb2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cb2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cb1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cb11b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cb1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cb14d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cb1660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cb17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cb1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cb1b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cb1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cb0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cb01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cb0340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cb04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port83" ref="0x7f1a28c9b580" loc="130:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port83" scoped="" ref="0x7f1a28c9b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c9b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c9ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c9bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c9bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c9a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c9a1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c9a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c9a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c9a660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c9a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c9a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c9ab10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c9aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c99020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c991b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c99340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1STE" ref="0x7f1a28c33400" loc="512:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1STE" scoped="" ref="0x7f1a28c33400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c33780"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c33910"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c33aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c33c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c33dc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c32020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c32340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c324d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c32660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c32980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c32b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c32da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c31020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c311b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f1a28cfc710" loc="72:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f1a28cfc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cfca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cfcc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cfcdb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cfb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cfb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cfb340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cfb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cfb660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cfb7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cfb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cfbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cfbca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cfbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cfa120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cfa2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cfa440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cfa5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f1a28ce68a0" loc="85:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f1a28ce68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ce6c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ce6db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ce5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ce51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ce5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ce54d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ce5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ce57f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ce5980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ce5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ce5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ce5e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ce4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ce42b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ce4440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ce45d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ce4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f1a28ccf8a0" loc="98:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f1a28ccf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ccfc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ccfdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cce020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cce340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cce4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cce7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cce980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cceb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cceca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ccee30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ccd020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ccd2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ccd440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ccd5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ccd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f1a28cbd200" loc="109:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f1a28cbd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cbd580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cbd710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cbd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cbda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cbdbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cbdd50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cbc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cbc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cbc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cbc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cbc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cbc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cbc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cbcc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cbcda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cbb020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port76" ref="0x7f1a28ca6580" loc="122:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port76" scoped="" ref="0x7f1a28ca6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ca6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ca6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ca6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ca6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ca5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ca51b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ca5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ca54d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ca5660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ca57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ca5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ca5b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ca5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ca4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ca41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ca4340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ca44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA0CCR4" ref="0x7f1a28c7fe60" loc="460:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA0CCR4" scoped="" ref="0x7f1a28c7fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c7e210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c7e3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c7e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c7e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c7e850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c7e9e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c7eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c7ed00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c7d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c7d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c7d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c7d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c7d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c7d8f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c7da80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c7dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c7dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f1a28c1b700" loc="524:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f1a28c1b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c1ba80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c1bc10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c1bda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c1a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c1a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c1a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c1a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c1a660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c1a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c1a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c1ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c1aca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c1ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c19120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c192b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c19440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c195d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TB0CCR1" ref="0x7f1a28c0db40" loc="551:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TB0CCR1" scoped="" ref="0x7f1a28c0db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c0c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c0c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c0c340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c0c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c0c660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c0c7f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c0c980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c0cb10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c0cca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c0ce30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c0b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c0b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c0b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c0b5d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c0b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c0b8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c0ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f1a28c283e0" loc="518:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f1a28c283e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c28760"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c288f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c28a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c28c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c28da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c27020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c27340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c274d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c27660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c277f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c27980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c27b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c27da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c26020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c261b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c26340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1a28d109a0" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1a28d109a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d10d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d0f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d0f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d0f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d0f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d0f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d0f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d0f980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d0fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d0fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d0fe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d0e020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d0e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d0e440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d0e5d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d0e760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d0e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA2CCR1" ref="0x7f1a28c6e590" loc="469:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA2CCR1" scoped="" ref="0x7f1a28c6e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c6e910"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c6eaa0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c6ec30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c6edc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c6d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c6d1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c6d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c6d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c6d660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c6d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c6d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c6db10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c6dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c6c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c6c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c6c340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0CLK" ref="0x7f1a28c5fcd0" loc="490:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0CLK" scoped="" ref="0x7f1a28c5fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c5e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c5e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c5e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c5e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c5e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c5e870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c5ea00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c5eb90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c5ed20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c5d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c5d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c5d340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c5d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c5d760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c5d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c5da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c5dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1SIMO" ref="0x7f1a28c3a9c0" loc="508:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1SIMO" scoped="" ref="0x7f1a28c3a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c3ad40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c39020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c391b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c39340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c394d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c39660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c397f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c39980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c39b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c39ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c39e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c38020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c38440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c385d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c38760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC9" ref="0x7f1a28c14020" loc="531:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC9" scoped="" ref="0x7f1a28c14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c14530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c146c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c14850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c149e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c14b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c14d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c13020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c131b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c13340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c134d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c13660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c137f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c13a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c13c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c13da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TB0CCR4" ref="0x7f1a28c06590" loc="554:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TB0CCR4" scoped="" ref="0x7f1a28c06590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c06910"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c06aa0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c06c30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c06dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c05020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c051b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c05340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c054d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c05660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c057f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c05980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c05b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c05ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c04020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c041b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c04340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f1a28c8e8a0" loc="171:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PortJ1" scoped="" ref="0x7f1a28c8e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c8ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c8edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c8d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c8d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c8d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c8d4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c8d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c8d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c8d980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c8db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c8dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c8de30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c8c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c8c2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c8c440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c8c5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c8c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1a28d0b020" loc="62:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1a28d0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d0b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d0b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d0b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d0b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d0b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d0bb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d0bd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d0a020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d0a1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d0a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d0a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d0a660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d0a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d0aa80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d0ac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d0ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f1a28cf5020" loc="75:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f1a28cf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cf53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cf5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cf56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cf5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cf59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cf5b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cf5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cf4020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cf41b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cf4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cf44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cf4660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cf47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cf4a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cf4c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cf4da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f1a28cde200" loc="88:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f1a28cde200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cde580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cde710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cde8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cdea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cdebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cded50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cdd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cdd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cdd340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cdd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cdd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cdd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cdd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cddc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cddda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cdc020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cdc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f1a28cc8200" loc="101:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f1a28cc8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cc8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cc8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cc88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cc8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cc8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cc8d50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cc7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cc71b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cc7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cc74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cc7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cc77f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cc7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cc7c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cc7da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cc6020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f1a28cb7b30" loc="112:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f1a28cb7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cb6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cb61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cb6340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cb64d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cb6660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cb67f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cb6980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cb6b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cb6ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cb6e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cb5020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cb51b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cb5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cb55d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cb5760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cb58f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cb5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA1CCR2" ref="0x7f1a28c75b40" loc="465:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA1CCR2" scoped="" ref="0x7f1a28c75b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c74020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c741b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c74340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c744d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c74660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c747f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c74980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c74b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c74ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c74e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c73020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c731b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c73340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c735d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c73760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c738f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c73a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TB0CCR6" ref="0x7f1a28c02b40" loc="556:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TB0CCR6" scoped="" ref="0x7f1a28c02b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c01020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c011b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c01340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c014d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c01660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c017f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c01980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c01b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c01ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c01e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c00020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c001b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c00340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c005d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c00760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c008f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c00a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MCLK" ref="0x7f1a28bfb570" loc="560:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MCLK" scoped="" ref="0x7f1a28bfb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28bfb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28bfba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28bfbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28bfbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28bfa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28bfa1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28bfa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28bfa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28bfa660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28bfa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28bfa980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28bfab10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28bfaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28bf9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28bf91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28bf9340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28bf94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f1a28c22cb0" loc="521:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f1a28c22cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c210a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c21230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c213c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c21550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c216e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c21870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c21a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c21b90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c21d20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c20020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c20340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c20760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c208f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c20a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c20c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1a28d1c9a0" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1a28d1c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d1cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d1b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d1b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d1b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d1b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d1b660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d1b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d1b980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d1bb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d1bca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d1be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d1a020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d1a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d1a440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d1a5d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d1a760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d1a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1a28d059a0" loc="65:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1a28d059a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d05e20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d04020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d041b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d04340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d044d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d04660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d047f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d04980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d04b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d04ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d04e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d03020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d031b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d03440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d035d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d03760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f1a28cef9a0" loc="78:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f1a28cef9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cefd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cee020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cee4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cee660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cee7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cee980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ceeb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ceeca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ceee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ced020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ced1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ced440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ced5d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ced760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ced8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SDA" ref="0x7f1a28c49cd0" loc="501:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SDA" scoped="" ref="0x7f1a28c49cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c48a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c48ba0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c48d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c47020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c471b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c47340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c474d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c47660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c477f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c47980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c47b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c47ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c47e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c46120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c462b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c46440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c465d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVMOUT" ref="0x7f1a28c124f0" loc="543:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVMOUT" scoped="" ref="0x7f1a28c124f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c12870"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c12a00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c12b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c12d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c11020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c111b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c11340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c114d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c11660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c117f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c11980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c11b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c11ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c10020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c101b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c10340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC12" ref="0x7f1a28bf9900" loc="566:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC12" scoped="" ref="0x7f1a28bf9900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28bf9c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28bf9e10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28bf8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28bf81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28bf8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28bf84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28bf8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28bf87f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28bf8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28bf8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28bf8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28bf8e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28bf7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28bf72b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28bf7440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28bf75d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28bf7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0SIMO" ref="0x7f1a28c569c0" loc="494:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0SIMO" scoped="" ref="0x7f1a28c569c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c56d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c55020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c55340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c554d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c55660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c557f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c55980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c55b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c55ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c55e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c54020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c54440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c545d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c54760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port81" ref="0x7f1a28ca0e50" loc="128:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port81" scoped="" ref="0x7f1a28ca0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c9f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c9f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c9f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c9f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c9f850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c9f9e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c9fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c9fd00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c9e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c9e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c9e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c9e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c9e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c9e8f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c9ea80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c9ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c9eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f1a28c1f020" loc="522:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f1a28c1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c1f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c1f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c1f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c1f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c1f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c1fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c1fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c1e020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c1e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c1e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c1e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c1e660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c1e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c1ea80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c1ec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c1eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f1a28cea020" loc="83:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f1a28cea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cea5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cea730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cea8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ceaa50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ceabe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cead70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ce9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ce91b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ce9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ce94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ce9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ce97f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ce9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ce9c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ce9da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ce8020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ce81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f1a28cd3200" loc="96:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f1a28cd3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cd3580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cd3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cd38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cd3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cd3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cd3d50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cd2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cd21b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cd2340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cd24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cd2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cd27f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cd2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cd2c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cd2da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cd1020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SDA" ref="0x7f1a28c2dcd0" loc="515:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SDA" scoped="" ref="0x7f1a28c2dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c2c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c2c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c2c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c2c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c2c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c2c870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c2ca00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c2cb90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c2cd20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c2b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c2b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c2b340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c2b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c2b760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c2b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c2ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c2bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f1a28cc2b30" loc="107:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f1a28cc2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cc1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cc11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cc1340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cc14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cc1660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cc17f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cc1980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cc1b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cc1ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cc1e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cc0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cc01b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cc0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cc05d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cc0760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cc08f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cc0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port74" ref="0x7f1a28cace50" loc="120:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port74" scoped="" ref="0x7f1a28cace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28caa210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28caa3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28caa530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28caa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28caa850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28caa9e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28caab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28caad00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ca9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ca91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ca9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ca94d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ca9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ca98f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ca9a80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ca9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ca9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port86" ref="0x7f1a28c95e50" loc="133:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port86" scoped="" ref="0x7f1a28c95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c94210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c943a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c94530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c946c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c94850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c949e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c94b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c94d00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c93020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c931b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c93340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c934d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c93660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c938f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c93a80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c93c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c93da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA0CCR2" ref="0x7f1a28c838b0" loc="458:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA0CCR2" scoped="" ref="0x7f1a28c838b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c83c30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c83dc0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c82020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c82340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c824d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c82660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c827f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c82980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c82b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c82ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c82e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c81020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c812b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c81440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c815d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c81760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA2CLK" ref="0x7f1a28c6ab30" loc="471:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA2CLK" scoped="" ref="0x7f1a28c6ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c69020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c691b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c69340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c694d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c69660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c697f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c69980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c69b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c69ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c69e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c68020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c681b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c68340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c685d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c68760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c688f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c68a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0TXD" ref="0x7f1a28c5a400" loc="492:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0TXD" scoped="" ref="0x7f1a28c5a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c5a780"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c5a910"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c5aaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c5ac30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c5adc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c59020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c591b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c59340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c594d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c59660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c59980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c59b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c59da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c58020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c581b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0STE" ref="0x7f1a28c5c020" loc="491:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0STE" scoped="" ref="0x7f1a28c5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c5c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c5c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c5c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c5c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c5c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c5cb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c5cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c5b020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c5b1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c5b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c5b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c5b660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c5b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c5ba80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c5bc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c5bda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC15" ref="0x7f1a28bf2200" loc="569:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC15" scoped="" ref="0x7f1a28bf2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28bf2580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28bf2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28bf28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28bf2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28bf2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28bf2d50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28bf1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28bf11b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28bf1340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28bf14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28bf1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28bf17f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28bf1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28bf1c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28bf1da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28bf0020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28bf01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0STE" ref="0x7f1a28c4f400" loc="498:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0STE" scoped="" ref="0x7f1a28c4f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c4f780"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c4f910"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c4faa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c4fc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c4fdc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c4e020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c4e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c4e340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c4e4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c4e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c4e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c4e980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c4eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c4eda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c4d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c4d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c4d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RTCCLK" ref="0x7f1a28c67020" loc="483:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RTCCLK" scoped="" ref="0x7f1a28c67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c67530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c676c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c67850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c67b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c67d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c66020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c661b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c66340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c664d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c66660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c667f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c66a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c66c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c66da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TB0OUTH" ref="0x7f1a28bfd210" loc="558:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TB0OUTH" scoped="" ref="0x7f1a28bfd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28bfd590"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28bfd720"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28bfd8b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28bfda40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28bfdbd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28bfdd60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28bfc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28bfc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28bfc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28bfc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28bfc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28bfc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28bfc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28bfcc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28bfcda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28bfb020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28bfb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0RXD" ref="0x7f1a28c58720" loc="493:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0RXD" scoped="" ref="0x7f1a28c58720"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c58aa0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c58c30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c58dc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c57020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c57340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c574d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c57660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c577f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c57980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c57b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c57ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c57e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c56120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c562b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c56440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c565d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1TXD" ref="0x7f1a28c3e400" loc="506:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1TXD" scoped="" ref="0x7f1a28c3e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c3e780"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c3e910"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c3eaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c3ec30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c3edc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c3d020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c3d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c3d340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c3d4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c3d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c3d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c3d980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c3db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c3dda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c3c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c3c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c3c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1a28d153f0" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1a28d153f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d15770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d15900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d15a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d15c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d15db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d14020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d14340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d144d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d14660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d14980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d14b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d14da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d13020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d131b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d13340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1a28cfe3f0" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1a28cfe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cfe770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cfe900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cfea90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cfec20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cfedb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cfd020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cfd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cfd340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cfd4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cfd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cfd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cfd980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cfdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cfdda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cfc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cfc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cfc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA0SOMI" ref="0x7f1a28c54ce0" loc="495:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA0SOMI" scoped="" ref="0x7f1a28c54ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c530a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c53230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c533c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c53550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c536e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c53870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c53a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c53b90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c53d20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c52020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c52340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c52760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c528f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c52a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c52c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA0CLK" ref="0x7f1a28c7c200" loc="461:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA0CLK" scoped="" ref="0x7f1a28c7c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c7c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c7c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c7c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c7ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c7cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c7cd50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c7b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c7b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c7b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c7b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c7b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c7b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c7b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c7bc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c7bda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c7a020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f1a28cc6580" loc="105:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f1a28cc6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cc6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cc6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cc6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cc6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cc5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cc51b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cc5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cc54d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cc5660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cc57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cc5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cc5b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cc5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cc4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cc41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cc4340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cc44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port72" ref="0x7f1a28cb08a0" loc="118:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port72" scoped="" ref="0x7f1a28cb08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cb0c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cb0db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28caf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28caf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28caf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28caf4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28caf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28caf7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28caf980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cafb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cafca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cafe30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cae020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cae2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cae440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cae5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cae760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f1a28cfa9a0" loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f1a28cfa9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cfad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cf9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cf91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cf9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cf94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cf9660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cf97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cf9980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cf9b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cf9ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cf9e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cf8020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cf81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cf8440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cf85d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cf8760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cf88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f1a28ce4b30" loc="86:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f1a28ce4b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ce3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ce31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ce3340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ce34d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ce3660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ce37f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ce3980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ce3b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ce3ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ce3e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ce2020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ce21b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ce2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ce25d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ce2760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ce28f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ce2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f1a28ccdb30" loc="99:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f1a28ccdb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ccc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ccc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ccc340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ccc4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ccc660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ccc7f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ccc980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cccb10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cccca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ccce30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ccb020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ccb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ccb340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ccb5d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ccb760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ccb8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ccba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port84" ref="0x7f1a28c998a0" loc="131:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port84" scoped="" ref="0x7f1a28c998a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c99c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c99db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c98020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c98340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c984d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c98660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c987f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c98980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c98b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c98ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c98e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c97020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c972b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c97440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c975d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c97760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f1a28cbb580" loc="110:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f1a28cbb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cbb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cbba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cbbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cbbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cba020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cba1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cba340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cba4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cba660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cba7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cba980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cbab10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cbaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cb9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cb91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cb9340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cb94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port77" ref="0x7f1a28ca48a0" loc="123:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port77" scoped="" ref="0x7f1a28ca48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ca4c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ca4db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ca3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ca31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ca3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ca34d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ca3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ca37f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ca3980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ca3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ca3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ca3e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ca2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ca22b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ca2440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ca25d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ca2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA1CCR0" ref="0x7f1a28c7a590" loc="463:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA1CCR0" scoped="" ref="0x7f1a28c7a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c7a910"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c7aaa0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c7ac30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c7adc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c79020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c791b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c79340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c794d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c79660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c797f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c79980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c79b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c79ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c78020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c781b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c78340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SMCLK" ref="0x7f1a28c65410" loc="485:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SMCLK" scoped="" ref="0x7f1a28c65410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c65790"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c65920"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c65ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c65c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c65dd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c64020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c64340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c644d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c64660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c647f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c64980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c64b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c64da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c63020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c631b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c63340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f1a28c8cb30" loc="172:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PortJ2" scoped="" ref="0x7f1a28c8cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c8b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c8b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c8b340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c8b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c8b660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c8b7f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c8b980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c8bb10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c8bca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c8be30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c8a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c8a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c8a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c8a5d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c8a760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c8a8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c8aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1a28d1e410" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1a28d1e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d1e790"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d1e920"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d1eab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d1ec40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d1edd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d2a020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d2a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d2a340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d2a4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d2a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d2a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d2a980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d2ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d2ada0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d29020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d291b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d29340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1a28d093f0" loc="63:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1a28d093f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d09770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d09900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d09a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d09c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d09db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d08020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d08340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d084d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d08660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d087f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d08980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d08b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d08da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d07020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d071b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d07340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f1a28cf33f0" loc="76:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f1a28cf33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cf3770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cf3900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cf3a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cf3c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cf3db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cf2020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cf21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cf2340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cf24d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cf2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cf27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cf2980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cf2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cf2da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cf1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cf11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cf1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f1a28cdc580" loc="89:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f1a28cdc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cdc900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cdca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cdcc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cdcdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cdb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cdb1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cdb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cdb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cdb660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cdb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cdb980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cdbb10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cdbca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cda020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cda1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cda340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cda4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0CLK" ref="0x7f1a28c51020" loc="497:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0CLK" scoped="" ref="0x7f1a28c51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c51530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c516c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c51850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c51b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c51d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c50020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c501b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c50340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c504d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c50660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c507f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c50a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c50c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c50da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f1a28c26700" loc="519:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f1a28c26700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c26a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c26c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c26da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c25020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c251b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c25340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c25660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c257f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c25980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c25b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c25ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c25e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c24120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c242b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c24440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c245d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f1a28c19990" loc="525:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f1a28c19990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c19d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c18020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c181b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c18340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c184d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c18660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c187f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c18980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c18b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c18ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c18e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c17020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c17440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c175d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c17760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TB0CCR2" ref="0x7f1a28c0be60" loc="552:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TB0CCR2" scoped="" ref="0x7f1a28c0be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c0a210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c0a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c0a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c0a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c0a850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c0a9e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c0ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c0ad00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c09020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c09340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c094d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c09660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c098f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c09a80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c09c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c09da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f1a28cd8b30" loc="94:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f1a28cd8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cd7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cd71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cd7340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cd74d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cd7660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cd77f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cd7980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cd7b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cd7ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cd7e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cd6020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cd61b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cd6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cd65d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cd6760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cd68f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cd6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA2CCR2" ref="0x7f1a28c6c8b0" loc="470:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA2CCR2" scoped="" ref="0x7f1a28c6c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c6cc30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c6cdc0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c6b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c6b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c6b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c6b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c6b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c6b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c6b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c6bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c6bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c6be30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c6a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c6a2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c6a440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c6a5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c6a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1CLK" ref="0x7f1a28c35020" loc="511:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1CLK" scoped="" ref="0x7f1a28c35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c35530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c356c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c35850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c35b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c35d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c34020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c341b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c34340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c344d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c34660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c347f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c34a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c34c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c34da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA0CCR0" ref="0x7f1a28c87270" loc="456:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA0CCR0" scoped="" ref="0x7f1a28c87270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c875f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c87780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c87910"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c87aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c87c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c87dc0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c86020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c861b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c86340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c864d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c86660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c867f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c86980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c86c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c86da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c85020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA1CLK" ref="0x7f1a28c73e50" loc="466:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA1CLK" scoped="" ref="0x7f1a28c73e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c72210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c723a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c72530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c726c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c72850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c729e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c72b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c72d00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c71020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c711b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c71340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c714d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c71660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c718f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c71a80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c71c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c71da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TB0CCR5" ref="0x7f1a28c048b0" loc="555:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TB0CCR5" scoped="" ref="0x7f1a28c048b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c04c30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c04dc0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c03020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c03340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c034d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c03660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c037f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c03980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c03b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c03ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c03e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c02020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c022b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c02440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c025d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c02760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TB0CLK" ref="0x7f1a28c00e50" loc="557:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TB0CLK" scoped="" ref="0x7f1a28c00e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28bff210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28bff3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28bff530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28bff6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28bff850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28bff9e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28bffb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28bffd00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28bfe020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28bfe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28bfe340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28bfe4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28bfe660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28bfe8f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28bfea80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28bfec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28bfeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1STE" ref="0x7f1a28c40020" loc="505:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1STE" scoped="" ref="0x7f1a28c40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c403a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c40530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c406c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c40850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c409e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c40b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c40d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c3f020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c3f1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c3f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c3f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c3f660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c3f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c3fa80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c3fc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c3fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1a28d1acc0" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1a28d1acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d190a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d19230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d193c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d19550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d196e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d19870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d19a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d19b90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d19d20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d18020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d18340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d18760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d188f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d18a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d18c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1a28d03cc0" loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1a28d03cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d020a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d02230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d023c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d02550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d026e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d02870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d02a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d02b90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d02d20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d01020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d011b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d01340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d014d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d01760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d018f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d01a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d01c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f1a28cedcc0" loc="79:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f1a28cedcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cec230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cec3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cec550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cec6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cec870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ceca00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cecb90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cecd20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ceb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ceb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ceb340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ceb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ceb760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ceb8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ceba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cebc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1SOMI" ref="0x7f1a28c38ce0" loc="509:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1SOMI" scoped="" ref="0x7f1a28c38ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c370a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c37230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c373c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c37550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c376e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c37870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c37a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c37b90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c37d20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c36020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c36340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c36760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c368f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c36a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c36c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC13" ref="0x7f1a28bf7b30" loc="567:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC13" scoped="" ref="0x7f1a28bf7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28bf6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28bf61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28bf6340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28bf64d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28bf6660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28bf67f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28bf6980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28bf6b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28bf6ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28bf6e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28bf5020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28bf51b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28bf5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28bf55d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28bf5760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28bf58f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28bf5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SIMO" ref="0x7f1a28c4d730" loc="499:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SIMO" scoped="" ref="0x7f1a28c4d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c4dab0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c4dc40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c4ddd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c4c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c4c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c4c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c4c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c4c660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c4c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c4c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c4cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c4cca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c4ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c4b120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c4b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c4b440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c4b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1CLK" ref="0x7f1a28c44cd0" loc="504:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1CLK" scoped="" ref="0x7f1a28c44cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c420a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c42230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c423c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c42550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c426e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c42870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c42a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c42b90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c42d20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c41020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c41340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c41760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c418f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c41a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c41c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f1a28c1d3e0" loc="523:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f1a28c1d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c1d760"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c1d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c1da80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c1dc10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c1dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c1c020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c1c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c1c340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c1c4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c1c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c1c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c1c980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c1cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c1cda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c1b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c1b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c1b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port70" ref="0x7f1a28cb5e50" loc="116:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port70" scoped="" ref="0x7f1a28cb5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cb4610"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cb47a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cb4930"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cb4ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cb4c50"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cb4de0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cb3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cb31b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cb3340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cb34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cb3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cb37f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cb3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cb3c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cb3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cb2020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cb21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port82" ref="0x7f1a28c9d200" loc="129:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port82" scoped="" ref="0x7f1a28c9d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c9d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c9d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c9d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c9da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c9dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c9dd50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c9c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c9c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c9c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c9c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c9c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c9c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c9c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c9cc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c9cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c9b020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f1a28ce8580" loc="84:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f1a28ce8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ce8900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ce8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ce8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ce8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ce7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ce71b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ce7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ce74d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ce7660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ce77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ce7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ce7b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ce7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ce6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ce61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ce6340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ce64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f1a28cd1580" loc="97:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f1a28cd1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cd1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cd1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cd1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cd1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cd0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cd01b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cd0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cd04d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cd0660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cd07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cd0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cd0b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cd0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ccf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ccf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ccf340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ccf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TB0CCR0" ref="0x7f1a28c108d0" loc="550:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TB0CCR0" scoped="" ref="0x7f1a28c108d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c10c50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c10de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c0e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c0e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c0e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c0e4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c0e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c0e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c0e980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c0eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c0eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c0ee30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c0d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c0d2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c0d440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c0d5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c0d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f1a28cc0e50" loc="108:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f1a28cc0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cbf210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cbf3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cbf530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cbf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cbf850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cbf9e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cbfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cbfd00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cbe020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cbe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cbe340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cbe4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cbe660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cbe8f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cbea80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cbec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cbeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port75" ref="0x7f1a28ca8200" loc="121:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port75" scoped="" ref="0x7f1a28ca8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ca8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ca8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ca88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ca8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ca8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ca8d50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ca7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ca71b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ca7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ca74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ca7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ca77f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ca7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ca7c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ca7da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ca6020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ca61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port87" ref="0x7f1a28c92200" loc="134:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port87" scoped="" ref="0x7f1a28c92200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c92580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c92710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c928a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c92a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c92bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c92d50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c91020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c911b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c91340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c914d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c91660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c917f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c91980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c91c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c91da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c90020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA0CCR3" ref="0x7f1a28c81b40" loc="459:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA0CCR3" scoped="" ref="0x7f1a28c81b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c80020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c801b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c80340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c804d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c80660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c807f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c80980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c80b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c80ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c80e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c7f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c7f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c7f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c7f5d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c7f760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c7f8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c7fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1a28d13710" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1a28d13710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d13a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d13c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d13db0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d11020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d111b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d11340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d11660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d117f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d11980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d11b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d11ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d11e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d10120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d102b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d10440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d105d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA2CCR0" ref="0x7f1a28c70210" loc="468:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA2CCR0" scoped="" ref="0x7f1a28c70210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c70590"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c70720"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c708b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c70a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c70bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c70d60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c6f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c6f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c6f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c6f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c6f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c6f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c6f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c6fc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c6fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c6e020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAE0" ref="0x7f1a28c619c0" loc="488:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAE0" scoped="" ref="0x7f1a28c619c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c61d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c60020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c601b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c60340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c604d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c60660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c607f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c60980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c60b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c60ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c60e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c5f020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c5f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c5f440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c5f5d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c5f760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c5f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f1a28cc48a0" loc="106:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f1a28cc48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cc4c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cc4db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cc3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cc31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cc3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cc34d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cc3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cc37f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cc3980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cc3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cc3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cc3e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cc2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cc22b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cc2440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cc25d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cc2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port73" ref="0x7f1a28caeb30" loc="119:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port73" scoped="" ref="0x7f1a28caeb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cad020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cad1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cad340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cad4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cad660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cad7f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cad980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cadb10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cadca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cade30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cac020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cac1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cac340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cac5d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cac760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cac8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28caca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1a28d0ecc0" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1a28d0ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d0d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d0d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d0d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d0d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d0d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d0d870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d0da00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d0db90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d0dd20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d0c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d0c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d0c340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d0c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d0c760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d0c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d0ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d0cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f1a28cf8cc0" loc="74:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f1a28cf8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cf70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cf7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cf73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cf7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cf76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cf7870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cf7a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cf7b90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cf7d20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cf6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cf61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cf6340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cf64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cf6760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cf68f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cf6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cf6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f1a28ce2e50" loc="87:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f1a28ce2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ce1210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ce13a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ce1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ce16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ce1850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ce19e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ce1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ce1d00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ce0020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ce01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ce0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ce04d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ce0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ce08f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ce0a80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ce0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ce0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f1a28ccbe50" loc="100:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f1a28ccbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cca210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cca3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cca530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cca6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cca850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cca9e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ccab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ccad00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cc9020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cc91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cc9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cc94d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cc9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cc98f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cc9a80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cc9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cc9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f1a28cb98a0" loc="111:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f1a28cb98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cb9c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cb9db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cb8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cb81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cb8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cb84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cb8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cb87f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cb8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cb8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cb8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cb8e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cb7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cb72b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cb7440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cb75d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cb7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port85" ref="0x7f1a28c97b30" loc="132:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port85" scoped="" ref="0x7f1a28c97b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c96020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c961b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c96340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c964d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c96660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c967f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c96980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c96b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c96ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c96e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c95020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c951b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c95340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c955d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c95760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c958f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c95a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f1a28c90580" loc="170:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PortJ0" scoped="" ref="0x7f1a28c90580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c90900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c90a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c90c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c90db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c8f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c8f1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c8f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c8f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c8f660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c8f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c8f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c8fb10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c8fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c8e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c8e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c8e340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA1CCR1" ref="0x7f1a28c788b0" loc="464:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA1CCR1" scoped="" ref="0x7f1a28c788b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c78c30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c78dc0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c76020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c761b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c76340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c764d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c76660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c767f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c76980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c76b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c76ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c76e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c75020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c752b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c75440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c755d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c75760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f1a28c8ae50" loc="173:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PortJ3" scoped="" ref="0x7f1a28c8ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c89210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c893a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c89530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c896c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c89850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c899e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c89b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c89d00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c88020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c881b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c88340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c884d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c88660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c888f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c88a80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c88c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c88da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1a28d29710" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1a28d29710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d29a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d29c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d29db0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d1d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d1d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d1d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d1d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d1d660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d1d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d1d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d1db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d1dca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d1de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d1c120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d1c2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d1c440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d1c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1a28d07710" loc="64:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1a28d07710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d07a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d07c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28d07db0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d06020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d061b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28d06340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28d064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d06660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d067f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28d06980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28d06b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28d06ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d06e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28d05120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28d052b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28d05440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d055d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f1a28cf1710" loc="77:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f1a28cf1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cf1a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cf1c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cf1db0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cf0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cf01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cf0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cf04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cf0660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cf07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cf0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cf0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cf0ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cf0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cef120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cef2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cef440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cef5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f1a28cda8a0" loc="90:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f1a28cda8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cdac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cdadb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cd9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cd91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cd9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cd94d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cd9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cd97f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cd9980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cd9b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cd9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cd9e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cd8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cd82b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cd8440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cd85d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cd8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCA1RXD" ref="0x7f1a28c3c720" loc="507:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCA1RXD" scoped="" ref="0x7f1a28c3c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c3caa0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c3cc30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c3cdc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c3b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c3b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c3b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c3b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c3b660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c3b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c3b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c3bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c3bca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c3be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c3a120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c3a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c3a440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c3a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SOMI" ref="0x7f1a28c2f9c0" loc="514:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SOMI" scoped="" ref="0x7f1a28c2f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c2fd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c2e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c2e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c2e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c2e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c2e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c2e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c2e980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c2eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c2eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c2ee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c2d020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c2d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c2d440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c2d5d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c2d760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c2d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SCL" ref="0x7f1a28c2a020" loc="516:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SCL" scoped="" ref="0x7f1a28c2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c2a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c2a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c2a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c2a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c2a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c2ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c2ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c29020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c291b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c29340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c294d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c29660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c297f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c29a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c29c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c29da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f1a28c24990" loc="520:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f1a28c24990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c24d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c23020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c23340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c234d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c23660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c237f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c23980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c23b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c23ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c23e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c22020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c221b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c22440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c225d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c22760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC8" ref="0x7f1a28c17cf0" loc="530:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC8" scoped="" ref="0x7f1a28c17cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c160a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c16230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c163c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c16550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c166e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c16870"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c16a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c16b90"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c16d20"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c15020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c15340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c15760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c158f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c15a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c15c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TB0CCR3" ref="0x7f1a28c08210" loc="553:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TB0CCR3" scoped="" ref="0x7f1a28c08210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c08590"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c08720"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c088b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c08a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c08bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c08d60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c07020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c071b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c07340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c07660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c077f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c07980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c07c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c07da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c06020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port80" ref="0x7f1a28ca2b30" loc="127:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port80" scoped="" ref="0x7f1a28ca2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ca1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ca11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ca1340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ca14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ca1660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ca17f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ca1980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ca1b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ca1ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ca1e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ca0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ca01b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ca0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ca05d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ca0760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ca08f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ca0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f1a28cd6e50" loc="95:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f1a28cd6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28cd5210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28cd53a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28cd5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28cd56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28cd5850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28cd59e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28cd5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28cd5d00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28cd4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28cd41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28cd4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28cd44d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28cd4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28cd48f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28cd4a80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28cd4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28cd4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC14" ref="0x7f1a28bf5e50" loc="568:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC14" scoped="" ref="0x7f1a28bf5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28bf4210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28bf43a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28bf4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28bf46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28bf4850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28bf49e0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28bf4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28bf4d00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28bf3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28bf31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28bf3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28bf34d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28bf3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28bf38f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28bf3a80"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28bf3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28bf3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TA0CCR1" ref="0x7f1a28c85590" loc="457:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TA0CCR1" scoped="" ref="0x7f1a28c85590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c85910"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c85aa0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c85c30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c85dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c84020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c841b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c84340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c844d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c84660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c847f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c84980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c84b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c84ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c83020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c831b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c83340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SOMI" ref="0x7f1a28c4b9c0" loc="500:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SOMI" scoped="" ref="0x7f1a28c4b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c4bd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c4a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c4a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c4a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c4a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c4a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c4a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c4a980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c4ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c4aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c4ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c49020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c49440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c495d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c49760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB1SIMO" ref="0x7f1a28c31730" loc="513:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB1SIMO" scoped="" ref="0x7f1a28c31730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c31ab0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c31c40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c31dd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c30020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c301b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c30340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c30660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c307f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c30980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c30b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c30ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c30e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c2f120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c2f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c2f440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c2f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCB0SCL" ref="0x7f1a28c469b0" loc="502:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCB0SCL" scoped="" ref="0x7f1a28c469b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28c46d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28c45020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28c451b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28c45340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28c454d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28c45660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28c457f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28c45980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28c45b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28c45ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28c45e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28c44020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28c441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28c44440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28c445d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28c44760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28c448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a2883c410" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="HplMsp430UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a2883c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a2883c790"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a2883c920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1a28839300" loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="HplMsp430UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a28839300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28839680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a28838020" loc="74:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="HplMsp430UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28838020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a288383a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28838530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a2883e4e0" loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="HplMsp430UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a2883e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a2883e860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a2883cc40" loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="HplMsp430UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a2883cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a2883b020"/>
        <function-ref name="requested" scoped="" ref="0x7f1a2883b1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a2883b340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a2883b4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a2883b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a2883d1d0" loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="HplMsp430UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a2883d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a2883d550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a2883d6e0"/>
        <function-ref name="request" scoped="" ref="0x7f1a2883d870"/>
        <function-ref name="granted" scoped="" ref="0x7f1a2883da00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a2883db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usci" ref="0x7f1a28847e20" loc="65:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="HplMsp430UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a28847e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a288461c0"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a28846350"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a288464e0"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a28846670"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a28846800"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a28846990"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a28846b20"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a28846cb0"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a28846e40"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a28845020"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a288451b0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a28845340"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a288454d0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a28845760"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a288458f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a28845a80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a28845c10"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a28845da0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a28844020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a288441b0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a28844340"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a288444d0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a28844660"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a288447f0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a28844980"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a28844d10"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a28843020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a288431b0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a28843340"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a288434d0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a28843660"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a288437f0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a28843980"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a28843b10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a28843ca0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a28843e30"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a28842020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a288421b0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a28842340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a288424d0"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a28842660"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a288427f0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a28842980"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a28842b10"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a28842ca0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28842e30"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a28841020"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a288411b0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a28841340"/>
        <function-ref name="configure" scoped="" ref="0x7f1a288418d0"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a28841a60"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a28841bf0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a28841d80"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a28840020"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a288401b0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a28840340"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a288404d0"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a28840660"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a288407f0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a28840980"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a28840b10"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a28840ca0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28840e30"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a2883f020"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a2883f1b0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a2883f340"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a2883f4d0"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a2883f660"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a2883f7f0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a2883f980"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a2883fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a2883b920" loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="HplMsp430UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a2883b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a2883bca0"/>
        <function-ref name="userId" scoped="" ref="0x7f1a2883be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1a2793c020" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a2793c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2793ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2793b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2793b340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2793bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1a279cbc20" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1a279cbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b0270"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1a290b05e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1a279c8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1a285bbcf0" loc="71:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a285bbcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a285ba0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a285ba230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a285ba3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a285ba550"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285ba6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1a285bf670" loc="69:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a285bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a285bf9f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a285bfb80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285bfd10"/>
        <function-ref name="get" scoped="" ref="0x7f1a285be020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285be1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285be340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a285be4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285be660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a285be7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a285be980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a285beb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1a285bc3f0" loc="70:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a285bc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a285bc770"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a285bc900"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285bca90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a285bcc20"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a285bcdb0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a285bb020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a285bb1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a285bb340"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a285bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f1a27b147e0" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioCCA" scoped="" ref="0x7f1a27b147e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f1a27b14b60"/>
        <function-ref name="request" scoped="" ref="0x7f1a27b14cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f1a27aff910" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1a27aff910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b0270"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1a290b05e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1a27b03890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f1a27b0f610" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a27b0f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b0ee70"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b0e920"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a27b0e3d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b0c3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f1a27af5830" loc="65:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSIFlag" scoped="" ref="0x7f1a27af5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27af5bb0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27af5d40"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27af1020"/>
        <function-ref name="set" scoped="" ref="0x7f1a27af11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f1a27b16020" loc="34:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a27b16020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f1a293dbb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f1a293dbb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27b163a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1a27af05f0" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1a27af05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27aefb60"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27aee2e0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27aef430"/>
        <function-ref name="set" scoped="" ref="0x7f1a27aeea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiBlock" ref="0x7f1a27afc4c0" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a27afc4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a27afc840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f1a27aecd70" loc="71:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a27aecd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a27aeb180"/>
        <function-ref name="wait" scoped="" ref="0x7f1a27aeb310"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27aeb4a0"/>
        <function-ref name="isFree" scoped="" ref="0x7f1a27aeb630"/>
        <function-ref name="getNow" scoped="" ref="0x7f1a27aeb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f1a27b16660" loc="36:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioState" scoped="" ref="0x7f1a27b16660"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27b169e0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27b16b70"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27b16d00"/>
        <function-ref name="done" scoped="" ref="0x7f1a27b15020"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27b151b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27b15340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f1a27afe020" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1a27afe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27afec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f1a27b12120" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a27b12120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b11830"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b112e0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a27b12d50"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b11d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27b13020" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b133a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b13530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b136c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b13850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b139e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b13b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f1a27afde60" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a27afde60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a27afc210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27afd200" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27afd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1101DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27afd580"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27afd710"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27afd8a0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f1a27afda30"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f1a27afdbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27b14020" loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27b14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27b143a0"/>
        <function-ref name="header" scoped="" ref="0x7f1a27b14530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1a27afcb50" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1a27afcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a27afb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27afb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a27afb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27afb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27afb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a27afb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27afb980"/>
        <function-ref name="clr" scoped="" ref="0x7f1a27afbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Gdo0Capture" ref="0x7f1a27af6020" loc="62:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gdo0Capture" scoped="" ref="0x7f1a27af6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1a27af63a0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27af6530"/>
        <function-ref name="captured" scoped="" ref="0x7f1a27af66c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1a27af6850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f1a27a18b60" loc="1417:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="releaseSpi" scoped="" ref="0x7f1a27a18b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a27a17020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a27a171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1a27b0cca0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1a27b0cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b0a3d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b0be50"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a27b0b900"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b0a920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GDO2" ref="0x7f1a27af9020" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GDO2" scoped="" ref="0x7f1a27af9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a27af93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27af9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a27af96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27af9850"/>
        <function-ref name="get" scoped="" ref="0x7f1a27af99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a27af9b70"/>
        <function-ref name="set" scoped="" ref="0x7f1a27af9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a27af8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RADIO_EN" ref="0x7f1a27af8370" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RADIO_EN" scoped="" ref="0x7f1a27af8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a27af86f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27af8880"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a27af8a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27af8ba0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27af8d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a27af7020"/>
        <function-ref name="set" scoped="" ref="0x7f1a27af71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a27af7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1a27b05c90" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1a27b05c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a27b040a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a27b04230"/>
        <function-ref name="request" scoped="" ref="0x7f1a27b043c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a27b04550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a27b046e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1a27aeba60" loc="82:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a27aeba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a27aebde0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a27aea020"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a27aea1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a27aea340"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a27aea4d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a27aea660"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a27aea7f0"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a27aea980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a27aeab10"/>
        <function-ref name="get" scoped="" ref="0x7f1a27aeaca0"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a27aeae30"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a27ae9020"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a27ae91b0"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a27ae9440"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a27ae95d0"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a27ae9760"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a27ae98f0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a27ae9a80"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a27ae9c10"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a27ae9da0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a27ae8020"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a27ae81b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a27ae8340"/>
        <function-ref name="set" scoped="" ref="0x7f1a27ae84d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a27ae8660"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a27ae89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f1a27b08200" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a27b08200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b07910"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b073c0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a27b08e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b07e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1a27b155f0" loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27b155f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27b15970"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27b15b00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27b15c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GDO0" ref="0x7f1a27afbe30" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GDO0" scoped="" ref="0x7f1a27afbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a27afa1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27afa370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a27afa500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27afa690"/>
        <function-ref name="get" scoped="" ref="0x7f1a27afa820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a27afa9b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27afab40"/>
        <function-ref name="clr" scoped="" ref="0x7f1a27afacd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f1a27af1530" loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f1a27af1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27af1ab0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27af1c40"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27af1dd0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27af0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f1a27af6c00" loc="64:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f1a27af6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27af5020"/>
        <function-ref name="get" scoped="" ref="0x7f1a27af51b0"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27af5340"/>
        <function-ref name="set" scoped="" ref="0x7f1a27af54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1a27b05510" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a27b05510"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1a27b05890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f1a27aec280" loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tasklet" scoped="" ref="0x7f1a27aec280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f1a27aec600"/>
        <function-ref name="suspend" scoped="" ref="0x7f1a27aec790"/>
        <function-ref name="resume" scoped="" ref="0x7f1a27aec920"/>
        <function-ref name="run" scoped="" ref="0x7f1a27aecab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a179a0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
      <component-ref qname="HplMsp430GeneralIORenDsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a179a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a17d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a16020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a161b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a16340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a164d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a16660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a167f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a16980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a16b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a16ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a16e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a15020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a151b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a15440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a155d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a15760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a158f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f1a27de4870" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1a27de4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27de4bf0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f1a27de4d80"/>
        <function-ref name="get" scoped="" ref="0x7f1a27db5020"/>
        <function-ref name="set" scoped="" ref="0x7f1a27db51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27e0ba00" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27e0ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27e0bd80"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27e0a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27e0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27e0a530" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27e0a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27e0a8b0"/>
        <function-ref name="header" scoped="" ref="0x7f1a27e0aa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f1a27dfd0d0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1a27dfd0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27dfd450"/>
        <function-ref name="clearAll" scoped="" ref="0x7f1a27dfd5e0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27dfd770"/>
        <function-ref name="set" scoped="" ref="0x7f1a27dfd900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27e0c020" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27e0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27e0c3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27e0c530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27e0c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f1a27e026c0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Neighborhood" scoped="" ref="0x7f1a27e026c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f1a27e02a40"/>
        <function-ref name="insertNode" scoped="" ref="0x7f1a27e02bd0"/>
        <function-ref name="getNode" scoped="" ref="0x7f1a27e02d60"/>
        <function-ref name="evicted" scoped="" ref="0x7f1a27e08020"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1a27e081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27e0c990" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27e0c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27e0cd10"/>
        <function-ref name="header" scoped="" ref="0x7f1a27e0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a27e0b2a0" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a27e0b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27e0b620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f1a27e0ad10" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UniqueConfig" scoped="" ref="0x7f1a27e0ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f1a27e090e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1a27e09270"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f1a27e09400"/>
        <function-ref name="getSender" scoped="" ref="0x7f1a27e09590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f1a27ddd030" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1a27ddd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27ddd3b0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f1a27ddd540"/>
        <function-ref name="get" scoped="" ref="0x7f1a27ddd6d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27ddd860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f1a27de2d60" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Neighborhood" scoped="" ref="0x7f1a27de2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f1a27ddf180"/>
        <function-ref name="insertNode" scoped="" ref="0x7f1a27ddf310"/>
        <function-ref name="getNode" scoped="" ref="0x7f1a27ddf4a0"/>
        <function-ref name="evicted" scoped="" ref="0x7f1a27ddf630"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1a27ddf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a27de2710" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a27de2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27de2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a281761d0" loc="8:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
      <component-ref qname="Msp430UsciB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a281761d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a28176550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a281766e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a281722c0" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
      <component-ref qname="Msp430UsciB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a281722c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a28172640"/>
        <function-ref name="configure" scoped="" ref="0x7f1a281727d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a28173620" loc="11:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
      <component-ref qname="Msp430UsciB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a28173620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a281739a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USCI" ref="0x7f1a281826c0" loc="6:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
      <component-ref qname="Msp430UsciB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="USCI" scoped="" ref="0x7f1a281826c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a28182a40"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a28182bd0"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a28182d60"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a2817f020"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a2817f1b0"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a2817f340"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a2817f4d0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a2817f660"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a2817f7f0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a2817f980"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a2817fb10"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a2817fca0"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a2817fe30"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a2817e120"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a2817e2b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a2817e440"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a2817e5d0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a2817e760"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a2817e8f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a2817ea80"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a2817ec10"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a2817eda0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a2817d020"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a2817d1b0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a2817d340"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a2817d6d0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a2817d860"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a2817d9f0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a2817db80"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a2817dd10"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a2817c020"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a2817c1b0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a2817c340"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a2817c4d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a2817c660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a2817c7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a2817c980"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a2817cb10"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a2817cca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a2817ce30"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a2817b020"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a2817b1b0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a2817b340"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a2817b4d0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a2817b660"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a2817b7f0"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a2817b980"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a2817bb10"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a2817bca0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2817a420"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a2817a5b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a2817a740"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a2817a8d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a2817aa60"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a2817abf0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a2817ad80"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a28179020"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a281791b0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a28179340"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a281794d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a28179660"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a281797f0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28179980"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a28179b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a28179ca0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a28179e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a28178020"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a281781b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a28178340"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a281784d0"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a28178660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a28176a00" loc="9:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
      <component-ref qname="Msp430UsciB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28176a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28176d80"/>
        <function-ref name="requested" scoped="" ref="0x7f1a28174020"/>
        <function-ref name="granted" scoped="" ref="0x7f1a281741b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28174340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a281744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a28178e70" loc="7:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
      <component-ref qname="Msp430UsciB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a28178e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28177220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a281773b0"/>
        <function-ref name="request" scoped="" ref="0x7f1a28177540"/>
        <function-ref name="granted" scoped="" ref="0x7f1a281776d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28177860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a28174790" loc="10:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB0P.nc">
      <component-ref qname="Msp430UsciB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28174790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28174b10"/>
        <function-ref name="userId" scoped="" ref="0x7f1a28174ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciConfigure" ref="0x7f1a2797e020" loc="2:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiP.nc">
      <component-ref qname="HplRadioSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2797e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a2797e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DiagMsg" ref="0x7f1a27c26020" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsgC.nc">
      <component-ref qname="DiagMsgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DiagMsg" scoped="" ref="0x7f1a27c26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DiagMsg"/>
      </instance>
      <interface-functions>
        <function-ref name="int32s" scoped="" ref="0x7f1a27c263a0"/>
        <function-ref name="str" scoped="" ref="0x7f1a27c26530"/>
        <function-ref name="send" scoped="" ref="0x7f1a27c266c0"/>
        <function-ref name="int16" scoped="" ref="0x7f1a27c26850"/>
        <function-ref name="hex32" scoped="" ref="0x7f1a27c269e0"/>
        <function-ref name="int32" scoped="" ref="0x7f1a27c26b70"/>
        <function-ref name="chr" scoped="" ref="0x7f1a27c26d00"/>
        <function-ref name="uint32s" scoped="" ref="0x7f1a27c25020"/>
        <function-ref name="real" scoped="" ref="0x7f1a27c251b0"/>
        <function-ref name="hex8" scoped="" ref="0x7f1a27c25340"/>
        <function-ref name="uint16" scoped="" ref="0x7f1a27c254d0"/>
        <function-ref name="uint64s" scoped="" ref="0x7f1a27c25660"/>
        <function-ref name="uint32" scoped="" ref="0x7f1a27c257f0"/>
        <function-ref name="uint8" scoped="" ref="0x7f1a27c25a80"/>
        <function-ref name="hex8s" scoped="" ref="0x7f1a27c25c10"/>
        <function-ref name="record" scoped="" ref="0x7f1a27c25da0"/>
        <function-ref name="uint8s" scoped="" ref="0x7f1a27c24020"/>
        <function-ref name="reals" scoped="" ref="0x7f1a27c241b0"/>
        <function-ref name="int64" scoped="" ref="0x7f1a27c24340"/>
        <function-ref name="uint16s" scoped="" ref="0x7f1a27c244d0"/>
        <function-ref name="int64s" scoped="" ref="0x7f1a27c24660"/>
        <function-ref name="hex16" scoped="" ref="0x7f1a27c247f0"/>
        <function-ref name="uint64" scoped="" ref="0x7f1a27c24980"/>
        <function-ref name="int16s" scoped="" ref="0x7f1a27c24b10"/>
        <function-ref name="int8" scoped="" ref="0x7f1a27c24ca0"/>
        <function-ref name="hex16s" scoped="" ref="0x7f1a27c23220"/>
        <function-ref name="hex32s" scoped="" ref="0x7f1a27c233b0"/>
        <function-ref name="chrs" scoped="" ref="0x7f1a27c23540"/>
        <function-ref name="int8s" scoped="" ref="0x7f1a27c236d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f1a281f5020" loc="81:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f1a281f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a281f54a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a281f5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a2820e6d0" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2820e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a2820ea50"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2820ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBlock" ref="0x7f1a28210bd0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a28210bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a2820f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1a28210410" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1a28210410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28210790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28210920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupts" ref="0x7f1a28202410" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a28202410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28202790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1a2820f2c0" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a2820f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a2820f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a281fb890" loc="63:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a281fb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a281fbc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1a28200e00" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1a28200e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a281ff1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a281ff350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a281ff4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a281ff670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a281ff800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a281ff990"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a281ffb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a281ffcb0"/>
        <function-ref name="get" scoped="" ref="0x7f1a281ffe40"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a281fe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a281fe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a281fe340"/>
        <function-ref name="set" scoped="" ref="0x7f1a281fe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a281fe760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a281fe8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a281fea80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a281fec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLK" ref="0x7f1a281fd020" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLK" scoped="" ref="0x7f1a281fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a281fd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a281fd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a281fd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a281fd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a281fd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a281fdb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a281fdd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a281fc020"/>
        <function-ref name="get" scoped="" ref="0x7f1a281fc1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a281fc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a281fc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a281fc660"/>
        <function-ref name="set" scoped="" ref="0x7f1a281fc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a281fca80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a281fcc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a281fcda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a281fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1a28202b10" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1a28202b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28201020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a282011b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28201340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a282014d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28201660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a282017f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28201980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28201b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28201ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28201e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28200020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a282001b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28200340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a282005d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28200760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a282008f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28200a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1a281fa020" loc="64:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a281fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a281fa3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1a281fa530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a2820f930" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2820f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a2820fcb0"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a2820fe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a2820c020" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a2820c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a2820c3a0"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a2820c530"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a2820c6c0"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a2820c850"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a2820c9e0"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a2820cb70"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a2820cd00"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a2820b020"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a2820b1b0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a2820b340"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a2820b4d0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a2820b660"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a2820b7f0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a2820ba80"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a2820bc10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a2820bda0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a2820a020"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a2820a1b0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a2820a340"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a2820a4d0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a2820a660"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a2820a7f0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a2820a980"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a2820ab10"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a2820aca0"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a28209220"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a282093b0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a28209540"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a282096d0"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a28209860"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a282099f0"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a28209b80"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a28209d10"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a28208020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a282081b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a28208340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a282084d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a28208660"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a282087f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a28208980"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a28208b10"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a28208ca0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a28208e30"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a28205020"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a282051b0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28205340"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a282054d0"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a28205660"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a282057f0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28205d80"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a28204020"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a282041b0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a28204340"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a282044d0"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a28204660"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a282047f0"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a28204980"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a28204b10"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a28204ca0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a28204e30"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a28203020"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a282031b0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28203340"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a282034d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a28203660"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a282037f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a28203980"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a28203b10"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a28203ca0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a28203e30"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a28202020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a28fd2920" loc="31:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a28fd2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a28fd2ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a28fd2e30"/>
        <function-ref name="start" scoped="" ref="0x7f1a28fcf020"/>
        <function-ref name="stop" scoped="" ref="0x7f1a28fcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f1a28fa3020" loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a28fa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28fa2740"/>
        <function-ref name="get" scoped="" ref="0x7f1a28fa21f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a28fa3c50"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fa2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f1a28fc5020" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f1a28fc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a28fc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f1a28fbd2c0" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendResource" scoped="" ref="0x7f1a28fbd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28fbd740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a28fbd8d0"/>
        <function-ref name="request" scoped="" ref="0x7f1a28fbda60"/>
        <function-ref name="granted" scoped="" ref="0x7f1a28fbdbf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28fbdd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1a28fcb4d0" loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28fcb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a28fcb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1a28fcf980" loc="34:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1a28fcf980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28fcfd00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28fce020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28fce1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28fce340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28fce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1a28fcc900" loc="36:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1a28fcc900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28fccc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f1a28fae490" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a28fae490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f1a28fae810"/>
        <function-ref name="address" scoped="" ref="0x7f1a28fae9a0"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28faeb30"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28faecc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28faee50"/>
        <function-ref name="pan" scoped="" ref="0x7f1a28fb6020"/>
        <function-ref name="setPan" scoped="" ref="0x7f1a28fb61b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a28fb6340"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a28fb64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f1a28fb6890" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f1a28fb6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28fb6c10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28fb6da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28fb5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28fb51b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28fb5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f1a28fa7a90" loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a28fa7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28fa51f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28fa6c40"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a28fa66f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fa5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1a28fac080" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a28fac080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1a28fac400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1a28fac590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1a28fac720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1a28fac8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f1a28fc8ba0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f1a28fc8ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28fc7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28fc71b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28fc7340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28fc74d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28fc7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a28fcecb0" loc="35:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a28fcecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28fcc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f1a28f9e130" loc="74:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a28f9e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a28f9d8a0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a28f9c020"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a28f9d170"/>
        <function-ref name="set" scoped="" ref="0x7f1a28f9c750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f1a28fa0bb0" loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a28fa0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a28f9f820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f1a28faa540" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a28faa540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28fa9c50"/>
        <function-ref name="get" scoped="" ref="0x7f1a28fa9700"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a28fa91b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fa71f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1a28fb5670" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a28fb5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1a28fb59f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1a28fb5b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1a28fb5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f1a28fbfa60" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f1a28fbfa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28fbfde0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28fc6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28fc61b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28fc6340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28fc64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f1a28fca1d0" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28fca1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28fca550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1a28facb70" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1a28facb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1a28fab020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1a28fab1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1a28fab340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1a28fab4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1a28fab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1a28fab930" loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioChannel" scoped="" ref="0x7f1a28fab930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1a28fabcb0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a28fabe40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a28faa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1a28fc9470" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1a28fc9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28fc97f0"/>
        <function-ref name="source" scoped="" ref="0x7f1a28fc9980"/>
        <function-ref name="address" scoped="" ref="0x7f1a28fc9b10"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28fc9ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28fc9e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28fc8020"/>
        <function-ref name="type" scoped="" ref="0x7f1a28fc81b0"/>
        <function-ref name="setType" scoped="" ref="0x7f1a28fc8340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a28fc84d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28fc8660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1a28fc87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1a28f9a3f0" loc="75:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a28f9a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a28f99970"/>
        <function-ref name="clear" scoped="" ref="0x7f1a28f980d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a28f99240"/>
        <function-ref name="set" scoped="" ref="0x7f1a28f98800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f1a28fc6840" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1a28fc6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28fc6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1a28fa0350" loc="71:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a28fa0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1a28fa06d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f1a28fcadf0" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101RadioC.nc">
      <component-ref qname="CC1101RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28fcadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28fc91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBlock" ref="0x7f1a27992c70" loc="9:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
      <component-ref qname="HplRadioSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a27992c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a27991020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1a27992470" loc="8:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
      <component-ref qname="HplRadioSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1a27992470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a279927f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27992980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1a27993d60" loc="7:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
      <component-ref qname="HplRadioSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a27993d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a27992180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a279930c0" loc="6:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/chips/ccxx00/HplRadioSpiC.nc">
      <component-ref qname="HplRadioSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a279930c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a27993440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a279935d0"/>
        <function-ref name="request" scoped="" ref="0x7f1a27993760"/>
        <function-ref name="granted" scoped="" ref="0x7f1a279938f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a27993a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1a2854fcf0" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1a2854fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2854e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1a2854f560" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1a2854f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2854f8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1a2854e4b0" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1a2854e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2854e830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1a28550dc0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a28550dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2854f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a28551100" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28551100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28551480"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28551610"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a285517a0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28551930"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28551ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28551c50"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28551de0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28550020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a285501b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28550340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a285504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a28355c50" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a28355c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1a2839d6f0"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1a28356020"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a283514e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a283524e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a28352e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a283529a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a283519a0"/>
        <function-ref name="start" scoped="" ref="0x7f1a28354a80"/>
        <function-ref name="stop" scoped="" ref="0x7f1a28352020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1a2834d8e0" loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1a2834d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1a28356410"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1a28356bf0"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a283491b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2834b1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a2834bb30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a2834b670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a28349670"/>
        <function-ref name="start" scoped="" ref="0x7f1a2834c780"/>
        <function-ref name="stop" scoped="" ref="0x7f1a2834cc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1a28350220" loc="68:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a28350220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1a2839d6f0"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1a28356020"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2834e090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2834ea10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2834e550"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2834d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1a27d2ec60" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a27d2ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1a27d2b020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1a27d2b1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1a27d2b340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1a27d2b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a2818c020" loc="7:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <component-ref qname="Msp430UsciSpiB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2818c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a2818c3a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2818c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBlock" ref="0x7f1a2818f4e0" loc="4:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <component-ref qname="Msp430UsciSpiB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a2818f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a2818f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1a28192cb0" loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <component-ref qname="Msp430UsciSpiB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1a28192cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a2818f0a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a2818f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1a2818fb00" loc="5:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <component-ref qname="Msp430UsciSpiB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a2818fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a2818fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a2818ce20" loc="10:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <component-ref qname="Msp430UsciSpiB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2818ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a2818b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1a28189850" loc="12:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <component-ref qname="Msp430UsciSpiB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1a28189850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28189bd0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28189d60"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28188020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a281881b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28188340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a281884d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28188660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a281887f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28188980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28188b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28188ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28188e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28185020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a281852b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28185440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a281855d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28185760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLK" ref="0x7f1a28185ad0" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <component-ref qname="Msp430UsciSpiB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLK" scoped="" ref="0x7f1a28185ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28185e50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28184020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a281841b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28184340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a281844d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28184660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a281847f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28184980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28184b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28184ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28184e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28183020"/>
        <function-ref name="set" scoped="" ref="0x7f1a281831b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28183440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a281835d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28183760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a281838f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a2818d190" loc="6:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <component-ref qname="Msp430UsciSpiB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2818d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a2818d510"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a2818d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1a2818b540" loc="11:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0P.nc">
      <component-ref qname="Msp430UsciSpiB0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1a2818b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2818b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2818ba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a2818bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2818bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a2818a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a2818a1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a2818a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2818a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a2818a660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a2818a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a2818a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a2818ab10"/>
        <function-ref name="set" scoped="" ref="0x7f1a2818aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28189020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a281891b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28189340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a281894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a28231600" loc="8:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA0P.nc">
      <component-ref qname="HplMsp430UsciInterruptsA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a28231600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28231980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1a28226d90" loc="11:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA0P.nc">
      <component-ref qname="HplMsp430UsciInterruptsA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a28226d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a28225180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a28225310"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a282254a0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a28225630"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a282257c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a28225950"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a28225ae0"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a28225c70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a28225e00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28224020"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a282241b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a28224340"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a282244d0"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a28224760"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a282248f0"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a28224a80"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a28224c10"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a28224da0"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a28223020"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a282231b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a28223340"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a282234d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a28223660"/>
        <function-ref name="set" scoped="" ref="0x7f1a282237f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a28223980"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a28223d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a28231d30" loc="10:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA0P.nc">
      <component-ref qname="HplMsp430UsciInterruptsA0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a28231d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a2822d0e0"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a2822d270"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a2822d400"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a2822d590"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a2822d720"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a2822d8b0"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a2822da40"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a2822dbd0"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a2822dd60"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a2822c020"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a2822c1b0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a2822c340"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a2822c4d0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a2822c760"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a2822c8f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a2822ca80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a2822cc10"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a2822cda0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a2822b020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a2822b1b0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a2822b340"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a2822b4d0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a2822b660"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a2822b7f0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a2822b980"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a2822bd10"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a2822a020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a2822a1b0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a2822a340"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a2822a4d0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a2822a660"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a2822a7f0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a2822a980"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a2822ab10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a2822aca0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a2822ae30"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a28229020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a282291b0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a28229340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a282294d0"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a28229660"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a282297f0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a28229980"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a28229b10"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a28229ca0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28229e30"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a28228020"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a282281b0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a28228340"/>
        <function-ref name="configure" scoped="" ref="0x7f1a282288d0"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a28228a60"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a28228bf0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a28228d80"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a28227020"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a282271b0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a28227340"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a282274d0"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a28227660"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a282277f0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a28227980"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a28227b10"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a28227ca0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28227e30"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a28226020"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a282261b0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a28226340"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a282264d0"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a28226660"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a282267f0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a28226980"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a28226b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27f1c360" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27f1c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27f1c6e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27f1c870"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27f1ca00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27f1cd70" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27f1cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27f1b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1a27f219e0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1a27f219e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a27f21d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1a27f25830" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1a27f25830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27f25bb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27f25d40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a27f22020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27f221b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27f22340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f1a27f1d350" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27f1d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27f1d6d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27f1d860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27f1d9f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27f1db80"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27f1dd10"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27f1c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f1a27f20180" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27f20180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f1a27f20500"/>
        <function-ref name="getDSN" scoped="" ref="0x7f1a27f20690"/>
        <function-ref name="setFCF" scoped="" ref="0x7f1a27f20820"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f1a27f209b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f1a27f20b40"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f1a27f20cd0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f1a27f20e60"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f1a27f1f020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f1a27f1f1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f1a27f1f340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f1a27f1f4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f1a27f1f660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f1a27f1f7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a27f1fa80"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27f1fc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f1a27f1fda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f1a27f1e020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f1a27f1e1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f1a27f1e340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27f1e4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a27f1e660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f1a27f1e7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a27f1e980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f1a27f1eb10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f1a27f1eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f1a27f22600" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f1a27f22600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27f22980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a27f22b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27f22ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27f22e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27f21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f1a27f21390" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1a27f21390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27f21710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1a2781d5d0" loc="38:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime32khzC.nc">
      <component-ref qname="LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1a2781d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2780e240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a27d35280" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a27d35280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27d35600"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27d35790"/>
        <function-ref name="start" scoped="" ref="0x7f1a27d35920"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d35ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27d31500" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27d31500"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d31880"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d31a10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d31ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27d30020" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27d30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27d35dd0" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27d35dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d34180"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d34310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d344a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27d34e30" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27d34e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d331e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d33370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d33500"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d33690"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d33820"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d339b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1a27d33cb0" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a27d33cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1a27d320a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1a27d32230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1a27d323c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1a27d32550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1a27d32970" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1a27d32970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27d32cf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27d32e80"/>
        <function-ref name="start" scoped="" ref="0x7f1a27d31030"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d311c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a27d347f0" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a27d347f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d34b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27d30700" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27d30700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d30a80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d30c10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d30da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d2f020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d2f1b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d2f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f1a27bc7b80" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f1a27bc7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27bc6020"/>
        <function-ref name="get" scoped="" ref="0x7f1a27bc61b0"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27bc6340"/>
        <function-ref name="set" scoped="" ref="0x7f1a27bc64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27bcb850" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27bcb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27bcbbd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27bcbd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27bca020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27bca1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27bca340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27bca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27bc8bb0" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27bc8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27bc7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27bc71b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27bc7340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27bc74d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27bc7660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27bc77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f1a27bcfaf0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a27bcfaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27bcc0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27bcc800"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27bcd970"/>
        <function-ref name="set" scoped="" ref="0x7f1a27bcb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f1a27bcaa50" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27bcaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27bc86b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1a27bd3920" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a27bd3920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27bd0020"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27bd0750"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27bd1780"/>
        <function-ref name="set" scoped="" ref="0x7f1a27bd0e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a27fa04e0" loc="45:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/clock/PlatformClockC.nc">
      <component-ref qname="PlatformClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a27fa04e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27fa0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a28751020" loc="92:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a28751020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a287513a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a28751530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a2874f3f0" loc="96:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2874f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a2874f770"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2874f900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a28751850" loc="93:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28751850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28751bd0"/>
        <function-ref name="requested" scoped="" ref="0x7f1a28751d60"/>
        <function-ref name="granted" scoped="" ref="0x7f1a28750020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a287501b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a28750340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a28754bd0" loc="91:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a28754bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28753020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a287531b0"/>
        <function-ref name="request" scoped="" ref="0x7f1a28753340"/>
        <function-ref name="granted" scoped="" ref="0x7f1a287534d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28753660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a28750600" loc="94:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28750600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28750980"/>
        <function-ref name="userId" scoped="" ref="0x7f1a28750b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1a282938b0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1a282938b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a28296df0"/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a28292500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1a28292cb0" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a28292cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a28296df0"/></type-var>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a28291b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2828f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2828f090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2828fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1a28281430" loc="49:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1a28281430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a2827da20"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2827f020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a2827fda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a2827f920"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a2827c4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a2827c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a2827f4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a28280090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a2827d410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a28280560"/>
        <function-ref name="stop" scoped="" ref="0x7f1a28280a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a27d071a0" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a27d071a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27d07520"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27d076b0"/>
        <function-ref name="start" scoped="" ref="0x7f1a27d07840"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d079d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f1a27d07d10" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a27d07d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27d060e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f1a27d04020" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioState" scoped="" ref="0x7f1a27d04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27d043a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27d04530"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27d046c0"/>
        <function-ref name="done" scoped="" ref="0x7f1a27d04850"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27d049e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27d04b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27d06400" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27d06400"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d06780"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d06910"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d06aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f1a27cf2d80" loc="144:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stateDoneTask" scoped="" ref="0x7f1a27cf2d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a27cf1180"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a27cf1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f1a27d022f0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27d022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d02670"/>
        <function-ref name="header" scoped="" ref="0x7f1a27d02800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f1a27ce61f0" loc="189:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f1a27ce61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a27ce6570"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a27ce6700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a27d06df0" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a27d06df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d051c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f1a27cc9920" loc="322:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="deliverTask" scoped="" ref="0x7f1a27cc9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a27cc9ca0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a27cc9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f1a27d03920" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27d03920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d03ca0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27d03e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1a27d05490" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioChannel" scoped="" ref="0x7f1a27d05490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1a27d05810"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27d059a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27d05b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f1a27d04e10" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tasklet" scoped="" ref="0x7f1a27d04e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f1a27d031c0"/>
        <function-ref name="suspend" scoped="" ref="0x7f1a27d03350"/>
        <function-ref name="resume" scoped="" ref="0x7f1a27d034e0"/>
        <function-ref name="run" scoped="" ref="0x7f1a27d03670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a285eb5d0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Alarm32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a285eb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a285e9df0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a285eadf0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a285e97a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a285e92e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a285e82e0"/>
        <function-ref name="start" scoped="" ref="0x7f1a285ea420"/>
        <function-ref name="stop" scoped="" ref="0x7f1a285ea930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a285eebd0" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Alarm32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a285eebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a285eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1a283c8e30" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Msp430AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a283c8e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a283c71e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a283c7370"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a283c7500"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a283c7690"/>
        <function-ref name="fired" scoped="" ref="0x7f1a283c7820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1a283ca200" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Msp430AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a283ca200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a283ca580"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a283ca710"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a283ca8a0"/>
        <function-ref name="get" scoped="" ref="0x7f1a283caa30"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a283cabc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a283cad50"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a283c9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a283c91b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a283c9340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a283c94d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a283c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a283ce020" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Msp430AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a283ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1a283d2cd0"/></type-var>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a283cb870"/>
        <function-ref name="fired" scoped="" ref="0x7f1a283cd840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a283cb220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a283cdd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a283cbd30"/>
        <function-ref name="start" scoped="" ref="0x7f1a283cee30"/>
        <function-ref name="stop" scoped="" ref="0x7f1a283cd380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a283cf5b0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Msp430AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a283cf5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a283cf930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1a283c99b0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Msp430AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a283c99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a283c9d30"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a283c8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a283c81b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a283c8340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a283c84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a283c8660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a283c87f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a283c8980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a283c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f1a279b0390" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1a279b0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b0270"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1a290b05e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a279ae1f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a279aeb70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a279ae6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a279ad090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f1a28dc66c0" loc="46:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f1a28dc66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28dc6a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PeripheralInit" ref="0x7f1a28dbd9b0" loc="49:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PeripheralInit" scoped="" ref="0x7f1a28dbd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28dbdd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f1a28dbd0f0" loc="47:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f1a28dbd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="usecsRaw" scoped="" ref="0x7f1a28dbd470"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f1a28dbd600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f1a28eb5020" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tasklet" scoped="" ref="0x7f1a28eb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f1a28eb53a0"/>
        <function-ref name="suspend" scoped="" ref="0x7f1a28eb5530"/>
        <function-ref name="resume" scoped="" ref="0x7f1a28eb56c0"/>
        <function-ref name="run" scoped="" ref="0x7f1a28eb5850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a280d25e0" loc="8:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
      <component-ref qname="Msp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a280d25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a280d2960"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a280d2af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a280cf5e0" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
      <component-ref qname="Msp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a280cf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a280cf960"/>
        <function-ref name="configure" scoped="" ref="0x7f1a280cfaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a280d0960" loc="11:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
      <component-ref qname="Msp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a280d0960"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a280d0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USCI" ref="0x7f1a280e4d20" loc="6:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
      <component-ref qname="Msp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="USCI" scoped="" ref="0x7f1a280e4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a280dc0e0"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a280dc270"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a280dc400"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a280dc590"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a280dc720"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a280dc8b0"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a280dca40"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a280dcbd0"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a280dcd60"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a280db020"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a280db1b0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a280db340"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a280db4d0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a280db760"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a280db8f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a280dba80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a280dbc10"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a280dbda0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a280da020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a280da1b0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a280da340"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a280da4d0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a280da660"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a280da7f0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a280da980"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a280dad10"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a280d9020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a280d91b0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a280d9340"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a280d94d0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a280d9660"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a280d97f0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a280d9980"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a280d9b10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a280d9ca0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a280d9e30"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a280d8020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a280d81b0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a280d8340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a280d84d0"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a280d8660"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a280d87f0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a280d8980"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a280d8b10"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a280d8ca0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a280d8e30"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a280d7020"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a280d71b0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a280d7340"/>
        <function-ref name="configure" scoped="" ref="0x7f1a280d78d0"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a280d7a60"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a280d7bf0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a280d7d80"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a280d6020"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a280d61b0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a280d6340"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a280d64d0"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a280d6660"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a280d67f0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a280d6980"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a280d6b10"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a280d6ca0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a280d6e30"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a280d5020"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a280d51b0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a280d5340"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a280d54d0"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a280d5660"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a280d57f0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a280d5980"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a280d5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a280d2e10" loc="9:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
      <component-ref qname="Msp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a280d2e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a280d11c0"/>
        <function-ref name="requested" scoped="" ref="0x7f1a280d1350"/>
        <function-ref name="granted" scoped="" ref="0x7f1a280d14e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a280d1670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a280d1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a280d4340" loc="7:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
      <component-ref qname="Msp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a280d4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a280d46c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a280d4850"/>
        <function-ref name="request" scoped="" ref="0x7f1a280d49e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a280d4b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a280d4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a280d1ac0" loc="10:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciB1P.nc">
      <component-ref qname="Msp430UsciB1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a280d1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a280d1e40"/>
        <function-ref name="userId" scoped="" ref="0x7f1a280d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a27d51630" loc="45:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a27d51630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a27d4ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27d4f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a27d4e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a27d4fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a27d4c590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a27d4c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a27d4f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a27d50390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a27d4e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a27d50860"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d50d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27d9d250" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27d9d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d9d5d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d9d760"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d9d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f1a27d92220" loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x7f1a27d92220"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1a27d925a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1a27d92730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f1a27d9c7e0" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x7f1a27d9c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a27d98c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27d99260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a27d98020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a27d99b60"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a27d97590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a27d97110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a27d996e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a27d9a400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a27d98630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a27d9a8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d9ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27da2ba0" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27da2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d9f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d9f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d9f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27d9e2e0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27d9e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d9e660"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d9e7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d9e980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d9eb10"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d9eca0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d9ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27d97a90" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27d97a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d97e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d95020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d951b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d95340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d954d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d95660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f1a27d9dc20" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27d9dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1a27d9c020"/>
        <function-ref name="noAck" scoped="" ref="0x7f1a27d9c1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1a27d9c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1a27d9f600" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1a27d9f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1a27d9f980"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1a27d9fb10"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1a27d9fca0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1a27d9fe30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1a27d9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f1a28eda9b0" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28eda9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28edad30"/>
        <function-ref name="wait" scoped="" ref="0x7f1a28ed9020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28ed91b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f1a28ed9340"/>
        <function-ref name="getNow" scoped="" ref="0x7f1a28ed94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1a28ed9af0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a28ed9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="tradio_size" ref="0x7f1a290b0dd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a28ed5390"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28ed6360"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a28ed6ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a28ed6820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a28ed5850"/>
        <function-ref name="start" scoped="" ref="0x7f1a28ed7970"/>
        <function-ref name="stop" scoped="" ref="0x7f1a28ed7e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f1a28ecf6d0" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tasklet" scoped="" ref="0x7f1a28ecf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f1a28ecfa50"/>
        <function-ref name="suspend" scoped="" ref="0x7f1a28ecfbe0"/>
        <function-ref name="resume" scoped="" ref="0x7f1a28ecfd70"/>
        <function-ref name="run" scoped="" ref="0x7f1a28ed3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1a28606020" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1a28606020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a285fa630"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28605a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a285fb920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a285fb4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a285f8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a285faab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a285fb020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a28606c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a285fa020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a28605110"/>
        <function-ref name="stop" scoped="" ref="0x7f1a286055e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1a285f8610" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1a285f8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a285f73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a2860a850" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a2860a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a2860abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimer0_B0" ref="0x7f1a2856bcc0" loc="10:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimer0_B0" scoped="" ref="0x7f1a2856bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2856a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimer0_A1" ref="0x7f1a2856b560" loc="6:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimer0_A1" scoped="" ref="0x7f1a2856b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2856b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimer1_A1" ref="0x7f1a28569400" loc="16:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimer1_A1" scoped="" ref="0x7f1a28569400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28569780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimer2_A1" ref="0x7f1a28568400" loc="21:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimer2_A1" scoped="" ref="0x7f1a28568400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28568780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimer0_B1" ref="0x7f1a2856a480" loc="11:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimer0_B1" scoped="" ref="0x7f1a2856a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2856a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimer0_A0" ref="0x7f1a2856cda0" loc="5:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimer0_A0" scoped="" ref="0x7f1a2856cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2856b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimer1_A0" ref="0x7f1a2856abe0" loc="15:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimer1_A0" scoped="" ref="0x7f1a2856abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28569020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimer2_A0" ref="0x7f1a28569b60" loc="20:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimer2_A0" scoped="" ref="0x7f1a28569b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28568020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1a2860ed50" loc="20:/home/hakan/github/pillforge/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1a2860ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2860b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a27f8e380" loc="153:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/clock/PlatformClockP.nc">
      <component-ref qname="PlatformClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a27f8e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27f8e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a27ca56a0" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a27ca56a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27ca5a20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27ca5bb0"/>
        <function-ref name="start" scoped="" ref="0x7f1a27ca5d40"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27ca2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f1a27c9cab0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioCCA" scoped="" ref="0x7f1a27c9cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f1a27c9ce30"/>
        <function-ref name="request" scoped="" ref="0x7f1a27c9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27c99810" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27c99810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27c99b90"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27c99d20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27c97020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27c973a0" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27c973a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27c97720"/>
        <function-ref name="header" scoped="" ref="0x7f1a27c978b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f1a27ca12e0" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioState" scoped="" ref="0x7f1a27ca12e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27ca1660"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27ca17f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27ca1980"/>
        <function-ref name="done" scoped="" ref="0x7f1a27ca1b10"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27ca1ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27ca1e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27c9e2e0" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27c9e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27c9e660"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27c9e7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27c9e980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27c9eb10"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27c9eca0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27c9ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f1a27c9a830" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubState" scoped="" ref="0x7f1a27c9a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27c9acb0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27c9ae40"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27c99020"/>
        <function-ref name="done" scoped="" ref="0x7f1a27c991b0"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27c99340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27c994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f1a27c9d220" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f1a27c9d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f1a27c9d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27ca0a90" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27ca0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27ca0e10"/>
        <function-ref name="header" scoped="" ref="0x7f1a27c9f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f1a27c9a150" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBareReceive" scoped="" ref="0x7f1a27c9a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27c9a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1a27c9d9c0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1a27c9d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27c9dd40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27c9b020"/>
        <function-ref name="start" scoped="" ref="0x7f1a27c9b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27c9b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27c96510" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27c96510"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27c96890"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27c96a20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27c96bb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27c96d40"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27c95020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27c951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1a27ca2c30" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1a27ca2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27ca1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27c954f0" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27c954f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f1a27c95870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f1a27c9b6a0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBareSend" scoped="" ref="0x7f1a27c9b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27c9ba20"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27c9bbb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27c9bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1a27ca0120" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27ca0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27ca04a0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27ca0630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27ca07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f1a27c97c10" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f1a27c97c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f1a27c96020"/>
        <function-ref name="request" scoped="" ref="0x7f1a27c961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1a27ca22d0" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="DummyLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1a27ca22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27ca2650"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27ca27e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27ca2970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27b70b10" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b70b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b6f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b6f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b6f340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b6f4d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b6f660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b6f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27b6fbf0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27b6fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b6e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b6e1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b6e340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b6e4d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b6e660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b6e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f1a27b70020" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketFlag" scoped="" ref="0x7f1a27b70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b703a0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b70530"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27b706c0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b70850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a28dbc850" loc="42:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a28dbc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28dbcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1a28da5020" loc="43:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a28da5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a28da53a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a28da5530"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a28da56c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a28da5850"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a28da59e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a28da5b70"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a28da5d00"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a28da4020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a28da41b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28da4340"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a28da44d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a28da4660"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a28da47f0"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a28da4a80"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a28da4c10"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a28da4da0"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a28d8f020"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a28d8f1b0"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a28d8f340"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a28d8f4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a28d8f660"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a28d8f7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a28d8f980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d8fb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a28d8fca0"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a28d8e220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f1a28eebcf0" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28eebcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28ee80a0"/>
        <function-ref name="wait" scoped="" ref="0x7f1a28ee8230"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28ee83c0"/>
        <function-ref name="isFree" scoped="" ref="0x7f1a28ee8550"/>
        <function-ref name="getNow" scoped="" ref="0x7f1a28ee86e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1a28ee7690" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a28ee7690"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f1a293dbb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f1a293dbb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="tradio_size" ref="0x7f1a290b0dd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a28edd020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28ede020"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a28ede9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a28ede4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a28edd4e0"/>
        <function-ref name="start" scoped="" ref="0x7f1a28ee65b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a28ee6ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a29000580" loc="35:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a29000580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a29000900"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a29000a90"/>
        <function-ref name="start" scoped="" ref="0x7f1a29000c20"/>
        <function-ref name="stop" scoped="" ref="0x7f1a29000db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f1a28fea020" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketRSSI" scoped="" ref="0x7f1a28fea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28fe9740"/>
        <function-ref name="get" scoped="" ref="0x7f1a28fe91f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a28feac50"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fe9c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1a28fdfe60" loc="62:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a28fdfe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a28fdc3f0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a28fdcb20"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a28fdeca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fdb2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1a28ff9020" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28ff9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a28ff93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1a28ff7020" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1a28ff7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28ff73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28ff7530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28ff76c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28ff7850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28ff79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1a28ffc5c0" loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1a28ffc5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28ffc940"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28ffcad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28ffcc60"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28ffcdf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28ffb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1a28ffa430" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1a28ffa430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28ffa7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f1a28fefa90" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f1a28fefa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28fec1f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28fedc40"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a28fed6f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fec740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1a28ff4e80" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a28ff4e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1a28ff3220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1a28ff33b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1a28ff3540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1a28ff36d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1a28fda020" loc="64:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1a28fda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a28fd85a0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a28fd8cd0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a28fdae30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fd7460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnimplementedPacketTimeStamp32khz" ref="0x7f1a28fd6210" loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnimplementedPacketTimeStamp32khz" scoped="" ref="0x7f1a28fd6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a28fd57c0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a28fd3020"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a28fd5090"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fd3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a28ffb800" loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a28ffb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28ffbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f1a28fe6d40" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a28fe6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a28fe0330"/>
        <function-ref name="clear" scoped="" ref="0x7f1a28fe0a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a28fe3ba0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fdf210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f1a28fe2820" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a28fe2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a28fe64c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f1a28ff1540" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f1a28ff1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28ff0c50"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ff0700"/>
        <function-ref name="isSet" scoped="" ref="0x7f1a28ff01b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28fef1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1a28ff44e0" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a28ff44e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1a28ff4860"/>
        <function-ref name="noAck" scoped="" ref="0x7f1a28ff49f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1a28ff4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f1a28ff9c70" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28ff9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28ff8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1a28ff3990" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1a28ff3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1a28ff3d10"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1a28ff2020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1a28ff21b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1a28ff2340"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1a28ff24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1a28ff7c90" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1a28ff7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28ff50a0"/>
        <function-ref name="source" scoped="" ref="0x7f1a28ff5230"/>
        <function-ref name="address" scoped="" ref="0x7f1a28ff53c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28ff5550"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28ff56e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28ff5870"/>
        <function-ref name="type" scoped="" ref="0x7f1a28ff5a00"/>
        <function-ref name="setType" scoped="" ref="0x7f1a28ff5b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a28ff5d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28ff4020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1a28ff41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1a28ff27a0" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioChannel" scoped="" ref="0x7f1a28ff27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1a28ff2c20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a28ff2db0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a28ff1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1a28fe4ae0" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1a28fe4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1a28fe4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f1a28ff88c0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101ActiveMessageC.nc">
      <component-ref qname="CC1101ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28ff88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28ff8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a28dcec30" loc="86:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="SimpleFcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a28dcec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a28dd1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a28dd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a28dcd390" loc="89:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="SimpleFcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28dcd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a28dcd710"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28dcd8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a28dd2020" loc="85:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="SimpleFcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a28dd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28dd23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a28dd2530"/>
        <function-ref name="request" scoped="" ref="0x7f1a28dd26c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a28dd2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28dd29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a28dcccd0" loc="87:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="SimpleFcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28dcccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28dd00a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1a28dd0230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a28e85520" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a28e85520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e858a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a28e869a0" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a28e869a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28e86d20"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28e85020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28e851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1a28e8a9d0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28e8a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a28e8ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1a28e8eda0" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1a28e8eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28e8d180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28e8d310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28e8d4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28e8d630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28e8d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1a28e8c020" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1a28e8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28e8c3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28e8c530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28e8c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28e8c850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28e8c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1a28e8bdf0" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1a28e8bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e8a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a28e93810" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a28e93810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28e93b90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28e93d20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28e8f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28e8f1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a28e8f340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a28e8f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a28e85c30" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a28e85c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28e840e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f1a28e84270"/>
        <function-ref name="source" scoped="" ref="0x7f1a28e84400"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28e84590"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28e84720"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28e848b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28e84a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1a28e7d850" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1a28e7d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1a28e7dbd0"/>
        <function-ref name="changed" scoped="" ref="0x7f1a28e7dd60"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1a28e83020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1a28e831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a28e87a60" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a28e87a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28e87de0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28e86020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28e861b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28e86340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a28e864d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a28e86660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a28e8b210" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a28e8b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e8b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f1a28e88690" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28e88690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e88a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1a28e8f780" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1a28e8f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28e8fb00"/>
        <function-ref name="source" scoped="" ref="0x7f1a28e8fc90"/>
        <function-ref name="address" scoped="" ref="0x7f1a28e8fe20"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28e8e020"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28e8e1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28e8e340"/>
        <function-ref name="type" scoped="" ref="0x7f1a28e8e4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f1a28e8e660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a28e8e7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28e8e980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1a28e8eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f1a28e872e0" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28e872e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f1a27e2b2e0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27e2b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f1a27e2b660"/>
        <function-ref name="address" scoped="" ref="0x7f1a27e2b7f0"/>
        <function-ref name="destination" scoped="" ref="0x7f1a27e2b980"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a27e2bb10"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a27e2bca0"/>
        <function-ref name="pan" scoped="" ref="0x7f1a27e2be30"/>
        <function-ref name="setPan" scoped="" ref="0x7f1a27e29020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27e291b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27e29340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27e29590" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27e29590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27e29910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27e29aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27e29c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27e29dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27e28020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27e281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f1a27e2e100" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27e2e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f1a27e2e480"/>
        <function-ref name="getDSN" scoped="" ref="0x7f1a27e2e610"/>
        <function-ref name="setFCF" scoped="" ref="0x7f1a27e2e7a0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f1a27e2e930"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f1a27e2eac0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f1a27e2ec50"/>
        <function-ref name="setDSN" scoped="" ref="0x7f1a27e2ede0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f1a27e2d020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f1a27e2d1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f1a27e2d340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f1a27e2d4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f1a27e2d660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f1a27e2d7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a27e2da80"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27e2dc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f1a27e2dda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f1a27e2c020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f1a27e2c1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f1a27e2c340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27e2c4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a27e2c660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f1a27e2c7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a27e2c980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f1a27e2cb10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f1a27e2cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1a27e28460" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1a27e28460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1a27e287e0"/>
        <function-ref name="changed" scoped="" ref="0x7f1a27e28970"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1a27e28b00"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1a27e28c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27e27020" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27e27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27e273a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27e27530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27e276c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27e27850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27e279e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27e27b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a27817570" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Alarm32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a27817570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a27815db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27816da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a27815760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a278152a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a278132a0"/>
        <function-ref name="start" scoped="" ref="0x7f1a278163d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a278168e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a27818ca0" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Alarm32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a27818ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a278170a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27e0dad0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27e0dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27e0de50"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27deb020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27deb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27deb400" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27deb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27deb780"/>
        <function-ref name="header" scoped="" ref="0x7f1a27deb910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a27debb60" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a27debb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27dea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f1a27de9e80" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Neighborhood" scoped="" ref="0x7f1a27de9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f1a27de8220"/>
        <function-ref name="insertNode" scoped="" ref="0x7f1a27de83b0"/>
        <function-ref name="getNode" scoped="" ref="0x7f1a27de8540"/>
        <function-ref name="evicted" scoped="" ref="0x7f1a27de86d0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f1a27de8860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f1a27de8ab0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1a27de8ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27de8e30"/>
        <function-ref name="clearAll" scoped="" ref="0x7f1a27de7020"/>
        <function-ref name="get" scoped="" ref="0x7f1a27de71b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27de7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f1a27de0b30" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f1a27de0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27db6020"/>
        <function-ref name="clearAll" scoped="" ref="0x7f1a27db61b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27db6340"/>
        <function-ref name="set" scoped="" ref="0x7f1a27db64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27dea310" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27dea310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27dea690"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27dea820"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27dea9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27deac40" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27deac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27de9020"/>
        <function-ref name="header" scoped="" ref="0x7f1a27de91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f1a27de9400" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UniqueConfig" scoped="" ref="0x7f1a27de9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f1a27de9780"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1a27de9910"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f1a27de9aa0"/>
        <function-ref name="getSender" scoped="" ref="0x7f1a27de9c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a28493160" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a28493160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284934e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28493670"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28493800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28493990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28493b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28493cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a284d5de0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a284d5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284d4180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a284d4310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a284d44a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a284d4630"/>
        <function-ref name="fired" scoped="" ref="0x7f1a284d47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a2848b020" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a2848b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2848b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a2848b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a2848b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a2848b850"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2848b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a2844d020" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a2844d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2844d3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2844d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2844d6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2844d850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2844d9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2844db70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a2844dd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a2844b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a2844b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a2841e480" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a2841e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2841e800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a2841e990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a2841eb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a2841ecb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2841ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a28442cb0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a28442cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284410a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28441230"/>
        <function-ref name="captured" scoped="" ref="0x7f1a284413c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28441550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284416e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28441870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a284a6c80" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a284a6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284a50a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a284a5230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284a53c0"/>
        <function-ref name="get" scoped="" ref="0x7f1a284a5550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284a56e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284a5870"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a284a5a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284a5b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284a5d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a284a4020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a2841d160" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a2841d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2841d4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2841d670"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2841d800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2841d990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2841db20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2841dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a2845dc80" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer1_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a2845dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2845c0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a2845c230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2845c3c0"/>
        <function-ref name="get" scoped="" ref="0x7f1a2845c550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2845c6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2845c870"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a2845ca00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2845cb90"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2845cd20"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a2845b020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2845b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a284c1160" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a284c1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284c14e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a284c1670"/>
        <function-ref name="captured" scoped="" ref="0x7f1a284c1800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284c1990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284c1b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a284c1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a284b8020" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a284b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284b83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a284b8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a284b86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a284b8850"/>
        <function-ref name="fired" scoped="" ref="0x7f1a284b89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a284782f0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a284782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28478670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28478800"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28478990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28478b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28478cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28478e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a2846f020" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a2846f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2846f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a2846f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a2846f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a2846f850"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2846f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a28455930" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a28455930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28455cb0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28455e40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28454020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a284541b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28454340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a28495020" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a28495020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a284953a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28495530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284956c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28495850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a284959e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28495b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28495d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28494020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a284941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a2841f020" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a2841f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2841f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2841f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2841f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2841f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2841f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2841fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a2841fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a2841e020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a2841e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a28431c50" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a28431c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28430020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a284301b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28430340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a284304d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28430660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a2849e930" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a2849e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2849ecb0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a2849ee40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a2849d020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a2849d1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2849d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a28454610" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a28454610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28454990"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28454b20"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28454cb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28454e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28453020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a284531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a284c3020" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a284c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a284c33a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a284c3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284c36c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a284c3850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a284c39e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284c3b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a284c3d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a284c2020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a284c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a2847a260" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a2847a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2847a5e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2847a770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2847a900"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2847aa90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2847ac20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2847adb0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28479020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a284791b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28479340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a28430930" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a28430930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28430cb0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28430e40"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2842f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2842f1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2842f340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2842f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a284d4a90" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a284d4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284d4e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a284d2020"/>
        <function-ref name="captured" scoped="" ref="0x7f1a284d21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284d2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284d24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a284d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a2848bcb0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a2848bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2848a0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2848a230"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2848a3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2848a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2848a6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2848a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a284cb7b0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a284cb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284cbb30"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a284cbcc0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a284cbe50"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a284ca020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a284ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a28482ac0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a28482ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28482e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28481020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a284811b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28481340"/>
        <function-ref name="fired" scoped="" ref="0x7f1a284814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a28444c40" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a28444c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28443020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a284431b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28443340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a284434d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a28443660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284437f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28443980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28443b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28443ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a284b0ac0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a284b0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284b0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a284af020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a284af1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a284af340"/>
        <function-ref name="fired" scoped="" ref="0x7f1a284af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a28467ac0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a28467ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28467e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28466020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a284661b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28466340"/>
        <function-ref name="fired" scoped="" ref="0x7f1a284664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a284328a0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a284328a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28432c20"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28432db0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28431020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a284311b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a28431340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284314d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28431660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a284317f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28431980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a284b8cb0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a284b8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284b70a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a284b7230"/>
        <function-ref name="captured" scoped="" ref="0x7f1a284b73c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284b7550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284b76e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a284b7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a2846fcb0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a2846fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2846e0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2846e230"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2846e3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2846e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2846e6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2846e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a2844b480" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a2844b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2844b800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a2844b990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a2844bb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a2844bcb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2844be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a2851b9d0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a2851b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2851bd50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a284d5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284d51b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a284d5340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a284d54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284d5660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a284d57f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a284d5980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a284d5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a2848dc40" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a2848dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2848c020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2848c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2848c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2848c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2848c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2848c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a2848c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a2848cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a2848cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a2849d610" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a2849d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2849d990"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2849db20"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2849dcb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2849de40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2849c020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2849c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a284287a0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a284287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28428b20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28428cb0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28428e40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28426020"/>
        <function-ref name="fired" scoped="" ref="0x7f1a284261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a28494480" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a28494480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28494800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28494990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28494b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28494cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28494e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a28456500" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a28456500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28456880"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28456a10"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28456ba0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28456d30"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a28455020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284551b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28455340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a284554d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28455660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a28439260" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer2_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28439260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284395e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28439770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28439900"/>
        <function-ref name="get" scoped="" ref="0x7f1a28439a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28439c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28439db0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28437020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284371b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28437340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a284374d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a28437660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a2844a160" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a2844a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a2844a4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a2844a670"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2844a800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2844a990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2844ab20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a2844acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a28524820" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28524820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28524ba0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28524d30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28523020"/>
        <function-ref name="get" scoped="" ref="0x7f1a285231b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28523340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a285234d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28523660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a285237f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28523980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28523b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a28523ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a284bac40" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a284bac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a284b9020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a284b91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284b9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a284b94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a284b9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284b97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a284b9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a284b9b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a284b9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a28471c40" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a28471c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28470020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a284701b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28470340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a284704d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a28470660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284707f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a28470980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28470b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a28470ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a28426480" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a28426480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28426800"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28426990"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28426b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28426cb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28426e40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28425020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a284ca480" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a284ca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284ca800"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a284ca990"/>
        <function-ref name="captured" scoped="" ref="0x7f1a284cab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284cacb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284cae40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a284c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a284817a0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a284817a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28481b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28481cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28481e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28480020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284801b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28480340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a284c2480" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a284c2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284c2800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a284c2990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a284c2b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a284c2cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a284c2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a28479610" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a28479610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28479990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28479b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a28479cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28479e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28478020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a284af7a0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a284af7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284afb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a284afcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1a284afe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284ae020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284ae1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a284ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1a284667a0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1a284667a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a28466b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1a28466cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1a28466e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28465020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284651b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1a28465340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a2849f500" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a2849f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a2849f880"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a2849fa10"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2849fba0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a2849fd30"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a2849e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2849e1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a2849e340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a2849e4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a2849e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a284293f0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a284293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28429770"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28429900"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28429a90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28429c20"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a28429db0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28428020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a284281b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28428340"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a284284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1a28442020" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1a28442020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a284423a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a28442530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a284426c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a28442850"/>
        <function-ref name="fired" scoped="" ref="0x7f1a284429e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a284cc4c0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a284cc4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a284cc840"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a284cc9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284ccb60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a284cccf0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a284cce80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284cb030"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a284cb1c0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a284cb350"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a284cb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a28483780" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a28483780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28483b00"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28483c90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28483e20"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28482020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a284821b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28482340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a284824d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28482660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a284827f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a284b1780" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a284b1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a284b1b00"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a284b1c90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284b1e20"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a284b0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a284b01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284b0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a284b04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a284b0660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a284b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1a28468780" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1a28468780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a28468b00"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a28468c90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28468e20"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a28467020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a284671b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28467340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a284674d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a28467660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a284677f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1a28522d90" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1a28522d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28520180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1a28520450" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1a28520450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a285207d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1a28522740" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1a28522740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28522ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1a285220d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a285220d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28522470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a284d2930" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a284d2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284d2cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a284d2e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284d1020"/>
        <function-ref name="get" scoped="" ref="0x7f1a284d11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284d1340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284d14d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a284d1660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284d17f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284d1980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a284d1b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284d1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a284d0020" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a284d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a284c92f0" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a284c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284c9670"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a284c9800"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284c9990"/>
        <function-ref name="get" scoped="" ref="0x7f1a284c9b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284c9cb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284c9e40"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a284c8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284c81b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284c8340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a284c84d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284c8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a284c8930" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284c8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a284c8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a284bf020" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a284bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284bf3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a284bf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284bf6c0"/>
        <function-ref name="get" scoped="" ref="0x7f1a284bf850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284bf9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284bfb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a284bfd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284be020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284be1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a284be340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a284be7a0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284be7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a284beb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a284b7b40" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a284b7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284b6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a284b61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284b6340"/>
        <function-ref name="get" scoped="" ref="0x7f1a284b64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284b6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284b67f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a284b6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284b6b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284b6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a284b6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284b5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a284b52f0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a284b5670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a284ae610" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a284ae610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284ae990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a284aeb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284aecb0"/>
        <function-ref name="get" scoped="" ref="0x7f1a284aee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284ac020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284ac1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a284ac340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284ac4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284ac660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a284ac7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284ac980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a284acc50" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_A4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284acc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a284ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1a284a32f0" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1a284a32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a284a3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1a284a3940" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1a284a3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a284a3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1a284a4c20" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1a284a4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a284a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1a284a45b0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer0_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284a45b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a284a4950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a2849c480" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a2849c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2849c800"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a2849c990"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2849cb20"/>
        <function-ref name="get" scoped="" ref="0x7f1a2849ccb0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2849ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2849a020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a2849a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2849a340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2849a4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a2849a660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2849a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a2849aac0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a2849aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2849ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a28492020" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28492020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284923a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28492530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284926c0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28492850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284929e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28492b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28492d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28491020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284911b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28491340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284914d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a284917a0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284917a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28491b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a2848ab40" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a2848ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28489020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a284891b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28489340"/>
        <function-ref name="get" scoped="" ref="0x7f1a284894d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28489660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284897f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28489980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28489b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28489ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28489e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a28488020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a284882f0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28488670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a28480610" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28480610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28480990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28480b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28480cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28480e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2847f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2847f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a2847f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2847f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2847f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a2847f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2847f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a2847fc50" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a2847fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2847e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a28477160" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28477160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284774e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28477670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28477800"/>
        <function-ref name="get" scoped="" ref="0x7f1a28477990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28477b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28477cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28477e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28476020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284761b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28476340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284764d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a284767a0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284767a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28476b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a2846eb40" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a2846eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2846d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a2846d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2846d340"/>
        <function-ref name="get" scoped="" ref="0x7f1a2846d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2846d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2846d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a2846d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2846db10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2846dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a2846de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2846c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a2846c2f0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a2846c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2846c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a28465610" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28465610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28465990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28465b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28465cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28465e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28464020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284641b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28464340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284644d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28464660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a284647f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a28464980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a28464c50" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer0_B6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a28464c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28463020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1a2845a2f0" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer1_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1a2845a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2845a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1a2845a940" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer1_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1a2845a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2845acc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1a2845bc20" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer1_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1a2845bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2845a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1a2845b5b0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer1_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a2845b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2845b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a28453480" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28453480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28453800"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28453990"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28453b20"/>
        <function-ref name="get" scoped="" ref="0x7f1a28453cb0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28453e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28452020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a284521b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28452340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284524d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28452660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284527f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a28452ac0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a28452ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28452e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a28449020" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28449020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a284493a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28449530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a284496c0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28449850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a284499e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28449b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28449d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28448020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a284481b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28448340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a284484d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a284487a0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a284487a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28448b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a28441b40" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a28441b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28440020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a284401b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28440340"/>
        <function-ref name="get" scoped="" ref="0x7f1a284404d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28440660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a284407f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28440980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28440b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28440ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a28440e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2843f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a2843f2f0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer1_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a2843f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2843f670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1a28436750" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer2_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1a28436750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28436ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1a28436da0" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer2_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1a28436da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28435180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1a28436100" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer2_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1a28436100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28436480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1a28437a60" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430Timer2_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a28437a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28437e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a2842f7a0" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a2842f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2842fb20"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a2842fcb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2842fe40"/>
        <function-ref name="get" scoped="" ref="0x7f1a2842e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2842e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2842e340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a2842e4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2842e660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2842e7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a2842e980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2842eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a2842ede0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a2842ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2842d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a284252f0" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a284252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28425670"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a28425800"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a28425990"/>
        <function-ref name="get" scoped="" ref="0x7f1a28425b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a28425cb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28425e40"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a28424020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a284241b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28424340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a284244d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a28424660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a28424930" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a28424930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28424cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1a2841c020" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a2841c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2841c3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a2841c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2841c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f1a2841c850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2841c9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2841cb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a2841cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2841b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2841b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a2841b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2841b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1a2841b7a0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430Timer2_A2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1a2841b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2841bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a2823a9e0" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a2823a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a2823ad80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a28239020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a2823b3e0" loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a2823b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a2823b780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usci" ref="0x7f1a282430c0" loc="65:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a282430c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a28243440"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a282435d0"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a28243760"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a282438f0"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a28243a80"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a28243c10"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a28243da0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a28242020"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a282421b0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a28242340"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a282424d0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a28242660"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a282427f0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a28242a80"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a28242c10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a28242da0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a28241020"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a282411b0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a28241340"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a282414d0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a28241660"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a282417f0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a28241980"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a28241b10"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a28241ca0"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a28240220"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a282403b0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a28240540"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a282406d0"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a28240860"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a282409f0"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a28240b80"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a28240d10"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a2823f020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a2823f1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a2823f340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a2823f4d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a2823f660"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a2823f7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a2823f980"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a2823fb10"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a2823fca0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a2823fe30"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a2823e020"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a2823e1b0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a2823e340"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a2823e4d0"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a2823e660"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a2823e7f0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2823ed80"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a2823d020"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a2823d1b0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a2823d340"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a2823d4d0"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a2823d660"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a2823d7f0"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a2823d980"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a2823db10"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a2823dca0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a2823de30"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a2823c020"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a2823c1b0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a2823c340"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a2823c4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a2823c660"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a2823c7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a2823c980"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a2823cb10"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a2823cca0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a2823ce30"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a2823b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a28239270" loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28239270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a282395f0"/>
        <function-ref name="requested" scoped="" ref="0x7f1a28239780"/>
        <function-ref name="granted" scoped="" ref="0x7f1a28239910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28239aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a28239c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a2823bb00" loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a2823bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a2823a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a2823a1b0"/>
        <function-ref name="request" scoped="" ref="0x7f1a2823a340"/>
        <function-ref name="granted" scoped="" ref="0x7f1a2823a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a2823a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a28239e80" loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28239e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28238220"/>
        <function-ref name="userId" scoped="" ref="0x7f1a282383b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a28238da0" loc="74:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28238da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a28236180"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28236310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1a282386a0" loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a282386a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28238a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a28627ca0" loc="85:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28627ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a286260a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28626230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1a286270d0" loc="84:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1a286270d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28627470"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1a28627600"/>
        <function-ref name="receive" scoped="" ref="0x7f1a28627790"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1a28627920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1a28628020" loc="83:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1a28628020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a286283c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1a28628550"/>
        <function-ref name="receive" scoped="" ref="0x7f1a286286e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1a28628870"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1a28628a00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1a28628b90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28628d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a286265b0" loc="86:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a286265b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a28626950"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a28626ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a28626dd0" loc="89:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a28626dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a28625180"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a28625310"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a286254a0"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a28625630"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a286257c0"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a28625950"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a28625ae0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a28625c70"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a28625e00"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a28624020"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a286241b0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a28624340"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a286244d0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a28624760"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a286248f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a28624a80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a28624c10"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a28624da0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a28623020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a286231b0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a28623340"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a286234d0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a28623660"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a286237f0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a28623980"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a28623d10"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a28622020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a286221b0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a28622340"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a286224d0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a28622660"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a286227f0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a28622980"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a28622b10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a28622ca0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a28622e30"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a28621020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a286211b0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a28621340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a286214d0"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a28621660"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a286217f0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a28621980"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a28621b10"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a28621ca0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28621e30"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a28620020"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a286201b0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a28620340"/>
        <function-ref name="configure" scoped="" ref="0x7f1a286208d0"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a28620a60"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a28620bf0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a28620d80"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a2861f020"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a2861f1b0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a2861f340"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a2861f4d0"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a2861f660"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a2861f7f0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a2861f980"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a2861fb10"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a2861fca0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a2861fe30"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a2861e020"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a2861e1b0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a2861e340"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a2861e4d0"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a2861e660"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a2861e7f0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a2861e980"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a2861eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupts" ref="0x7f1a2861eda0" loc="90:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a2861eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a2861d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1a28619e40" loc="95:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28619e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a286181e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1a28618370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a28619850" loc="94:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a28619850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a28619bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1a2861d410" loc="91:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1a2861d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2861d790"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2861d920"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a2861dab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2861dc40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a2861ddd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a2861c020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a2861c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2861c340"/>
        <function-ref name="get" scoped="" ref="0x7f1a2861c4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a2861c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a2861c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a2861c980"/>
        <function-ref name="set" scoped="" ref="0x7f1a2861cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a2861cda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a2861b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a2861b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a2861b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1a2861b5d0" loc="92:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1a2861b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2861b950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2861bae0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a2861bc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2861be00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a2861a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a2861a1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a2861a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2861a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a2861a660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a2861a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a2861a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a2861ab10"/>
        <function-ref name="set" scoped="" ref="0x7f1a2861aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28619020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a286191b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28619340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a286194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime_bms" ref="0x7f1a28618720" loc="96:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <component-ref qname="UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime_bms" scoped="" ref="0x7f1a28618720"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a286163d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a2832d2a0" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a2832d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a2832ab30"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2832caa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a2832a4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a2832a020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a28329020"/>
        <function-ref name="start" scoped="" ref="0x7f1a2832c0d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a2832c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a283a59c0" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a283a59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a283a5d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1a28326b90" loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1a28326b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a283224e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a283244e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a28324e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a283249a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a283229a0"/>
        <function-ref name="start" scoped="" ref="0x7f1a283259d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a28324020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a283a4260" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a283a4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a283a1b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1a283a3a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a283a14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a283a1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a283a0020"/>
        <function-ref name="start" scoped="" ref="0x7f1a283a3090"/>
        <function-ref name="stop" scoped="" ref="0x7f1a283a35a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1a28329690" loc="68:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a28329690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a283285b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28326020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a28328a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a283264e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioCapture" ref="0x7f1a27953020" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc">
      <component-ref qname="SoftCaptureC.SoftCaptureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioCapture" scoped="" ref="0x7f1a27953020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1a279533a0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27953530"/>
        <function-ref name="captured" scoped="" ref="0x7f1a279536c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1a27953850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f1a27953b00" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc">
      <component-ref qname="SoftCaptureC.SoftCaptureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1a27953b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a27953e80"/>
        <function-ref name="disable" scoped="" ref="0x7f1a27943030"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1a279431c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1a27943350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter32khz32" ref="0x7f1a27943820" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureP.nc">
      <component-ref qname="SoftCaptureC.SoftCaptureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter32khz32" scoped="" ref="0x7f1a27943820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a279426a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a27941090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a27942b60"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a27941550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a27cbbe30" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a27cbbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27cba1e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27cba370"/>
        <function-ref name="start" scoped="" ref="0x7f1a27cba500"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27cba690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27cb9020" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27cb9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27cb93a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27cb9530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27cb96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a27cb9950" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a27cb9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27cb9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1a27cb8020" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioChannel" scoped="" ref="0x7f1a27cb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1a27cb83a0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27cb8530"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27cb86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f1a27cba920" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1a27cba920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27cbaca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f1a27cb8970" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioState" scoped="" ref="0x7f1a27cb8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27cb8cf0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27cb8e80"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27cb7030"/>
        <function-ref name="done" scoped="" ref="0x7f1a27cb71c0"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27cb7350"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27cb74e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f1a27cb7730" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tasklet" scoped="" ref="0x7f1a27cb7730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f1a27cb7ab0"/>
        <function-ref name="suspend" scoped="" ref="0x7f1a27cb7c40"/>
        <function-ref name="resume" scoped="" ref="0x7f1a27cb7dd0"/>
        <function-ref name="run" scoped="" ref="0x7f1a27cb6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f1a27cb6270" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27cb6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27cb65f0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27cb6780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27cb6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f1a27cb6b60" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27cb6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27cb4020"/>
        <function-ref name="header" scoped="" ref="0x7f1a27cb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1a2838fb80" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a2838fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2838e9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28381360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2838ee70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28381820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1a28381c50" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a28381c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2837f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a2837f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a2837f340"/>
        <function-ref name="get" scoped="" ref="0x7f1a2837f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a2837f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2837f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a2837f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2837fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2837fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a2837fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a2837e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a27fd1b70" loc="108:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a27fd1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a27fd0020"/>
        <function-ref name="configure" scoped="" ref="0x7f1a27fd01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CReg" ref="0x7f1a27fd4570" loc="106:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CReg" scoped="" ref="0x7f1a27fd4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CReg"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="reg_writeBlock" scoped="" ref="0x7f1a27fd4910"/>
        <function-ref name="reg_write16" scoped="" ref="0x7f1a27fd4aa0"/>
        <function-ref name="reg_read16" scoped="" ref="0x7f1a27fd4c30"/>
        <function-ref name="slave_present" scoped="" ref="0x7f1a27fd4dc0"/>
        <function-ref name="reg_write" scoped="" ref="0x7f1a27fd3020"/>
        <function-ref name="reg_read" scoped="" ref="0x7f1a27fd31b0"/>
        <function-ref name="reg_readBlock" scoped="" ref="0x7f1a27fd3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CSlave" ref="0x7f1a27fd36c0" loc="107:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CSlave" scoped="" ref="0x7f1a27fd36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CSlave"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="slaveReceive" scoped="" ref="0x7f1a27fd17f0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1a27fd3bf0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1a27fd3d80"/>
        <function-ref name="slaveTransmit" scoped="" ref="0x7f1a27fd1020"/>
        <function-ref name="slaveReceiveRequested" scoped="" ref="0x7f1a27fd11b0"/>
        <function-ref name="slaveStart" scoped="" ref="0x7f1a27fd1340"/>
        <function-ref name="slaveTransmitRequested" scoped="" ref="0x7f1a27fd3a60"/>
        <function-ref name="slaveStop" scoped="" ref="0x7f1a27fd14d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1a27fd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CBasicAddr" ref="0x7f1a27fd9740" loc="105:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x7f1a27fd9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f1a281123d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f1a28112690"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1a27fd83d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1a27fd58c0"/>
        <function-ref name="write" scoped="" ref="0x7f1a27fd6020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1a27fd6c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a27fd0530" loc="109:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a27fd0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a27fd08d0"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a27fd0a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a27fd0d50" loc="112:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a27fd0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a27fcf100"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a27fcf290"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a27fcf420"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a27fcf5b0"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a27fcf740"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a27fcf8d0"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a27fcfa60"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a27fcfbf0"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a27fcfd80"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a27fce020"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a27fce1b0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a27fce340"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a27fce4d0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a27fce760"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a27fce8f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a27fcea80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a27fcec10"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a27fceda0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a27fcd020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a27fcd1b0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a27fcd340"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a27fcd4d0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a27fcd660"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a27fcd7f0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a27fcd980"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a27fcdd10"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a27fcc020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a27fcc1b0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a27fcc340"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a27fcc4d0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a27fcc660"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a27fcc7f0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a27fcc980"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a27fccb10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a27fccca0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a27fcce30"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a27fcb020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a27fcb1b0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a27fcb340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a27fcb4d0"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a27fcb660"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a27fcb7f0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a27fcb980"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a27fcbb10"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a27fcbca0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a27fcbe30"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a27fca020"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a27fca1b0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a27fca340"/>
        <function-ref name="configure" scoped="" ref="0x7f1a27fca8d0"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a27fcaa60"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a27fcabf0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a27fcad80"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a27fc9020"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a27fc91b0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a27fc9340"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a27fc94d0"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a27fc9660"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a27fc97f0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a27fc9980"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a27fc9b10"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a27fc9ca0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a27fc9e30"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a27fc8020"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a27fc81b0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a27fc8340"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a27fc84d0"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a27fc8660"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a27fc87f0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a27fc8980"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a27fc8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupts" ref="0x7f1a27fc8da0" loc="113:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a27fc8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a27fc7180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1a27fc3e40" loc="117:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a27fc3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a27fc21e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1a27fc2370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a27fc3850" loc="116:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a27fc3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a27fc3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Panic" ref="0x7f1a27fc25c0" loc="118:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Panic" scoped="" ref="0x7f1a27fc25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Panic"/>
      </instance>
      <interface-functions>
        <function-ref name="warn" scoped="" ref="0x7f1a27fc2940"/>
        <function-ref name="panic" scoped="" ref="0x7f1a27fc2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f1a27fc2d20" loc="119:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f1a27fc2d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="usecsRaw" scoped="" ref="0x7f1a27fc11c0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f1a27fc1350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCL" ref="0x7f1a27fc55d0" loc="115:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f1a27fc55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a27fc5950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27fc5ae0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a27fc5c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a27fc5e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27fc4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a27fc41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a27fc4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a27fc44d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27fc4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a27fc47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a27fc4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a27fc4b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a27fc4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a27fc3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a27fc31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a27fc3340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a27fc34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDA" ref="0x7f1a27fc7410" loc="114:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f1a27fc7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a27fc7790"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27fc7920"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a27fc7ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a27fc7c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27fc7dd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a27fc6020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a27fc61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a27fc6340"/>
        <function-ref name="get" scoped="" ref="0x7f1a27fc64d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a27fc6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a27fc67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a27fc6980"/>
        <function-ref name="set" scoped="" ref="0x7f1a27fc6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a27fc6da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a27fc5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a27fc51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a27fc5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a281b73a0" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a281b73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a281b7740"/>
        <function-ref name="configure" scoped="" ref="0x7f1a281b78d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBlock" ref="0x7f1a281b9e00" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a281b9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a281b81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1a281b9680" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1a281b9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a281b9a20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a281b9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1a281b8410" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a281b8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a281b8790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a281b89e0" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a281b89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a281b8d60"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a281b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a281b7bc0" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a281b7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a281b6020"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a281b61b0"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a281b6340"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a281b64d0"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a281b6660"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a281b67f0"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a281b6980"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a281b6b10"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a281b6ca0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a281b6e30"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a281b5020"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a281b51b0"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a281b5340"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a281b55d0"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a281b5760"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a281b58f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a281b5a80"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a281b5c10"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a281b5da0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a281b4020"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a281b41b0"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a281b4340"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a281b44d0"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a281b4660"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a281b47f0"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a281b4b80"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a281b4d10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a281b3020"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a281b31b0"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a281b3340"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a281b34d0"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a281b3660"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a281b37f0"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a281b3980"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a281b3b10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a281b3ca0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a281b3e30"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a281b2020"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a281b21b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a281b2340"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a281b24d0"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a281b2660"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a281b27f0"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a281b2980"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a281b2b10"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a281b2ca0"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a281b2e30"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a281b1020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a281b11b0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a281b1740"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a281b18d0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a281b1a60"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a281b1bf0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a281b1d80"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a281b0020"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a281b01b0"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a281b0340"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a281b04d0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a281b0660"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a281b07f0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a281b0980"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a281b0b10"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a281b0ca0"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a281b0e30"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a281af020"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a281af1b0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a281af340"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a281af4d0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a281af660"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a281af7f0"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a281af980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupts" ref="0x7f1a281afc10" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a281afc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a281ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1a281a8e40" loc="64:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a281a8e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a281a61e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1a281a6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a281a8850" loc="63:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a281a8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a281a8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1a281ae2b0" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1a281ae2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a281ae630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a281ae7c0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a281ae950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a281aeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a281aec70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a281aee00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a281ad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a281ad1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a281ad340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a281ad4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a281ad660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a281ad7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a281ad980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a281adc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a281adda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a281ac020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a281ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1a281ac440" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1a281ac440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a281ac7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a281ac950"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a281acae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a281acc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a281ace00"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a281ab020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a281ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a281ab340"/>
        <function-ref name="get" scoped="" ref="0x7f1a281ab4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a281ab660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a281ab7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a281ab980"/>
        <function-ref name="set" scoped="" ref="0x7f1a281abb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a281abda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a281aa020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a281aa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a281aa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLK" ref="0x7f1a281aa5d0" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLK" scoped="" ref="0x7f1a281aa5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a281aa950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a281aaae0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a281aac70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a281aae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a281a9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a281a91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a281a9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a281a94d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a281a9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a281a97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a281a9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a281a9b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a281a9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a281a8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a281a81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a281a8340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a281a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27d61d80" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27d61d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d60180"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d60310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d604a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27d5f400" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27d5f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d5f780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d5f910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d5faa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d5fc30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d5fdc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1a27d606f0" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1a27d606f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1a27d60a70"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1a27d60c00"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1a27d60d90"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1a27d5f020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1a27d5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27d5e310" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27d5e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d5e690"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d5e820"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d5e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f1a27d5ec00" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27d5ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1a27d5c020"/>
        <function-ref name="noAck" scoped="" ref="0x7f1a27d5c1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1a27d5c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27d589c0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27d589c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d58d40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d56020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d561b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d56340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d564d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d56660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f1a27d5c6f0" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x7f1a27d5c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a27d59c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27d5a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a27d59020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a27d5aae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a27d58590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a27d58110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a27d5a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a27d5b390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a27d59630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a27d5b860"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d5bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a27d52cc0" loc="45:/home/hakan/github/pillforge/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a27d52cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a27d46220"/>
        <function-ref name="fired" scoped="" ref="0x7f1a27d497c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a27d47590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a27d47110"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a27d46b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a27d466a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a27d49c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a27d4a940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a27d47ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a27d4ae10"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d49340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1a2837bcf0" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a2837bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a28360b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2835e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2835e090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2835ea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1a2835d0f0" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1a2835d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2835c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a2835c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2835c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a2835ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1a28e1a020" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28e1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a28e1a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1a28e1e400" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1a28e1e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28e1e780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28e1e910"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28e1eaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28e1ec30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28e1edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1a28e1d190" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1a28e1d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28e1d530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28e1d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28e1d850"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28e1d9e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28e1db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1a28e1c780" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1a28e1c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e1cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a28e1c020" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a28e1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e1c3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f1a28e1a780" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28e1a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e1ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1a28e20e20" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1a28e20e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28e1f1c0"/>
        <function-ref name="source" scoped="" ref="0x7f1a28e1f350"/>
        <function-ref name="address" scoped="" ref="0x7f1a28e1f4e0"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28e1f670"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28e1f800"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28e1f990"/>
        <function-ref name="type" scoped="" ref="0x7f1a28e1fb20"/>
        <function-ref name="setType" scoped="" ref="0x7f1a28e1fcb0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a28e1fe40"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28e1e020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1a28e1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f1a28e19020" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28e19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e193c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1a28e16720" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1a28e16720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1a28e16aa0"/>
        <function-ref name="changed" scoped="" ref="0x7f1a28e16c30"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1a28e16dc0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1a28e15020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a28e196b0" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a28e196b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28e19a30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28e19bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28e19d50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28e18020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a28e181b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a28e18340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a28e185d0" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a28e185d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28e18950"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28e18ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28e18c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a28e17020" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a28e17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28e173a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a28e17630" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a28e17630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28e17ab0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f1a28e17c40"/>
        <function-ref name="source" scoped="" ref="0x7f1a28e17dd0"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28e16020"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28e161b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28e16340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28e164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a286bf020" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a286bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a286bf3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a286bf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a286c1a20" loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a286c1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a286c1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usci" ref="0x7f1a286c9730" loc="65:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a286c9730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a286c9ab0"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a286c9c40"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a286c9dd0"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a286c8020"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a286c81b0"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a286c8340"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a286c84d0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a286c8660"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a286c87f0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a286c8980"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a286c8b10"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a286c8ca0"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a286c8e30"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a286c7120"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a286c72b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a286c7440"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a286c75d0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a286c7760"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a286c78f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a286c7a80"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a286c7c10"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a286c7da0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a286c6020"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a286c61b0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a286c6340"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a286c66d0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a286c6860"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a286c69f0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a286c6b80"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a286c6d10"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a286c5020"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a286c51b0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a286c5340"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a286c54d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a286c5660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a286c57f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a286c5980"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a286c5b10"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a286c5ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a286c5e30"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a286c4020"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a286c41b0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a286c4340"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a286c44d0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a286c4660"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a286c47f0"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a286c4980"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a286c4b10"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a286c4ca0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a286c3420"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a286c35b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a286c3740"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a286c38d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a286c3a60"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a286c3bf0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a286c3d80"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a286c2020"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a286c21b0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a286c2340"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a286c24d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a286c2660"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a286c27f0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a286c2980"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a286c2b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a286c2ca0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a286c2e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a286c1020"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a286c11b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a286c1340"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a286c14d0"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a286c1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a286bf7a0" loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a286bf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a286bfb20"/>
        <function-ref name="requested" scoped="" ref="0x7f1a286bfcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a286bfe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a286be020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a286be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a286c0190" loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a286c0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a286c0530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a286c06c0"/>
        <function-ref name="request" scoped="" ref="0x7f1a286c0850"/>
        <function-ref name="granted" scoped="" ref="0x7f1a286c09e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a286c0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a286be400" loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a286be400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a286be780"/>
        <function-ref name="userId" scoped="" ref="0x7f1a286be910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a286bc3a0" loc="74:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a286bc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a286bc740"/>
        <function-ref name="configure" scoped="" ref="0x7f1a286bc8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1a286bec00" loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a286bec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a286bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a2797f020" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a2797f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2797f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2797f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2797f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a2797f850"/>
        <function-ref name="get" scoped="" ref="0x7f1a2797f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2797fb70"/>
        <function-ref name="set" scoped="" ref="0x7f1a2797fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a27979020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a27970020" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="GDO2M"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a27970020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a279703a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27970530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a279706c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27970850"/>
        <function-ref name="get" scoped="" ref="0x7f1a279709e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a27970b70"/>
        <function-ref name="set" scoped="" ref="0x7f1a27970d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a2796f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioCapture" ref="0x7f1a2795bc00" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
      <component-ref qname="SoftCaptureC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioCapture" scoped="" ref="0x7f1a2795bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1a2793d020"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2793d1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f1a2793d340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1a2793d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a27975020" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="GDO0M"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a27975020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a279753a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27975530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a279756c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27975850"/>
        <function-ref name="get" scoped="" ref="0x7f1a279759e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a27975b70"/>
        <function-ref name="set" scoped="" ref="0x7f1a27975d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a27974020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a279792f0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a279792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a27979670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27979800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a27979990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a27979b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27979cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a27979e40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a27978020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a279781b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27978340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a279784d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a27978660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a279787f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27978980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a27978c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a27978da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a27977020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a279771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a279742f0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="GDO0M"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a279742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a27974670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a27974800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a27974990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a27974b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a27974cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a27974e40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a27973020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a279731b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27973340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a279734d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a27973660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a279737f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27973980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a27973c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a27973da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a27972020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a279721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a2796f2f0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="GDO2M"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a2796f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a2796f670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a2796f800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a2796f990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a2796fb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a2796fcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a2796fe40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a2796e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a2796e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a2796e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a2796e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a2796e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a2796e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a2796e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a2796ec10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a2796eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a2796d020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a2796d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1a2792ccf0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="Msp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1a2792ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a2791a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2791a230"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2791a3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1a2791a550"/>
        <function-ref name="enable" scoped="" ref="0x7f1a2791a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1a2791a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f1a2793d760" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/gpio/SoftCaptureC.nc">
      <component-ref qname="SoftCaptureC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f1a2793d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2793dae0"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2793dc70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1a2793de00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1a2792f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1a2792c1f0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="Msp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1a2792c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a2792c570"/>
        <function-ref name="disable" scoped="" ref="0x7f1a2792c700"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1a2792c890"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1a2792ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28bb3100" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28bb3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28bb3480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28bb3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28bb37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28bb3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28bb3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28bb3c50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28bb3de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28bb2020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28bb21b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28bb2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28bb24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28bb2660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28bb27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28bb2a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28bb2c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28bb2da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28bb1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b9bb80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b9bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b9a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b9a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b9a340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b9a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b9a660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b9a7f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b9a980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b9ab10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b9aca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b9ae30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b99020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b991b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b99340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b995d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b99760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b998f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b99a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b59550" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b59550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b598d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b59a60"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b59bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b59d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b58020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b581b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b58340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b584d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b58660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b587f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b58980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b58b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b58ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b57020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b571b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b57340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a7ab80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P71"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a7ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a78020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a781b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a78340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a784d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a78660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a787f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a78980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a78b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a78ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a78e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a77020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a771b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a77340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a775d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a77760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a778f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a77a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a3a9f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P83"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a3a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a3ad70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a39020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a391b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a39340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a394d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a39660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a397f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a39980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a39b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a39ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a39e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a38020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a38440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a385d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a38760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b1c6d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b1c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b1ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b1cbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b1cd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b1a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b1a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b1a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b1a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b1a660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b1a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b1a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b1ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b1aca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b1ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b19120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b192b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b19440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b195d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b4d3f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b4d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b4d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b4d900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b4da90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b4dc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b4ddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b4b020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b4b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b4b340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b4b4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b4b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b4b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b4b980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b4bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b4bda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b4a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b4a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b4a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b0ed10" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b0ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b0d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b0d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b0d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b0d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b0d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b0d8b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b0da40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b0dbd0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b0dd60"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b0c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b0c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b0c340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b0c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b0c760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b0c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b0ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b0cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ace6d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ace6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28acea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28acebe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28aced70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28acd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28acd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28acd340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28acd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28acd660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28acd7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28acd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28acdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28acdca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28acde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28acc120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28acc2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28acc440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28acc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a9a820" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a9a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a9aba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a9ad30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a99020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a991b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a99340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a994d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a99660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a997f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a99980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a99b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a99ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a99e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a98020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a982b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a98440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a985d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a98760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a5b060" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P76"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a5b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a5b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a5b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a5b700"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a5b890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a5ba20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a5bbb0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a5bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a5a020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a5a1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a5a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a5a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a5a660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a5a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a5aa80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a5ac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a5ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b956d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b95a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b95be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b95d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b94020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b941b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b94340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b94660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b947f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b94980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b94b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b94ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b94e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b93120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b932b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b93440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b935d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a8dd10" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a8dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a8c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a8c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a8c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a8c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a8c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a8c8b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a8ca40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a8cbd0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a8cd60"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a8b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a8b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a8b340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a8b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a8b760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a8b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a8ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a8bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28abc6d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28abc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28abca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28abcbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28abcd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28abb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28abb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28abb340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28abb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28abb660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28abb7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28abb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28abbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28abbca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28abbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28aba120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28aba2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28aba440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28aba5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ab59f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ab59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ab5d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ab4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ab41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ab4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ab44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ab4660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ab47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ab4980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ab4b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ab4ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ab4e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ab3020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ab31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ab3440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ab35d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ab3760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ab38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b89b80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b89b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b88020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b881b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b88340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b884d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b88660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b887f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b88980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b88b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b88ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b88e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b87020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b871b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b87340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b875d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b87760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b878f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b87a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b68e00" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b68e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b661c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b66350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b664e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b66670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b66800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b66990"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b66b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b66cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b66e40"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b65020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b651b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b65340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b654d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b65760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b658f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b65a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b65c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b53820" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b53820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b53ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b53d30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b52020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b521b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b52340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b524d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b52660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b527f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b52980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b52b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b52ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b52e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b51020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b512b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b51440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b515d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b51760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b00550" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b00550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b008d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b00a60"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b00bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b00d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28aff020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28aff1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28aff340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28aff4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28aff660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28aff7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28aff980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28affb10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28affca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28afe020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28afe1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28afe340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28afe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ae03f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ae03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ae0770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ae0900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ae0a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ae0c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ae0db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28adf020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28adf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28adf340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28adf4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28adf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28adf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28adf980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28adfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28adfda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ade020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ade1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ade340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a289d63f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
      <component-ref qname="PJ1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a289d63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a289d6770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a289d6900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a289d6a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a289d6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a289d6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a289d5020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a289d51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a289d5340"/>
        <function-ref name="get" scoped="" ref="0x7f1a289d54d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a289d5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a289d57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a289d5980"/>
        <function-ref name="set" scoped="" ref="0x7f1a289d5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a289d5da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a289d4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a289d41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a289d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b7b3f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b7b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b7b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b7b900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b7ba90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b7bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b7bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b7a020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b7a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b7a340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b7a4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b7a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b7a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b7a980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b7ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b7ada0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b79020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b791b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b3a6d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b3a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b3aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b3abe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b3ad70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b39020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b391b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b39340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b39660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b397f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b39980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b39b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b39ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b39e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b38120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b382b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b38440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b385d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28afa820" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28afa820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28afaba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28afad30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28af9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28af91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28af9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28af94d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28af9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28af97f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28af9980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28af9b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28af9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28af9e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28af8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28af82b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28af8440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28af85d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28af8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a851f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a851f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a85570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a85700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a85890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a85a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a85bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a85d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a84020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a841b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a84340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a844d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a84660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a847f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a84980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a84c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a84da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a83020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b286d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b286d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b28a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b28be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b28d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b27020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b271b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b27340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b27660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b277f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b27980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b27b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b27ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b27e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b26120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b262b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b26440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b265d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a55b80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P77"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a55b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a54020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a541b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a54340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a544d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a54660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a547f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a54980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a54b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a54ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a54e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a53020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a531b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a53340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a535d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a53760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a538f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a53a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28aa1550" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28aa1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28aa18d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28aa1a60"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28aa1bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28aa1d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a9f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a9f1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a9f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a9f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a9f660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a9f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a9f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a9fb10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a9fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a9e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a9e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a9e340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ba76d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ba76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ba7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ba7be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ba7d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ba6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ba61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ba6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ba64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ba6660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ba67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ba6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ba6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ba6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ba6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ba5120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ba52b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ba5440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ba55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b22060" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b22060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b223e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b22570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b22700"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b22890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b22a20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b22bb0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b22d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b21020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b211b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b21340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b214d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b21660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b217f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b21a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b21c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b21da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a7f120" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P70"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a7f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a7f4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a7f630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a7f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a7f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a7fae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a7fc70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a7fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a7e020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a7e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a7e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a7e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a7e660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a7e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a7ea80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a7ec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a7eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a473f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P81"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a47770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a47900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a47a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a47c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a47db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a46020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a46340"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a464d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a46660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a46980"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a46b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a46da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a45020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a451b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a45340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ada020" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ada020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ada3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ada530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ada6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ada850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ada9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28adab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28adad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ad8020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ad81b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ad8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ad84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ad8660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ad87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ad8a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ad8c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ad8da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ad7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b159f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b159f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b15d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b14020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b14340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b144d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b14660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b147f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b14980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b14b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b14ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b14e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b13020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b13440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b135d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b13760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28aa71f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28aa71f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28aa7570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28aa7700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28aa7890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28aa7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28aa7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28aa7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28aa6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28aa61b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28aa6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28aa64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28aa6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28aa67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28aa6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28aa6c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28aa6da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28aa5020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28aa51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a68b80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P74"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a68b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a66020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a661b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a66340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a664d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a66660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a667f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a66980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a66b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a66ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a66e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a65020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a651b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a65340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a655d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a65760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a658f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a65a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a26550" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P86"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a26550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a268d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a26a60"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a26bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a26d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a24020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a241b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a24340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a244d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a24660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a247f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a24980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a24b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a24ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a23020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a231b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a23340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ba1060" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ba1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ba13e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ba1570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ba1700"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ba1890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ba1a20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ba1bb0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ba1d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ba0020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ba01b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ba0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ba04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ba0660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ba07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ba0a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ba0c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ba0da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b75740" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b75740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b75ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b75c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b75de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b74020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b74340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b74660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b747f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b74980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b74b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b74ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b74e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b73120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b732b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b73440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b735d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b41b80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b41b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b40020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b401b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b40340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b404d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b40660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b407f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b40980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b40b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b40ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b40e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b3f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b3f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b3f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b3f5d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b3f760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b3f8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b3fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a6d060" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P73"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a6d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a6d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a6d570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a6d700"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a6d890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a6da20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a6dbb0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a6dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a6c020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a6c1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a6c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a6c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a6c660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a6c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a6ca80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a6cc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a6cda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b34060" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b34060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b343e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b34570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b34700"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b34890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b34a20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b34bb0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b34d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b33020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b331b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b33340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b334d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b33660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b337f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b33a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b33c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b33da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a736d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P72"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a736d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a73a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a73be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a73d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a72020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a721b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a72340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a72660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a727f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a72980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a72b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a72ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a72e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a71120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a712b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a71440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a715d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b46020" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b463a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b46530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b466c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b46850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b469e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b46b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b46d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b45020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b451b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b45340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b454d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b45660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b457f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b45a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b45c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b45da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b071f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b071f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b07570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b07700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b07890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b07a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b07bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b07d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b06020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b061b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b06340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b064d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b06660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b067f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b06980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b06c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b06da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b05020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ac7060" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ac7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ac73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ac7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ac7700"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ac7890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ac7a20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ac7bb0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ac7d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ac6020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ac61b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ac6340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ac64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ac6660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ac67f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ac6a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ac6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ac6da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ac5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a34d10" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P84"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a34d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a330e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a33270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a33400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a33590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a33720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a338b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a33a40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a33bd0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a33d60"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a32020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a32340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a32760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a328f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a32a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a32c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a93a60" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a93a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a93de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a92020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a921b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a92340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a924d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a92660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a927f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a92980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a92b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a92ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a92e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a91020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a911b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a91440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a915d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a91760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a289d16d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
      <component-ref qname="PJ2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a289d16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a289d1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a289d1be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a289d1d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a289d0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a289d01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a289d0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a289d04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a289d0660"/>
        <function-ref name="get" scoped="" ref="0x7f1a289d07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a289d0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a289d0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a289d0ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a289d0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a289cf120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a289cf2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a289cf440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a289cf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28af3a60" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28af3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28af3de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28af2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28af21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28af2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28af24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28af2660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28af27f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28af2980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28af2b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28af2ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28af2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28af1020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28af11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28af1440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28af15d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28af1760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28af18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28aafd10" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28aafd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28aae0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28aae270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28aae400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28aae590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28aae720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28aae8b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28aaea40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28aaebd0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28aaed60"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28aad020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28aad1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28aad340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28aad4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28aad760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28aad8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28aada80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28aadc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ae69f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ae69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ae6d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ae5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ae51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ae5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ae54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ae5660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ae57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ae5980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ae5b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ae5ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ae5e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ae4020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ae41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ae4440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ae45d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ae4760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ae48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b601f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b601f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b60570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b60700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b60890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b60a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b60bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b60d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b5f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b5f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b5f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b5f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b5f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b5f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b5f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b5fc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b5fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b5e020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28badb80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28badb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28bac020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28bac1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28bac340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28bac4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28bac660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28bac7f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28bac980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28bacb10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28bacca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28bace30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28bab020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28bab1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28bab340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28bab5d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28bab760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28bab8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28baba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b8f060" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b8f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b8f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b8f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b8f700"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b8f890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b8fa20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b8fbb0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b8fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b8e020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b8e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b8e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b8e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b8e660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b8e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b8ea80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b8ec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b8eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b2fb80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b2fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b2e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b2e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b2e340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b2e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b2e660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b2e7f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b2e980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b2eb10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b2eca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b2ee30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b2d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b2d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b2d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b2d5d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b2d760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b2d8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b2da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a41740" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P82"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a41740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a41ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a41c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a41de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a40020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a40340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a40660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a407f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a40980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a40b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a40ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a40e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a3f120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a3f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a3f440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a3f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ad4b80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ad4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ad3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ad31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ad3340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ad34d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ad3660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ad37f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ad3980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ad3b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ad3ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ad3e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ad2020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ad21b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ad2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ad25d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ad2760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ad28f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ad2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28ac2b80" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28ac2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28ac1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28ac11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28ac1340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28ac14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28ac1660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28ac17f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28ac1980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28ac1b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28ac1ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28ac1e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28ac0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28ac01b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28ac0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28ac05d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28ac0760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28ac08f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28ac0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a616d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P75"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a616d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a61a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a61be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a61d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a60020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a601b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a60340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a60660"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a607f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a60980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a60b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a60ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a60e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a5f120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a5f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a5f440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a5f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a1f820" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P87"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a1f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a1fba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a1fd30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a1e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a1e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a1e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a1e4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a1e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a1e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a1e980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a1eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a1eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a1ee30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a1d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a1d2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a1d440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a1d5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a1d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b6e9f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b6e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b6ed70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b6d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b6d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b6d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b6d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b6d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b6d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b6d980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b6db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b6dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b6de30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b6c020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b6c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b6c440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b6c5d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b6c760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b6c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28b82060" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28b82060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28b823e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28b82570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28b82700"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28b82890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28b82a20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28b82bb0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28b82d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28b81020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28b811b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28b81340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28b814d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28b81660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28b817f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28b81a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28b81c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28b81da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28b80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a2c1f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P85"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a2c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a2c570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a2c700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a2c890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a2ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a2cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a2cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a2b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a2b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a2b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a2b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a2b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a2b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a2b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a2bc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a2bda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a2a020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a289db100" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
      <component-ref qname="PJ0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a289db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a289db480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a289db610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a289db7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a289db930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a289dbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a289dbc50"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a289dbde0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a289da020"/>
        <function-ref name="get" scoped="" ref="0x7f1a289da1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a289da340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a289da4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a289da660"/>
        <function-ref name="set" scoped="" ref="0x7f1a289da7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a289daa80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a289dac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a289dada0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a289d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a289cc9f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenDsP.nc">
      <component-ref qname="PJ3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a289cc9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a289ccd70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a289cb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a289cb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a289cb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a289cb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a289cb660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a289cb7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a289cb980"/>
        <function-ref name="get" scoped="" ref="0x7f1a289cbb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a289cbca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a289cbe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a289ca020"/>
        <function-ref name="set" scoped="" ref="0x7f1a289ca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a289ca440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a289ca5d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a289ca760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a289ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28aedd10" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28aedd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28aeb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28aeb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28aeb400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28aeb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28aeb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28aeb8b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28aeba40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28aebbd0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28aebd60"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28aea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28aea1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28aea340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28aea4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28aea760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28aea8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28aeaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28aeac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1a28a4e060" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIORenP.nc">
      <component-ref qname="P80"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1a28a4e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28a4e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28a4e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28a4e700"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28a4e890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28a4ea20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28a4ebb0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28a4ed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28a4d020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28a4d1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28a4d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28a4d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28a4d660"/>
        <function-ref name="set" scoped="" ref="0x7f1a28a4d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28a4da80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28a4dc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28a4dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28a4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a286df3a0" loc="92:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplMsp430UsciC.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a286df3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a286df740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a286df8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a28761bb0" loc="96:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciC.HplUsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a28761bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28760020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a286dfb20" loc="93:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplMsp430UsciC.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a286dfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a286dd020"/>
        <function-ref name="requested" scoped="" ref="0x7f1a286dd1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a286dd340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a286dd4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a286dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a286e04f0" loc="91:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplMsp430UsciC.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a286e04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a286e0890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a286e0a20"/>
        <function-ref name="request" scoped="" ref="0x7f1a286e0bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a286e0d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a286df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usci" ref="0x7f1a28769ac0" loc="95:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciC.HplUsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a28769ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a28769e40"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a28768020"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a287681b0"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a28768340"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a287684d0"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a28768660"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a287687f0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a28768980"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a28768b10"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a28768ca0"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a28768e30"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a28767020"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a287671b0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a28767440"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a287675d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a28767760"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a287678f0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a28767a80"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a28767c10"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a28767da0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a28766020"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a287661b0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a28766340"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a287664d0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a28766660"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a287669f0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a28766b80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a28766d10"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a28765020"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a287651b0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a28765340"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a287654d0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a28765660"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a287657f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a28765980"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a28765b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a28765ca0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a28765e30"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a28764020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a287641b0"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a28764340"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a287644d0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a28764660"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a287647f0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a28764980"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28764b10"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a28764ca0"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a28764e30"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a28763020"/>
        <function-ref name="configure" scoped="" ref="0x7f1a287635b0"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a28763740"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a287638d0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a28763a60"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a28763bf0"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a28763d80"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a28762020"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a287621b0"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a28762340"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a287624d0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a28762660"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a287627f0"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a28762980"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28762b10"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a28762ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a28762e30"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a28761020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a287611b0"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a28761340"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a287614d0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a28761660"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a287617f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a286dd8b0" loc="94:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplMsp430UsciC.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a286dd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a286ddc30"/>
        <function-ref name="userId" scoped="" ref="0x7f1a286dddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1a28760310" loc="99:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciC.HplUsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a28760310"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28760690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a286dc1f0" loc="96:/home/hakan/github/pillforge/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplMsp430UsciC.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a286dc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a286dc590"/>
        <function-ref name="configure" scoped="" ref="0x7f1a286dc720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1a287608e0" loc="100:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciC.HplUsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a287608e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28760c60"/>
        <function-ref name="userId" scoped="" ref="0x7f1a28760df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1a2875f080" loc="101:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciP.nc">
      <component-ref qname="HplMsp430UsciC.HplUsciP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a2875f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a2875f400"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a2875f590"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a2875f720"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a2875f8b0"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a2875fa40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a2875fbd0"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a2875fd60"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a2875e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a2875e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a2875e340"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a2875e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a2875e660"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a2875e7f0"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a2875ea80"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a2875ec10"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a2875eda0"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a2875d020"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a2875d1b0"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a2875d340"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a2875d4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a2875d660"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a2875d7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a2875d980"/>
        <function-ref name="set" scoped="" ref="0x7f1a2875db10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a2875dca0"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a2875c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1a27937b40" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a27937b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27936970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a27935340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a27936e30"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a27935800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1a27933020" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1a27933020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27933e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a27932800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a27932340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a27932cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1a279c47e0" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1a279c47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b0270"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1a290b05e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1a279b7620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1a279b7ce0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a279b7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b0270"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1a290b05e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a279b5b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a279b4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a279b4090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a279b4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a28167a60" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a28167a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a28167e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a28165020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a28168570" loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a28168570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28168910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usci" ref="0x7f1a28170450" loc="65:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a28170450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a281707d0"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a28170960"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a28170af0"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a28170c80"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a28170e10"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a2816f020"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a2816f1b0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a2816f340"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a2816f4d0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a2816f660"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a2816f7f0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a2816f980"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a2816fb10"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a2816fda0"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a2816e020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a2816e1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a2816e340"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a2816e4d0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a2816e660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a2816e7f0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a2816e980"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a2816eb10"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a2816eca0"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a2816ee30"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a2816d020"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a2816d3b0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a2816d540"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a2816d6d0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a2816d860"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a2816d9f0"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a2816db80"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a2816dd10"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a2816c020"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a2816c1b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a2816c340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a2816c4d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a2816c660"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a2816c7f0"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a2816c980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a2816cb10"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a2816cca0"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a2816ce30"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a2816b020"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a2816b1b0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a2816b340"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a2816b4d0"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a2816b660"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a2816b7f0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a2816b980"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2816a020"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a2816a1b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a2816a340"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a2816a4d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a2816a660"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a2816a7f0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a2816a980"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a2816ab10"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a2816aca0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a2816ae30"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a28169020"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a281691b0"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a28169340"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a281694d0"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a28169660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a281697f0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a28169980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a28169b10"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a28169ca0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a28169e30"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a28168020"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a281681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a28165270" loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a28165270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a281655f0"/>
        <function-ref name="requested" scoped="" ref="0x7f1a28165780"/>
        <function-ref name="granted" scoped="" ref="0x7f1a28165910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28165aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a28165c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a28168c90" loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a28168c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a281670a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a28167230"/>
        <function-ref name="request" scoped="" ref="0x7f1a281673c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a28167550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a281676e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a28165e80" loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a28165e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a28164220"/>
        <function-ref name="userId" scoped="" ref="0x7f1a281643b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a28164da0" loc="74:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a28164da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a28163180"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28163310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1a281646a0" loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a281646a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28164a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a27d36880" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a27d36880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27d36c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27d36d90"/>
        <function-ref name="start" scoped="" ref="0x7f1a27d21020"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1a27ef4a10" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1a27ef4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a27ef4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a27f2aa90" loc="85:/home/hakan/github/pillforge/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="SendResourceC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a27f2aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a27f2ae30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a27f29020"/>
        <function-ref name="request" scoped="" ref="0x7f1a27f291b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a27f29340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a27f294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1a28df5420" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1a28df5420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1a28df57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1a28df76c0" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1a28df76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28df7a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28df7bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28df7d80"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28df6020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28df61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1a28df6c90" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1a28df6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28df50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f1a27e1dc40" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27e1dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f1a27e1c020"/>
        <function-ref name="address" scoped="" ref="0x7f1a27e1c1b0"/>
        <function-ref name="destination" scoped="" ref="0x7f1a27e1c340"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a27e1c4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a27e1c660"/>
        <function-ref name="pan" scoped="" ref="0x7f1a27e1c7f0"/>
        <function-ref name="setPan" scoped="" ref="0x7f1a27e1c980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27e1cb10"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27e1cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1a27f23ac0" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1a27f23ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27f23e40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27ef5020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a27ef51b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27ef5340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27ef54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1a27d1f270" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a27d1f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1a27d1f5f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1a27d1f780"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1a27d1f910"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1a27d1faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1a28df88b0" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1a28df88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28df8c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28df8dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a28df7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28df71b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28df7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a28df6530" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a28df6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28df68d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f1a27b7fad0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a27b7fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27b7c0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27b7c800"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27b7d970"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1a27c34600" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27c34600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1a27c34980"/>
        <function-ref name="noAck" scoped="" ref="0x7f1a27c34b10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1a27c34ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f1a27ef5720" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f1a27ef5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27ef5aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1a27ef5c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27ef5dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27ef4020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27ef41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f1a28df5b80" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f1a28df5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28df3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1a27d40a10" loc="79:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1a27d40a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1a27d40d90"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1a27d3f020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1a27d3f1b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1a27d3f340"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1a27d3f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f1a27cacd90" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioChannel" scoped="" ref="0x7f1a27cacd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f1a27cab180"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27cab310"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27cab4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1a28df9280" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1a28df9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28df9600"/>
        <function-ref name="source" scoped="" ref="0x7f1a28df9790"/>
        <function-ref name="address" scoped="" ref="0x7f1a28df9920"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28df9ab0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28df9c40"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28df9dd0"/>
        <function-ref name="type" scoped="" ref="0x7f1a28df8020"/>
        <function-ref name="setType" scoped="" ref="0x7f1a28df81b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a28df8340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28df84d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1a28df8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1a27b82c90" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a27b82c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27b80210"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27b80940"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27b81ac0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b7f090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f1a27ef4440" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1a27ef4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27ef47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f1a28df33e0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SnoopDefault" scoped="" ref="0x7f1a28df33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28df3780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f1a27e20b20" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27e20b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f1a27e1f020"/>
        <function-ref name="getDSN" scoped="" ref="0x7f1a27e1f1b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f1a27e1f340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f1a27e1f4d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f1a27e1f660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f1a27e1f7f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f1a27e1f980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f1a27e1fb10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f1a27e1fca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f1a27e1fe30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f1a27e1e020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f1a27e1e1b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f1a27e1e340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a27e1e5d0"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27e1e760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f1a27e1e8f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f1a27e1ea80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f1a27e1ec10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f1a27e1eda0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27e1d020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a27e1d1b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f1a27e1d340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a27e1d4d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f1a27e1d660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f1a27e1d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f1a28eb6210" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28eb6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28eb65b0"/>
        <function-ref name="wait" scoped="" ref="0x7f1a28eb6740"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28eb68d0"/>
        <function-ref name="isFree" scoped="" ref="0x7f1a28eb6a60"/>
        <function-ref name="getNow" scoped="" ref="0x7f1a28eb6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1a28eaa2c0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a28eaa2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f1a293dbb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f1a293dbb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="tradio_size" ref="0x7f1a290b0dd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a28ea8b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28ea9ae0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a28ea84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a28ea8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a28ea6020"/>
        <function-ref name="start" scoped="" ref="0x7f1a28ea9110"/>
        <function-ref name="stop" scoped="" ref="0x7f1a28ea9620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a28df18c0" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a28df18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1a28df1c40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f1a28df1dd0"/>
        <function-ref name="source" scoped="" ref="0x7f1a28df0020"/>
        <function-ref name="destination" scoped="" ref="0x7f1a28df01b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1a28df0340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1a28df04d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1a28df0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a28df28f0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a28df28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28df2c70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28df2e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28df1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1a28de9550" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1a28de9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28de98d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28de9a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28de9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a28df12b0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a28df12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a28df1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f1a27eb4770" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TinyosReceive" scoped="" ref="0x7f1a27eb4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27eb4af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a28df3a70" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a28df3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a28df3df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a28df2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a28df21b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a28df2340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a28df24d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a28df2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f1a27eb4d80" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TinyosPacket" scoped="" ref="0x7f1a27eb4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27eb2180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27eb2310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27eb24a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27eb2630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27eb27c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27eb2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1a28dda910" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a28dda910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a28ddac90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a28ddae20"/>
        <function-ref name="request" scoped="" ref="0x7f1a28dd9020"/>
        <function-ref name="granted" scoped="" ref="0x7f1a28dd91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a28dd9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a28dda020" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a28dda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a28dda3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28dda530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28dda6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f1a27eb5e00" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TinyosSend" scoped="" ref="0x7f1a27eb5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27eb41c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27eb4350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27eb44e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f1a27ef3080" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f1a27ef3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f1a27ef3400"/>
        <function-ref name="getDSN" scoped="" ref="0x7f1a27ef3590"/>
        <function-ref name="setFCF" scoped="" ref="0x7f1a27ef3720"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f1a27ef38b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f1a27ef3a40"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f1a27ef3bd0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f1a27ef3d60"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f1a27ef2020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f1a27ef21b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f1a27ef2340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f1a27ef24d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f1a27ef2660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f1a27ef27f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a27ef2a80"/>
        <function-ref name="localPan" scoped="" ref="0x7f1a27ef2c10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f1a27ef2da0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f1a27ef1020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f1a27ef11b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f1a27ef1340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1a27ef14d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a27ef1660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f1a27ef17f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a27ef1980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f1a27ef1b10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f1a27ef1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27eef120" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27eef120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27eef4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27eef630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27eef7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f1a27eb60a0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f1a27eb60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27eb6420"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27eb65b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27eb6740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27eefa50" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27eefa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27eefdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f1a27eb69d0" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1a27eb69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27eb6d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f1a27ef02e0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27ef02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27ef0660"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27ef07f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27ef0980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27ef0b10"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27ef0ca0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27ef0e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f1a27eb5020" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f1a27eb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27eb53a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27eb5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27eb56c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27eb5850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27eb59e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27eb5b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27eb2c40" loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27eb2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27eb1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27eb11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27eb1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27db1a40" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27db1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27db1dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27daf020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27daf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27eb15d0" loc="70:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27eb15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27eb1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a27d40440" loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a27d40440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d407c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27eb1be0" loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27eb1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27eb0020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27eb01b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27eb0340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27eb04d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27eb0660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27eb07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27e1b020" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27e1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27e1b3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27e1b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27e1b6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27e1b850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27e1b9e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27e1bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27e1be60" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27e1be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27e1a210"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27e1a3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27e1a530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27e1a6c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27e1a850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27e1a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27d3f720" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27d3f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d3faa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d3fc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d3fdc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d3d020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d3d1b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d3d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27daed70" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27daed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f1a27dad180"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1a27dad310"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f1a27dad4a0"/>
        <function-ref name="getSender" scoped="" ref="0x7f1a27dad630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27dafc00" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27dafc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27dae020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27dae1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27dae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27d419c0" loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27d419c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d41d40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d40020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d401b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f1a27d3b400" loc="88:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1a27d3b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1a27d3b780"/>
        <function-ref name="noAck" scoped="" ref="0x7f1a27d3b910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1a27d3baa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27d3d630" loc="85:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27d3d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d3d9b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d3db40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d3dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27d21440" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27d21440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d217c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d21950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d21ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27d3c020" loc="86:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27d3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d3c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a27d21d70" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a27d21d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d20180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27d3c630" loc="87:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27d3c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d3c9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d3cb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d3ccd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d3ce60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d3b020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27d203d0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27d203d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d20750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d208e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d20a70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d20c00"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d20d90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d1f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1a27d1fd90" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1a27d1fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27d1e180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27d1e310"/>
        <function-ref name="start" scoped="" ref="0x7f1a27d1e4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27d1e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1a27cad3a0" loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1a27cad3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1a27cad720"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1a27cad8b0"/>
        <function-ref name="start" scoped="" ref="0x7f1a27cada40"/>
        <function-ref name="stop" scoped="" ref="0x7f1a27cadbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27d1e8c0" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27d1e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27d1ec40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27d1edd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27d1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1a27cade60" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1a27cade60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27cac210"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27cac3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27cac530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27d1d2b0" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27d1d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27d1d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1a27cac7c0" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1a27cac7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27cacb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27d1d8c0" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27d1d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27d1dc40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27d1ddd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27d1c020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27d1c1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27d1c340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27d1c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27b7b7e0" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b7b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b7bb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b7bcf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b7be80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b7a030"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b7a1c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b7a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f1a27caa590" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27caa590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27caa910"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27caaaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27caac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1a27c8fa40" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27c8fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27c8fdc0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27c8e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27c8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f1a27caae80" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27caae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27ca8220"/>
        <function-ref name="header" scoped="" ref="0x7f1a27ca83b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27daf400" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27daf400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27daf780"/>
        <function-ref name="header" scoped="" ref="0x7f1a27daf910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f1a27cab750" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioState" scoped="" ref="0x7f1a27cab750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27cabad0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27cabc60"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27cabdf0"/>
        <function-ref name="done" scoped="" ref="0x7f1a27caa020"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27caa1b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27caa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f1a27b4cc20" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioState" scoped="" ref="0x7f1a27b4cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27b4b020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27b4b1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27b4b340"/>
        <function-ref name="done" scoped="" ref="0x7f1a27b4b4d0"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27b4b660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27b4b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27dae5d0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27dae5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27dae950"/>
        <function-ref name="header" scoped="" ref="0x7f1a27daeae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27c8e400" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27c8e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27c8e780"/>
        <function-ref name="header" scoped="" ref="0x7f1a27c8e910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27c86b40" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27c86b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f1a27c85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27c88440" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27c88440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27c887c0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27c88950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27c88ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1a27c35590" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27c35590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27c35910"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27c35aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27c35c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27c88d70" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27c88d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27c87180"/>
        <function-ref name="header" scoped="" ref="0x7f1a27c87310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27c35e80" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27c35e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27c34220"/>
        <function-ref name="header" scoped="" ref="0x7f1a27c343b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f1a27c30e60" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f1a27c30e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27c2f210"/>
        <function-ref name="get" scoped="" ref="0x7f1a27c2f3a0"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27c2f530"/>
        <function-ref name="set" scoped="" ref="0x7f1a27c2f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f1a27b729b0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketFlag" scoped="" ref="0x7f1a27b729b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b72d50"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b71020"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27b711b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b71340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f1a27c310e0" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a27c310e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a27c31460"/>
        <function-ref name="wait" scoped="" ref="0x7f1a27c315f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a27c31780"/>
        <function-ref name="isFree" scoped="" ref="0x7f1a27c31910"/>
        <function-ref name="getNow" scoped="" ref="0x7f1a27c31aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27c31d30" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27c31d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f1a27c300e0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f1a27c30270"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f1a27c30400"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f1a27c30590"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f1a27c30720"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f1a27c308b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f1a27c30a40"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f1a27c30bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27c33020" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27c33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27c333a0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27c33530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27c336c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1a27be3a40" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27be3a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27be3dc0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27be2020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27be21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27c33950" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27c33950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27c33cd0"/>
        <function-ref name="header" scoped="" ref="0x7f1a27c33e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27be2400" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27be2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27be2780"/>
        <function-ref name="header" scoped="" ref="0x7f1a27be2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DiagMsg" ref="0x7f1a27c2f910" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DiagMsg" scoped="" ref="0x7f1a27c2f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="DiagMsg"/>
      </instance>
      <interface-functions>
        <function-ref name="int32s" scoped="" ref="0x7f1a27c2fc90"/>
        <function-ref name="str" scoped="" ref="0x7f1a27c2fe20"/>
        <function-ref name="send" scoped="" ref="0x7f1a27c2e020"/>
        <function-ref name="int16" scoped="" ref="0x7f1a27c2e1b0"/>
        <function-ref name="hex32" scoped="" ref="0x7f1a27c2e340"/>
        <function-ref name="int32" scoped="" ref="0x7f1a27c2e4d0"/>
        <function-ref name="chr" scoped="" ref="0x7f1a27c2e660"/>
        <function-ref name="uint32s" scoped="" ref="0x7f1a27c2e7f0"/>
        <function-ref name="real" scoped="" ref="0x7f1a27c2e980"/>
        <function-ref name="hex8" scoped="" ref="0x7f1a27c2eb10"/>
        <function-ref name="uint16" scoped="" ref="0x7f1a27c2eca0"/>
        <function-ref name="uint64s" scoped="" ref="0x7f1a27c2ee30"/>
        <function-ref name="uint32" scoped="" ref="0x7f1a27c2d020"/>
        <function-ref name="uint8" scoped="" ref="0x7f1a27c2d2b0"/>
        <function-ref name="hex8s" scoped="" ref="0x7f1a27c2d440"/>
        <function-ref name="record" scoped="" ref="0x7f1a27c2d5d0"/>
        <function-ref name="uint8s" scoped="" ref="0x7f1a27c2d760"/>
        <function-ref name="reals" scoped="" ref="0x7f1a27c2d8f0"/>
        <function-ref name="int64" scoped="" ref="0x7f1a27c2da80"/>
        <function-ref name="uint16s" scoped="" ref="0x7f1a27c2dc10"/>
        <function-ref name="int64s" scoped="" ref="0x7f1a27c2dda0"/>
        <function-ref name="hex16" scoped="" ref="0x7f1a27c2c020"/>
        <function-ref name="uint64" scoped="" ref="0x7f1a27c2c1b0"/>
        <function-ref name="int16s" scoped="" ref="0x7f1a27c2c340"/>
        <function-ref name="int8" scoped="" ref="0x7f1a27c2c4d0"/>
        <function-ref name="hex16s" scoped="" ref="0x7f1a27c2c860"/>
        <function-ref name="hex32s" scoped="" ref="0x7f1a27c2c9f0"/>
        <function-ref name="chrs" scoped="" ref="0x7f1a27c2cb80"/>
        <function-ref name="int8s" scoped="" ref="0x7f1a27c2cd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27bdab40" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27bdab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f1a27bd9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27bdc440" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27bdc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27bdc7c0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27bdc950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27bdcae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f1a27b4ba40" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f1a27b4ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27b4bdc0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27b4a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27b4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27bdcd70" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27bdcd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27bdb180"/>
        <function-ref name="header" scoped="" ref="0x7f1a27bdb310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f1a27b4a400" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f1a27b4a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27b4a780"/>
        <function-ref name="header" scoped="" ref="0x7f1a27b4a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f1a27bdb5a0" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f1a27bdb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f1a27bdb920"/>
        <function-ref name="request" scoped="" ref="0x7f1a27bdbab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f1a27b7a760" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27b7a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27b783d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27b78800" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27b78800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b78b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b78d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b77020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b771b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b77340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27b71590" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b71590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b71910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b71aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b71c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b71dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b51020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b511b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f1a27b77760" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f1a27b77760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b77ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b77c70"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27b77e00"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b76020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27b514a0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27b514a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b51820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b519b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b51b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b51cd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b51e60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b50020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1a27b42b40" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1a27b42b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f1a27b41020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1a27b44440" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1a27b44440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27b447c0"/>
        <function-ref name="ready" scoped="" ref="0x7f1a27b44950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27b44ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1a27b44d70" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1a27b44d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1a27b43180"/>
        <function-ref name="header" scoped="" ref="0x7f1a27b43310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f1a27b46410" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubState" scoped="" ref="0x7f1a27b46410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f1a27b46890"/>
        <function-ref name="turnOn" scoped="" ref="0x7f1a27b46a20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1a27b46bb0"/>
        <function-ref name="done" scoped="" ref="0x7f1a27b46d40"/>
        <function-ref name="standby" scoped="" ref="0x7f1a27b44020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1a27b441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBlock" ref="0x7f1a27983020" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a27983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a279833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1a27985840" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1a27985840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a27985bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a27985d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1a279835f0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a279835f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a27983970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a27986470" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a27986470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a279867f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a27986980"/>
        <function-ref name="request" scoped="" ref="0x7f1a27986b10"/>
        <function-ref name="granted" scoped="" ref="0x7f1a27986ca0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a27986e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a27982440" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiB0C.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a27982440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a279827c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1a2813f8f0" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a2813f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a2813fc90"/>
        <function-ref name="configure" scoped="" ref="0x7f1a2813fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBlock" ref="0x7f1a28140480" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiBlock" scoped="" ref="0x7f1a28140480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiBlock"/>
      </instance>
      <interface-functions>
        <function-ref name="transfer" scoped="" ref="0x7f1a28140800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1a28141ce0" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1a28141ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1a281400a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1a28140230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1a28140a50" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1a28140a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1a28140dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UsciError" ref="0x7f1a2813f060" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciError" scoped="" ref="0x7f1a2813f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciError"/>
      </instance>
      <interface-functions>
        <function-ref name="condition" scoped="" ref="0x7f1a2813f3e0"/>
        <function-ref name="timeout" scoped="" ref="0x7f1a2813f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usci" ref="0x7f1a2813d140" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a2813d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a2813d4c0"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a2813d650"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a2813d7e0"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a2813d970"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a2813db00"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a2813dc90"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a2813de20"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a2813c020"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a2813c1b0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a2813c340"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a2813c4d0"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a2813c660"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a2813c7f0"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a2813ca80"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a2813cc10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a2813cda0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a2813b020"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a2813b1b0"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a2813b340"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a2813b4d0"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a2813b660"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a2813b7f0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a2813b980"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a2813bb10"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a2813bca0"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a2813a220"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a2813a3b0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a2813a540"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a2813a6d0"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a2813a860"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a2813a9f0"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a2813ab80"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a2813ad10"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a28139020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a281391b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a28139340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a281394d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a28139660"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a281397f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a28139980"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a28139b10"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a28139ca0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a28139e30"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a28138020"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a281381b0"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a28138340"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a281384d0"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a28138660"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a281387f0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a28138d80"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a28137020"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a281371b0"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a28137340"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a281374d0"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a28137660"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a281377f0"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a28137980"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a28137b10"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a28137ca0"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a28137e30"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a28136020"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a281361b0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a28136340"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a281364d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a28136660"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a281367f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a28136980"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a28136b10"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a28136ca0"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a28136e30"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a28135020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupts" ref="0x7f1a281352b0" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a281352b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a28135630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1a2812c410" loc="64:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a2812c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a2812c790"/>
        <function-ref name="userId" scoped="" ref="0x7f1a2812c920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UsciConfigure" ref="0x7f1a2812de00" loc="63:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UsciConfigure" scoped="" ref="0x7f1a2812de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1a2812c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1a281358c0" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1a281358c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28135c40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28135dd0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28134020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a281341b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28134340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a281344d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28134660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a281347f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28134980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28134b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28134ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28134e30"/>
        <function-ref name="set" scoped="" ref="0x7f1a28133020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a281332b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a28133440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a281335d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28133760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1a281339f0" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1a281339f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28133d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28132020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a281321b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28132340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a281324d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a28132660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a281327f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28132980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28132b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28132ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a28132e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a28131020"/>
        <function-ref name="set" scoped="" ref="0x7f1a281311b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a28131440"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a281315d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a28131760"/>
        <function-ref name="clr" scoped="" ref="0x7f1a281318f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLK" ref="0x7f1a28131b80" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLK" scoped="" ref="0x7f1a28131b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28130020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a281301b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28130340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a281304d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28130660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a281307f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a28130980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28130b10"/>
        <function-ref name="get" scoped="" ref="0x7f1a28130ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a28130e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a2812d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a2812d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a2812d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a2812d5d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a2812d760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a2812d8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a2812da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1a2780dcf0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CounterToLocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1a2780dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2780c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1a2780b020" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CounterToLocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a2780b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2780be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a27809800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a27809340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a27809cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1a27d2dae0" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="LowPowerListeningDummyC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1a27d2dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1a27d2de60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1a27d2c020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1a27d2c1b0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1a27d2c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f1a27b8c3b0" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f1a27b8c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b8c730"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b8c8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b8ca50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b8cbe0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b8cd70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f1a27b906f0" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f1a27b906f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27b8fce0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27b8d460"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27b8f5b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b8db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1a27bc4830" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1a27bc4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1a27b92dd0"/>
        <function-ref name="clear" scoped="" ref="0x7f1a27b91540"/>
        <function-ref name="isValid" scoped="" ref="0x7f1a27b926a0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b91c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1a27b872b0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x7f1a27b872b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b87630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1a27b877c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1a27b87950"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1a27b87ae0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f1a27b87c70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f1a27b87e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f1a27b8a020" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f1a27b8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27b8ac50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f1a27b891e0" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1a27b891e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a27b89e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f1a27b8b310" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f1a27b8b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a27b8b690"/>
        <function-ref name="get" scoped="" ref="0x7f1a27b8b820"/>
        <function-ref name="setValue" scoped="" ref="0x7f1a27b8b9b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a27b8bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a286ec530" loc="55:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a286ec530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a286ec8d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a286eca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a286eccb0" loc="56:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a286eccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a286eb0a0"/>
        <function-ref name="requested" scoped="" ref="0x7f1a286eb230"/>
        <function-ref name="granted" scoped="" ref="0x7f1a286eb3c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a286eb550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a286eb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a286ed720" loc="54:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a286ed720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a286edac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a286edc50"/>
        <function-ref name="request" scoped="" ref="0x7f1a286edde0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a286ec020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a286ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a286eb930" loc="57:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a286eb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a286ebcb0"/>
        <function-ref name="userId" scoped="" ref="0x7f1a286ebe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a2874de60" loc="44:/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a2874de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a2874c210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a286ea270" loc="60:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a286ea270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a286ea610"/>
        <function-ref name="configure" scoped="" ref="0x7f1a286ea7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1a286eaa30" loc="61:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1a286eaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1a286eadb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1a286e9020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1a286e91b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1a286e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1a2874c4a0" loc="45:/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1a2874c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1a2874c820"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1a2874c9b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1a2874cb40"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1a2874ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a283b1a20" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz16C.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a283b1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1a290b1df0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a283ad2a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a283af2a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a283afc20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a283af760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a283ad760"/>
        <function-ref name="start" scoped="" ref="0x7f1a283b0890"/>
        <function-ref name="stop" scoped="" ref="0x7f1a283b0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a283b1190" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz16C.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a283b1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a283b1510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1a283adb90" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz16C.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a283adb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a283ac020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a283ac1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a283ac340"/>
        <function-ref name="get" scoped="" ref="0x7f1a283ac4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a283ac660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a283ac7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a283ac980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a283acb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a283acca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a283ace30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a283ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1a283d7830" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Alarm32khz16C.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a283d7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a283d7bb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a283d7d40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a283d6020"/>
        <function-ref name="get" scoped="" ref="0x7f1a283d61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a283d6340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a283d64d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a283d6660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a283d67f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a283d6980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a283d6b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a283d6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1a283ab2b0" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz16C.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a283ab2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a283ab630"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a283ab7c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a283ab950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a283abae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a283abc70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a283abe00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a283aa020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a283aa1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a283aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1a283d5020" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Alarm32khz16C.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1a283d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1a283d53a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1a283d5530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a283d56c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1a283d5850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1a283d59e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a283d5b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1a283d5d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1a283d4020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1a283d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1a283aa5d0" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Alarm32khz16C.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a283aa5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a283aa950"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a283aaae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a283aac70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a283aae00"/>
        <function-ref name="fired" scoped="" ref="0x7f1a283a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1a283d4440" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Alarm32khz16C.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1a283d4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1a283d47c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1a283d4950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1a283d4ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1a283d4c70"/>
        <function-ref name="fired" scoped="" ref="0x7f1a283d4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1a279acb80" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a279acb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b0270"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1a290b05e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a279ab9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a279aa360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a279abe70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a279aa820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1a279aac50" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1a279aac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1a279a8020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1a279a81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1a279a8340"/>
        <function-ref name="get" scoped="" ref="0x7f1a279a84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1a279a8660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a279a87f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1a279a8980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a279a8b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a279a8ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1a279a8e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1a279a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a280c2020" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a280c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a280c23c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a280c2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1a280c4a20" loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1a280c4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a280c4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usci" ref="0x7f1a280cd7a0" loc="65:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usci" scoped="" ref="0x7f1a280cd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usci"/>
      </instance>
      <interface-functions>
        <function-ref name="getIv" scoped="" ref="0x7f1a280cdb20"/>
        <function-ref name="setAbctl" scoped="" ref="0x7f1a280cdcb0"/>
        <function-ref name="getCtl0" scoped="" ref="0x7f1a280cde40"/>
        <function-ref name="getRxbuf" scoped="" ref="0x7f1a280cb020"/>
        <function-ref name="setTxbuf" scoped="" ref="0x7f1a280cb1b0"/>
        <function-ref name="getStat" scoped="" ref="0x7f1a280cb340"/>
        <function-ref name="setIrctl" scoped="" ref="0x7f1a280cb4d0"/>
        <function-ref name="setIrtctl" scoped="" ref="0x7f1a280cb660"/>
        <function-ref name="getIrrctl" scoped="" ref="0x7f1a280cb7f0"/>
        <function-ref name="setI2Coa" scoped="" ref="0x7f1a280cb980"/>
        <function-ref name="setIctl" scoped="" ref="0x7f1a280cbb10"/>
        <function-ref name="getIrctl" scoped="" ref="0x7f1a280cbca0"/>
        <function-ref name="getI2Coa" scoped="" ref="0x7f1a280cbe30"/>
        <function-ref name="andCtl0" scoped="" ref="0x7f1a280ca120"/>
        <function-ref name="setI2Csa" scoped="" ref="0x7f1a280ca2b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1a280ca440"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1a280ca5d0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1a280ca760"/>
        <function-ref name="getI2Csa" scoped="" ref="0x7f1a280ca8f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1a280caa80"/>
        <function-ref name="getIrtctl" scoped="" ref="0x7f1a280cac10"/>
        <function-ref name="getTxStart" scoped="" ref="0x7f1a280cada0"/>
        <function-ref name="orCtl1" scoped="" ref="0x7f1a280c9020"/>
        <function-ref name="setBrw" scoped="" ref="0x7f1a280c91b0"/>
        <function-ref name="orCtlw0" scoped="" ref="0x7f1a280c9340"/>
        <function-ref name="andCtlw0" scoped="" ref="0x7f1a280c96d0"/>
        <function-ref name="getMctl" scoped="" ref="0x7f1a280c9860"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1a280c99f0"/>
        <function-ref name="setTxStop" scoped="" ref="0x7f1a280c9b80"/>
        <function-ref name="setIfg" scoped="" ref="0x7f1a280c9d10"/>
        <function-ref name="clrNackIntr" scoped="" ref="0x7f1a280c8020"/>
        <function-ref name="getCtlw0" scoped="" ref="0x7f1a280c81b0"/>
        <function-ref name="setBr0" scoped="" ref="0x7f1a280c8340"/>
        <function-ref name="getTxbuf" scoped="" ref="0x7f1a280c84d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1a280c8660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1a280c87f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1a280c8980"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1a280c8b10"/>
        <function-ref name="getTxStop" scoped="" ref="0x7f1a280c8ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1a280c8e30"/>
        <function-ref name="getBrw" scoped="" ref="0x7f1a280c7020"/>
        <function-ref name="getIe" scoped="" ref="0x7f1a280c71b0"/>
        <function-ref name="getAbctl" scoped="" ref="0x7f1a280c7340"/>
        <function-ref name="leaveResetMode_" scoped="" ref="0x7f1a280c74d0"/>
        <function-ref name="andCtl1" scoped="" ref="0x7f1a280c7660"/>
        <function-ref name="getIctl" scoped="" ref="0x7f1a280c77f0"/>
        <function-ref name="getIfg" scoped="" ref="0x7f1a280c7980"/>
        <function-ref name="getBr0" scoped="" ref="0x7f1a280c7b10"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1a280c7ca0"/>
        <function-ref name="configure" scoped="" ref="0x7f1a280c6420"/>
        <function-ref name="isNackIntrPending" scoped="" ref="0x7f1a280c65b0"/>
        <function-ref name="setStat" scoped="" ref="0x7f1a280c6740"/>
        <function-ref name="setTxStart" scoped="" ref="0x7f1a280c68d0"/>
        <function-ref name="setIe" scoped="" ref="0x7f1a280c6a60"/>
        <function-ref name="setRxbuf" scoped="" ref="0x7f1a280c6bf0"/>
        <function-ref name="setBr1" scoped="" ref="0x7f1a280c6d80"/>
        <function-ref name="currentMode" scoped="" ref="0x7f1a280c5020"/>
        <function-ref name="isBusBusy" scoped="" ref="0x7f1a280c51b0"/>
        <function-ref name="enterResetMode_" scoped="" ref="0x7f1a280c5340"/>
        <function-ref name="setCtlw0" scoped="" ref="0x7f1a280c54d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1a280c5660"/>
        <function-ref name="getModuleIdentifier" scoped="" ref="0x7f1a280c57f0"/>
        <function-ref name="setTxNack" scoped="" ref="0x7f1a280c5980"/>
        <function-ref name="setMctl" scoped="" ref="0x7f1a280c5b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1a280c5ca0"/>
        <function-ref name="orCtl0" scoped="" ref="0x7f1a280c5e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1a280c4020"/>
        <function-ref name="getBr1" scoped="" ref="0x7f1a280c41b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1a280c4340"/>
        <function-ref name="setIrrctl" scoped="" ref="0x7f1a280c44d0"/>
        <function-ref name="getTxNack" scoped="" ref="0x7f1a280c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1a280c27a0" loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1a280c27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a280c2b20"/>
        <function-ref name="requested" scoped="" ref="0x7f1a280c2cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f1a280c2e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a280c1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a280c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a280c3190" loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a280c3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a280c3530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a280c36c0"/>
        <function-ref name="request" scoped="" ref="0x7f1a280c3850"/>
        <function-ref name="granted" scoped="" ref="0x7f1a280c39e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a280c3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a280c1400" loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a280c1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a280c1780"/>
        <function-ref name="userId" scoped="" ref="0x7f1a280c1910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a280c03a0" loc="74:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a280c03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a280c0740"/>
        <function-ref name="configure" scoped="" ref="0x7f1a280c08d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1a280c1c00" loc="73:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciC.nc">
      <component-ref qname="UsciC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1a280c1c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="interrupted" scoped="" ref="0x7f1a280c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a282a3150" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a282a3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a2829f700"/>
        <function-ref name="fired" scoped="" ref="0x7f1a282a2c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a282a1a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a282a15b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a2829d090"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a2829fba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a282a1110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a282a3d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a2829f0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a282a22a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a282a2790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1a28295830" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1a28295830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a282944c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a2831f020" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a2831f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a2831f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1a2829d640" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f1a2829d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a2829ac40"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2829b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a2829a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a2829bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a28298590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a28298110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a2829b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a2829c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a2829a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a2829c860"/>
        <function-ref name="stop" scoped="" ref="0x7f1a2829cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1a282f32f0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1a282f32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a282ef870"/>
        <function-ref name="fired" scoped="" ref="0x7f1a282f1e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1a282f0c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1a282f0780"/>
        <function-ref name="getdt" scoped="" ref="0x7f1a282ed1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1a282efcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a282f0300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1a282f1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1a282ef260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1a282f14f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a282f19c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1a282ed850" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a282ed850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a282ea090"/>
        <function-ref name="fired" scoped="" ref="0x7f1a282eb090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a282eba10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a282eb550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a282ea550"/>
        <function-ref name="start" scoped="" ref="0x7f1a282ec6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a282ecbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1a2831f870" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a2831f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a2831b090"/>
        <function-ref name="fired" scoped="" ref="0x7f1a2831c090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a2831ca10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a2831c550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a2831b550"/>
        <function-ref name="start" scoped="" ref="0x7f1a2831e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a2831ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1a28294b30" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1a28294b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b12d0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1a290b1640"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1a2828a970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1a28289340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1a2828ae30"/>
        <function-ref name="overflow" scoped="" ref="0x7f1a28289800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a28d40280" loc="47:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a28d40280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a28d40600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1a28d40850" loc="48:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1a28d40850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1a28d40bd0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1a28d40d60"/>
        <function-ref name="led5Toggle" scoped="" ref="0x7f1a28d3f020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1a28d3f1b0"/>
        <function-ref name="led3Off" scoped="" ref="0x7f1a28d3f340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1a28d3f4d0"/>
        <function-ref name="led7Toggle" scoped="" ref="0x7f1a28d3f660"/>
        <function-ref name="led6On" scoped="" ref="0x7f1a28d3f7f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1a28d3f980"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d3fb10"/>
        <function-ref name="led6Toggle" scoped="" ref="0x7f1a28d3fca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1a28d3fe30"/>
        <function-ref name="led3Toggle" scoped="" ref="0x7f1a28d3e020"/>
        <function-ref name="led3On" scoped="" ref="0x7f1a28d3e2b0"/>
        <function-ref name="led4Off" scoped="" ref="0x7f1a28d3e440"/>
        <function-ref name="led5On" scoped="" ref="0x7f1a28d3e5d0"/>
        <function-ref name="led6Off" scoped="" ref="0x7f1a28d3e760"/>
        <function-ref name="led4Toggle" scoped="" ref="0x7f1a28d3e8f0"/>
        <function-ref name="led7On" scoped="" ref="0x7f1a28d3ea80"/>
        <function-ref name="led5Off" scoped="" ref="0x7f1a28d3ec10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1a28d3eda0"/>
        <function-ref name="led4On" scoped="" ref="0x7f1a28d3d020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1a28d3d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d3d340"/>
        <function-ref name="led2On" scoped="" ref="0x7f1a28d3d4d0"/>
        <function-ref name="led7Off" scoped="" ref="0x7f1a28d3d860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a28900490" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a28900490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28900810"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a289009a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a28900b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28900cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28900e50"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a288ff020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a288ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288ff340"/>
        <function-ref name="get" scoped="" ref="0x7f1a288ff4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a288ff660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288ff7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a288ff980"/>
        <function-ref name="set" scoped="" ref="0x7f1a288ffb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a288ffda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a288fe020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a288fe1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288fe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1a28d3db50" loc="52:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1a28d3db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d3c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d3c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d3c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d3c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d3c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d3c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d3c980"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d3cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a28911330" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a28911330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a289116b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28911840"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a289119d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28911b60"/>
        <function-ref name="get" scoped="" ref="0x7f1a28911cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28911e80"/>
        <function-ref name="set" scoped="" ref="0x7f1a28900030"/>
        <function-ref name="clr" scoped="" ref="0x7f1a289001c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a288fbc50" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288fbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288fa020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288fa1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a288fa340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288fa4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288fa660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a288fa7f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a288fa980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288fab10"/>
        <function-ref name="get" scoped="" ref="0x7f1a288faca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a288fae30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288f9020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a288f91b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a288f9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a288f95d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a288f9760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a288f98f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288f9a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1a28d3cda0" loc="53:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1a28d3cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d3b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d3b310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d3b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d3b630"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d3b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d3b950"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d3bae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d3bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a288fc9e0" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288fc9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288fcd60"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288fb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288fb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288fb340"/>
        <function-ref name="get" scoped="" ref="0x7f1a288fb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288fb660"/>
        <function-ref name="set" scoped="" ref="0x7f1a288fb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288fb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a288f42f0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288f4670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288f4800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a288f4990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288f4b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288f4cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a288f4e40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a288f3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288f31b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a288f3340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a288f34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288f3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a288f37f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a288f3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a288f3c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a288f3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a288f2020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1a28d3a020" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1a28d3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d3a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d3a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d3a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d3a850"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d3a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d3ab70"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d3ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a288f6120" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288f6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288f64a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288f6630"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288f67c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288f6950"/>
        <function-ref name="get" scoped="" ref="0x7f1a288f6ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288f6c70"/>
        <function-ref name="set" scoped="" ref="0x7f1a288f6e00"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a288ef930" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led3Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288ef930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288efcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288efe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a288ee020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288ee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288ee340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a288ee4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a288ee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288ee7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1a288ee980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a288eeb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288eeca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a288eee30"/>
        <function-ref name="set" scoped="" ref="0x7f1a288ed020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a288ed2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a288ed440"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a288ed5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288ed760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x7f1a28d392b0" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led3" scoped="" ref="0x7f1a28d392b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d39630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d397c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d39950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d39ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d39c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d39e00"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d37020"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a288f0710" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led3Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288f0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288f0a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288f0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288f0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288ef020"/>
        <function-ref name="get" scoped="" ref="0x7f1a288ef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288ef340"/>
        <function-ref name="set" scoped="" ref="0x7f1a288ef4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288ef660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a288e9020" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led4Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288e93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288e9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a288e96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288e9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288e99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a288e9b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a288e9d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288e8020"/>
        <function-ref name="get" scoped="" ref="0x7f1a288e81b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a288e8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288e84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a288e8660"/>
        <function-ref name="set" scoped="" ref="0x7f1a288e87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a288e8a80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a288e8c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a288e8da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led4" ref="0x7f1a28d37440" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led4" scoped="" ref="0x7f1a28d37440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d377c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d37950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d37ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d37c70"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d37e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d36020"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d361b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d36340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a288ebd10" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led4Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288ebd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288ea0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288ea270"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288ea400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288ea590"/>
        <function-ref name="get" scoped="" ref="0x7f1a288ea720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288ea8b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a288eaa40"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288eabd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a288e47a0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led5Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288e47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288e4b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288e4cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a288e4e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288e3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288e31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a288e3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a288e34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288e3660"/>
        <function-ref name="get" scoped="" ref="0x7f1a288e37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a288e3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288e3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a288e3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1a288e3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a288e2120"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a288e22b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a288e2440"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288e25d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led5" ref="0x7f1a28d365d0" loc="57:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led5" scoped="" ref="0x7f1a28d365d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d36950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d36ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d36c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d36e00"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d35020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d351b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d35340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a288e5580" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led5Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288e5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288e5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288e5a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288e5c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288e5db0"/>
        <function-ref name="get" scoped="" ref="0x7f1a288e4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288e41b0"/>
        <function-ref name="set" scoped="" ref="0x7f1a288e4340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a288dfde0" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led6Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288dfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288dd180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288dd310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a288dd4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288dd630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288dd7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a288dd950"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a288ddae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288ddc70"/>
        <function-ref name="get" scoped="" ref="0x7f1a288dde00"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a288dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288dc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a288dc340"/>
        <function-ref name="set" scoped="" ref="0x7f1a288dc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a288dc760"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a288dc8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a288dca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288dcc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led6" ref="0x7f1a28d35760" loc="58:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led6" scoped="" ref="0x7f1a28d35760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d35ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d35c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d35e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d34020"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d34340"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d344d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d34660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a288e0b90" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led6Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288e0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288df020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288df1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288df340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288df4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a288df660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288df7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1a288df980"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288dfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1a288d8610" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led7Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1a288d8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288d8990"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288d8b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1a288d8cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288d8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288d7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1a288d71b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f1a288d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288d74d0"/>
        <function-ref name="get" scoped="" ref="0x7f1a288d7660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f1a288d77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1a288d7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1a288d7b10"/>
        <function-ref name="set" scoped="" ref="0x7f1a288d7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1a288d6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1a288d61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1a288d6340"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led7" ref="0x7f1a28d348f0" loc="59:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/PlatformLedsP.nc">
      <component-ref qname="PlatformLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led7" scoped="" ref="0x7f1a28d348f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a28d34c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a28d34e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a28d33020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a28d331b0"/>
        <function-ref name="get" scoped="" ref="0x7f1a28d33340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a28d334d0"/>
        <function-ref name="set" scoped="" ref="0x7f1a28d33660"/>
        <function-ref name="clr" scoped="" ref="0x7f1a28d337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1a288d9390" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="Led7Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1a288d9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1a288d9710"/>
        <function-ref name="isInput" scoped="" ref="0x7f1a288d98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1a288d9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1a288d9bc0"/>
        <function-ref name="get" scoped="" ref="0x7f1a288d9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1a288d8020"/>
        <function-ref name="set" scoped="" ref="0x7f1a288d81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1a288d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f1a28edcbc0" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAlarm" scoped="" ref="0x7f1a28edcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1a28edb020"/>
        <function-ref name="wait" scoped="" ref="0x7f1a28edb1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1a28edb340"/>
        <function-ref name="isFree" scoped="" ref="0x7f1a28edb4d0"/>
        <function-ref name="getNow" scoped="" ref="0x7f1a28edb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1a28edbb50" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1a28edbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1a290b1a80"/>
            <typename><typedef-ref name="TRadio" ref="0x7f1a290b09a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="tradio_size" ref="0x7f1a290b0dd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1a28ebb4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1a28ebc4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1a28ebce60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1a28ebc9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1a28ebb9a0"/>
        <function-ref name="start" scoped="" ref="0x7f1a28ebd9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1a28ebc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f1a28ebbd90" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Tasklet" scoped="" ref="0x7f1a28ebbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f1a28eb9180"/>
        <function-ref name="suspend" scoped="" ref="0x7f1a28eb9310"/>
        <function-ref name="resume" scoped="" ref="0x7f1a28eb94a0"/>
        <function-ref name="run" scoped="" ref="0x7f1a28eb9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1a27f30020" loc="52:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleFcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1a27f30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1a27f303c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1a27f30550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1a27f31150" loc="51:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleFcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1a27f31150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1a27f314f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1a27f31680"/>
        <function-ref name="request" scoped="" ref="0x7f1a27f31810"/>
        <function-ref name="granted" scoped="" ref="0x7f1a27f319a0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1a27f31b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1a27f307a0" loc="53:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleFcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1a27f307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1a27f30b20"/>
        <function-ref name="userId" scoped="" ref="0x7f1a27f30cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1a27f9b3f0" loc="44:/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="SimpleFcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1a27f9b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1a27f9b770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1a27f2f0d0" loc="56:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleFcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1a27f2f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1a27f2f470"/>
        <function-ref name="configure" scoped="" ref="0x7f1a27f2f600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1a27f2f890" loc="57:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleFcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1a27f2f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1a27f2fc10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1a27f2fda0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1a27f2e020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1a27f2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1a27f9ba00" loc="45:/home/hakan/github/pillforge/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="SimpleFcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1a27f9ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1a27f9bd80"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1a27f62020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1a27f621b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1a27f62340"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="ResourceRequested" loc="46:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f1a28dcf8e0" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1a28dce270" loc="61:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a27b00430" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a27b00430"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1a27b00670" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a27b00670"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f1a27aff2a0" loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a27b00670"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1a27aff020" loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a27b00670"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f1a27c9c6c0" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1a27c9c440" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f1a27c9fc30" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f1a2903d460" loc="113:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1a2903d1e0" loc="113:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f1a2903bab0" loc="138:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1a2903b830" loc="138:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1a2903e7b0" loc="104:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1a2903dcb0" loc="130:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/hakan/github/pillforge/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f1a28dc9a90" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1a28dc9270" loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1a285b0780" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f1a285aee50" loc="79:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f1a285aebd0" loc="79:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1a285ada20" loc="86:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1a285ad7a0" loc="86:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1a285ae420" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1a285afbc0" loc="63:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f1a285af2a0" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1a285af020" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f1a28f6a760" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1a285c4020" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f1a285c49a0" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1a285c4720" loc="41:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f1a285c23d0" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1a285c2150" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f1a285c2da0" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1a285c2b20" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1a285c14e0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1a2856ca00" loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a2900b860" loc="35:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a2900b860"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1a2900baa0" loc="35:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a2900baa0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f1a29006900" loc="63:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a2900baa0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29006680" loc="63:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f1a29004ac0" loc="70:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29004840" loc="70:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f1a290086c0" loc="49:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29008440" loc="49:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1a29003e10" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a2900baa0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29003820" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1a29003b80" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a2900baa0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f1a27af4940" loc="54:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1a27af3b00" loc="66:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1a27af3350" loc="61:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1a27af30d0" loc="61:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f1a27af40e0" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f1a28f7c9b0" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f7c730" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f1a28f6c2a0" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f6c020" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f1a28f6ba30" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f6b7b0" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1a28f6fa50" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f6f7d0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1a28f702e0" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f70060" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1a28f6d790" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f6d1b0" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1a28f6d500" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1a28f6f050" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f70a40" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1a28f70d90" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1a28f6b020" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f6c9d0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1a28f6cd20" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1a288a2390" loc="50:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1a288a2110" loc="50:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f1a288a2bd0" loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1a288a1ac0" loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1a288a14d0" loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f1a288a1830" loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f1a2889e920" loc="79:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/hakan/github/pillforge/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/hakan/github/pillforge/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1a28dcae10" loc="60:/home/hakan/github/pillforge/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/hakan/github/pillforge/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/hakan/github/pillforge/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/hakan/github/pillforge/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f1a2902b120" loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/hakan/github/pillforge/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1a29030ab0" loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1a29030e30" loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsciInterrupts" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterrupts.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterrupts.nc">
        <short>&#10; Interrupt events for an MSP430 USCI module.</short>
        <long>&#10; Interrupt events for an MSP430 USCI module.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="interrupted" ref="0x7f1a2884b020" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterrupts.nc">
        <documentation loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterrupts.nc">
          <short> The only event is the reception of the interrupt.</short>
          <long> The only event is the reception of the interrupt.  Notification&#10; includes the value of the interrupt vector register.&#10;&#10; @note Do not attempt to distinguish tx and rx interrupts here;&#10; delegate it to the mode-specific handler.  For example, a receive&#10; interrupt for UART and SPI modes is indicated by a UCmxIV value&#10; of 2 using constant USCI_UCRXIFG; in I2C mode, the value 2 means&#10; USCI_I2C_UCALIFG.  USCI_I2C_UCRXIFG has a value of 10. *</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsciInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f1a28852d70" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Panic" loc="98:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
      <function command="" provided="0" name="warn" ref="0x7f1a280de080" loc="101:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
        <interfacedef-ref qname="Panic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pcode" ref="0x7f1a280e0b90" loc="101:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="where" ref="0x7f1a280df020" loc="101:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="arg0" ref="0x7f1a280df370" loc="101:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x7f1a280df6e0" loc="102:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x7f1a280dfa30" loc="102:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x7f1a280dfd80" loc="102:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="panic" ref="0x7f1a280e04c0" loc="99:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
        <interfacedef-ref qname="Panic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pcode" ref="0x7f1a280e2110" loc="99:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="where" ref="0x7f1a280e2460" loc="99:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="arg0" ref="0x7f1a280e27b0" loc="99:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x7f1a280e2b20" loc="100:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x7f1a280e2e70" loc="100:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x7f1a280e01f0" loc="100:/home/hakan/github/pillforge/tinyos/tos/interfaces/Panic.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f1a2901cad0" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f1a2901cad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f1a2900fd10" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a2900fa90" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1a2900f2a0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f1a2901cad0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a2900f020" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f1a290106c0" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29010440" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1a2900daa0" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f1a2901cad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a2900d4a0" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1a2900d810" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f1a2901cad0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/hakan/github/pillforge/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1a293cd190" loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/hakan/github/pillforge/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1a293cd9e0" loc="75:/home/hakan/github/pillforge/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1a27dff5e0" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1a27dff360" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f1a27dffdc0" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1a27e002a0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1a27e00020" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1a27e00c20" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1a27e009a0" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiBlock" loc="58:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiBlock.nc">
      <documentation loc="35:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiBlock.nc">
        <short>&#10; Send/Receive (transfer) SPI data, single phase.</short>
        <long>&#10; Send/Receive (transfer) SPI data, single phase.&#10;&#10; Similar to SpiPacket but is not split phase.  Transfering any data&#10; on the SPI requires both a transmit and a receive.  SpiBlock.write&#10; can be used for transmit, receive, or both simultaneously.&#10;&#10; Many SPI transfers are a small number of (>1) bytes.  SpiPacket requires&#10; split phase and that costs a non-zero overhead.   Potentially uses&#10; interrupts (which can be expensive) or DMA (much better for large data&#10; transfers).&#10;&#10; So we really want a more efficient small number of bytes mechanism.  That&#10; is the purpose of SpiBlock.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="transfer" ref="0x7f1a28263cf0" loc="76:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiBlock.nc">
        <documentation loc="60:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiBlock.nc">
          <short>&#10; Transmit/Receive a buffer over the SPI bus.</short>
          <long>&#10; Transmit/Receive a buffer over the SPI bus.   (single phase, efficient)&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send&#10;&#9;&#9;over the bus. If this parameter is NULL, then CPU will&#10;&#9;&#9;write zeros.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where&#10;&#9;&#9;received data should be stored. If this parameter is NULL,&#10;&#9;&#9;then incoming bytes will be discarded.&#10; @param len Length of the message.  Note that non-NULL rxBuf and txBuf&#10;&#9;&#9;parameters must be AT LEAST as large as len, or buffer&#10;&#9;&#9;overflow will occur.&#10;&#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiBlock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1a28263380" loc="76:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiBlock.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1a28263710" loc="76:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiBlock.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a28263a50" loc="76:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiBlock.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f1a28f7e970" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f1a28f75350" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f1a28f725f0" loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f72370" loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f1a28f75e60" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f75be0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f1a28f749a0" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f74720" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1a2826a020" loc="70:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1a2826b590" loc="70:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1a2826b920" loc="70:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a2826bc60" loc="70:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1a28269640" loc="82:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1a28268830" loc="82:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1a28268bc0" loc="82:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a28269020" loc="82:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1a28269390" loc="83:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f1a28f48d60" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f1a28f4ae10" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="tradio_size" ref="0x7f1a290b0dd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f1a28f4ab90" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="tradio_size" ref="0x7f1a290b0dd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1a28f485f0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f1a28f4a350" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f1a28f475b0" loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="tradio_size" ref="0x7f1a290b0dd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <function command="" provided="0" name="clear" ref="0x7f1a285d10e0" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1a285cfa10" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f1a285cf790" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1a285d1810" loc="53:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1a285d52b0" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1a285cf020" loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1a285d31f0" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1a285d29a0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1a285d5a40" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1a285d3900" loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f1a285d22a0" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1a285d2020" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f1a285ce450" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f1a285ce1d0" loc="56:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a28fe78e0" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a28fe78e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1a28fe2270" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1a29060510" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29060290" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1a2905c5f0" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a2905c370" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1a29057970" loc="126:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29057370" loc="126:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a290576a0" loc="126:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1a29056a10" loc="106:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1a29058ab0" loc="94:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a290584f0" loc="94:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a29058820" loc="94:/home/hakan/github/pillforge/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f1a27d100e0" loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f1a27d0f270" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f1a27d0fd00" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1a27d0fa80" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f1a27d0e510" loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f1a27d10980" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1a27d0edc0" loc="74:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1a29038c90" loc="80:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1a29038340" loc="80:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1a290386c0" loc="80:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a290389f0" loc="80:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1a29033620" loc="135:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29033020" loc="135:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a29033350" loc="135:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1a290326d0" loc="123:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1a290362a0" loc="96:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29036020" loc="96:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1a290347f0" loc="110:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29034210" loc="110:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1a29034560" loc="110:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f1a28fb4e80" loc="41:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fb4c00" loc="41:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1a28fb7a40" loc="37:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1a28fb4490" loc="39:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fb4210" loc="39:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1a28fb1990" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fb1370" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1a28fb1700" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1a28fb3be0" loc="43:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fb35c0" loc="43:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1a28fb3950" loc="43:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f1a28fb0d20" loc="49:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1a290ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fb0aa0" loc="49:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f1a28fafa50" loc="51:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1a290ac020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28faf440" loc="51:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1a28faf7c0" loc="51:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1a290ac020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1a28fb0350" loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fb00d0" loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f1a28fae1f0" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1a290ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f1a27e050b0" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1a27e06df0" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f1a27e03680" loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1a27e03400" loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f1a27e05bc0" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1a27e05940" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f1a27e022a0" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1a27e02020" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f1a27e065b0" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1a27e06330" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f1a28f41a90" loc="70:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f41810" loc="70:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1a28f45e00" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f45b80" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1a28f424d0" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1a28f43c70" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f43690" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1a28f439e0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f1a28f452a0" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f45020" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f1a28f41020" loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f42ce0" loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f1a28f7d2a0" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f7d020" loc="41:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f1a28261390" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f1a28261110" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f1a2901f3a0" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29020d30" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f1a2901f110" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f1a2901e550" loc="71:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a2901e2d0" loc="71:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f1a29020540" loc="57:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f1a29029b60" loc="52:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f1a290298e0" loc="52:/home/hakan/github/pillforge/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f1a28e7f5a0" loc="50:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f1a28e7d530" loc="60:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f1a28e7fd80" loc="55:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f1a28e81d30" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f1a28e81750" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1a28e81aa0" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f1a27e10830" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a27e10570" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f1a27e14b90" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a27e14910" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1a27954020" loc="68:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1a27955790" loc="61:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f1a27955020" loc="54:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f1a27957700" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f1a28f580b0" loc="131:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f59dd0" loc="131:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f1a28f5a680" loc="120:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f5a400" loc="120:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f1a28f66e60" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f66890" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f1a28f66bd0" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f1a28f62020" loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f64d00" loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f1a28f53050" loc="156:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f54a40" loc="156:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1a28f54d90" loc="156:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f1a28f64490" loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f64210" loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f1a28f595e0" loc="125:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f59020" loc="125:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f1a28f59350" loc="125:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f1a28f619d0" loc="88:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1a28f613c0" loc="88:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1a28f61740" loc="88:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f1a28f542a0" loc="151:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f54020" loc="151:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f1a28f65940" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f656c0" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f1a28f5e3f0" loc="99:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f5e170" loc="99:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f1a28f608b0" loc="94:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1a28f602a0" loc="94:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1a28f60620" loc="94:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f1a28f50820" loc="178:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f1a28f53ad0" loc="162:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f53850" loc="162:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f1a28f50020" loc="173:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1a290ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f1a28f556b0" loc="146:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f550d0" loc="146:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1a28f55420" loc="146:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f1a28f62b20" loc="81:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f628a0" loc="81:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f1a28f5cbf0" loc="115:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f5c620" loc="115:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f1a28f5c960" loc="115:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f1a28f58e40" loc="136:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f58870" loc="136:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f1a28f58bb0" loc="136:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1a28f4f2a0" loc="185:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f4f020" loc="185:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f1a28f5d2b0" loc="105:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f5ebf0" loc="105:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1a28f5d020" loc="105:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f1a28f660b0" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f69dd0" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f1a28f51680" loc="168:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f51400" loc="168:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f1a28f56910" loc="141:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f56690" loc="141:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f1a28f5ddb0" loc="110:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f5db30" loc="110:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f1a28f851f0" loc="86:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f1a28f869d0" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1a28f863c0" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1a28f86740" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f1a28f8a3f0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f8a170" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f1a28f88020" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f8ac80" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f1a28f87020" loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1a28f88910" loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1a28f88c90" loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f1a28f93a80" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f1a28f8b910" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f8b370" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1a28f8b680" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f1a28f87b90" loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f87910" loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a28ee5400" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a28ee5400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1a28ee5640" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a28ee5640"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1a28ee02d0" loc="109:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a28ee5640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1a28ee22b0" loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1a28ee1900" loc="103:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a28ee5640"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a28ee5640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1a28ee1330" loc="103:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a28ee5640"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1a28ee1670" loc="103:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a28ee5640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1a28ee2a90" loc="88:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1a28ee0ac0" loc="116:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a28ee5640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1a28ee42a0" loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a28ee5640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1a28ee4020" loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a28ee5640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1a28ee4ad0" loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f1a290cb7e0" loc="62:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1a293c4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/hakan/github/pillforge/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1a28dc3270" loc="62:/home/hakan/github/pillforge/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1a28851d80" loc="56:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f1a2884e020" loc="73:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1a288514f0" loc="46:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1a2884f6d0" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1a2884e950" loc="81:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1a27926020" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1a27925ac0" loc="72:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1a27927810" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f1a279252a0" loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f1a27925020" loc="67:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f1a27927070" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f1a27926820" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/hakan/github/pillforge/tinyos/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x7f1a2905e9c0" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/hakan/github/pillforge/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a2905e060" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1a2905e3b0" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a2905e6e0" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f1a28e920b0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28e98db0" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1a28745b60" loc="79:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1a2874eb50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1a287458e0" loc="79:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1a2874eb50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1a2874aba0" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f1a287476f0" loc="62:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1a2874eb50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1a28747470" loc="62:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1a2874eb50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1a28745030" loc="70:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/hakan/github/pillforge/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f1a2874eb50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UsciConfigure" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciConfigure.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciConfigure.nc">
        <short>&#10; Obtain access to a client-specific USCI configuration.</short>
      </documentation>
      <function command="" provided="0" name="getConfiguration" ref="0x7f1a2889fd50" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciConfigure.nc">
        <documentation loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciConfigure.nc">
          <short>&#10; Return a pointer to the configuration that should be used for a&#10; particular USCI client.</short>
          <long>&#10; Return a pointer to the configuration that should be used for a&#10; particular USCI client. *</long>
        </documentation>
        <interfacedef-ref qname="Msp430UsciConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_usci_config_t" ref="0x7f1a288be760"/></typename>
              <type-tag size="I:8" alignment="I:2"><struct-ref name="msp430_usci_config_t" ref="0x7f1a288bf4c0"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1a28d25020" loc="80:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="77:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1a28d25770" loc="82:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f1a28d202e0" loc="112:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="105:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1a28d20060" loc="112:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1a28d28830" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1a28d24780" loc="89:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f1a28d20bd0" loc="119:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="114:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f1a28d1f730" loc="129:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="121:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1a28d1f4b0" loc="129:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1a28d24020" loc="87:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="84:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1a28d27820" loc="75:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="70:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f1a28d1e070" loc="135:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="131:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f1a28d21020" loc="101:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="98:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f1a28d27020" loc="68:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="62:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1a28d2b970" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f1a28d23020" loc="94:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="91:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f1a28d217c0" loc="103:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f1a28d237e0" loc="96:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1a28d280e0" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1a288b02b0" loc="48:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1a288b4c60" loc="48:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a288b0020" loc="48:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f1a288a8020" loc="79:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1a288abce0" loc="79:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1a288a8df0" loc="90:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1a288a8820" loc="90:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a288a8b60" loc="90:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f1a288aabc0" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f1a288a6720" loc="99:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1a288a7dc0" loc="99:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a288a6130" loc="99:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1a288a6480" loc="99:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f1a288ab510" loc="72:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1a288afbb0" loc="57:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1a288af280" loc="57:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a288af5c0" loc="57:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1a288af910" loc="57:/home/hakan/github/pillforge/tinyos/tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a2839fe30" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a2839fe30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1a2839a0d0" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a2839a0d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1a2839a9f0" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1a2839a0d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1a28399b10" loc="76:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1a283992b0" loc="71:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1a283972b0" loc="82:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f1a285c85a0" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1a285c8320" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f1a285e29e0" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1a285dc5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1a285db020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1a285c8e10" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f1a285c7d20" loc="59:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f1a285cab90" loc="47:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1a285c7590" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1a285cb1f0" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f1a285cb980" loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f1a285ca420" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1a285dc5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1a285db020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1a285ca1a0" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1a285dc5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1a285db020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleepEvents" loc="46:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepEvents.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepEvents.nc">
        <short>&#10; Microcontroller Sleep Events allows other components in the system&#10; to perform actions when the microcontroller is thinking about going to &#10; sleep, going to sleep, or waking up.</short>
        <long>&#10; Microcontroller Sleep Events allows other components in the system&#10; to perform actions when the microcontroller is thinking about going to &#10; sleep, going to sleep, or waking up.&#10;&#10; @author David Moss&#10; @author Peter Bigot&#10;</long>
      </documentation>
      <function event="" provided="0" name="preSleep" ref="0x7f1a290ce2a0" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepEvents.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepEvents.nc">
          <short> Invoked by McuSleep prior to sleeping.</short>
          <long> Invoked by McuSleep prior to sleeping.&#10;&#10; The microcontroller is going to sleep in the given mode now.&#10; Perform any final actions necessary before the microcontroller enters&#10; this mode.&#10; @param sleep_mode The mode of sleep the microcontroller is entering&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuSleepEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="mcu_power_t" ref="0x7f1a293c4020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleep_mode" ref="0x7f1a290ce020" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepEvents.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="mcu_power_t" ref="0x7f1a293c4020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="postSleep" ref="0x7f1a290cedc0" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepEvents.nc">
        <documentation loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepEvents.nc">
          <short> Invoked by McuSleep immediately after waking.</short>
          <long> Invoked by McuSleep immediately after waking.&#10;&#10; @param sleep_mode The mode of sleep from which the microcontroller woke.&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuSleepEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="mcu_power_t" ref="0x7f1a293c4020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleep_mode" ref="0x7f1a290ceb40" loc="61:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/lpm/McuSleepEvents.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="mcu_power_t" ref="0x7f1a293c4020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usci" loc="78:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
      <documentation loc="40:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <short>&#10; Control of an MSP430 USCI module.</short>
        <long>&#10; Control of an MSP430 USCI module.&#10;&#10; This interface is completely agnostic of the modes supported by a&#10; particular USCI module.  It supports the union of the module&#10; registers across all modes.&#10;&#10; Where the same memory location reflects different registers&#10; depending on USCI mode, independent functions are provided.&#10;&#10; Access to UCmxCTLW0 and UCmxBRW is available as both 16 bits as well&#10; 8 bits.  Originally, only 16 bit access was supported and this is&#10; reflected in the initial x5 implementations.  Doug and Marcus started&#10; from the same original place that the tinyprod fork started from.&#10; However, they changed the low level interface to expose the byte&#10; interfaces to the 16 bit registers.  This was to make the code between&#10; the x2 usci and the x5 usci more similar.&#10;&#10; So we expose both 16 bit and 8 bit interfaces.&#10;&#10; WARNING WARNING WARNING: TI in a later edition of the Users Guide&#10; for the x5 processors (SLAU208K - August 2012) documents various&#10; registers (some just particular bits) as being modified only if&#10; the module is in reset (UCSWRST = 1).&#10;&#10; We could protect every access to these bits by setting and resetting&#10; UCSWRST but this is very inefficient.  It is assumed that the user&#10; knows what they are doing.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Derek Baker &#60;derek@red-slate.co.uk>&#10; @author Doug Carlson &#60;carlson@cs.jhu.edu>&#10; @author Marcus Chang &#60;marcus.chang@gmail.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getIv" ref="0x7f1a28866020" loc="371:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="366:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Reads the UCmxIV Interrupt Vector register.</short>
          <long>&#10; Reads the UCmxIV Interrupt Vector register.&#10; This register is present on all USCI modules, and is used in all modes.&#10; It is read-only.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAbctl" ref="0x7f1a28879590" loc="207:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="203:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxABCTL Auto Baud Rate Control register.</short>
          <long>&#10; Write the UCmxABCTL Auto Baud Rate Control register.&#10; This register is present only on USCI_A modules in UART mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28879310" loc="207:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl0" ref="0x7f1a2888c0e0" loc="114:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxbuf" ref="0x7f1a2887d270" loc="177:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="173:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Read the UCmxRXBUF Receive Buffer register.</short>
          <long>&#10; Read the UCmxRXBUF Receive Buffer register.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTxbuf" ref="0x7f1a2887b2e0" loc="195:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="191:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxTX Transmit Buffer register.</short>
          <long>&#10; Write the UCmxTX Transmit Buffer register.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a2887b060" loc="195:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStat" ref="0x7f1a2887e020" loc="165:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="161:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Read the UCmxSTAT Status register.</short>
          <long>&#10; Read the UCmxSTAT Status register.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setIrctl" ref="0x7f1a28878880" loc="219:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="215:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxIRCTL IrDA Control register.</short>
          <long>&#10; Write the UCmxIRCTL IrDA Control register.&#10; This register is present only on USCI_A modules in UART mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28878600" loc="219:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIrtctl" ref="0x7f1a28877b10" loc="231:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="227:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxIRTCTL IrDA Transmit Control register.</short>
          <long>&#10; Write the UCmxIRTCTL IrDA Transmit Control register.&#10; This register is present only on USCI_A modules in UART mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28877890" loc="231:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIrrctl" ref="0x7f1a28876390" loc="237:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="233:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Read the UCmxIRRCTL IrDA Receive Control register.</short>
          <long>&#10; Read the UCmxIRRCTL IrDA Receive Control register.&#10; This register is present only on USCI_A modules in UART mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setI2Coa" ref="0x7f1a28873110" loc="255:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="251:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxI2COA I2C Own Address register.</short>
          <long>&#10; Write the UCmxI2COA I2C Own Address register.&#10; This register is present only on USCI_B modules in I2C mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28874e40" loc="255:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIctl" ref="0x7f1a288716c0" loc="285:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="275:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Writes the UCmxICTL Interrupt Control register.</short>
          <long>&#10; Writes the UCmxICTL Interrupt Control register.&#10; This register is present on all USCI modules.&#10;&#10; ICTL is the 16 bit concatenation of IE (interrupt enable) and IFG&#10; (interrupt flag).   WARNING: Using this to set or clear interrupt&#10; enables and/or IFGs is not recommended.    There are potential&#10; h/w race conditions.   It is much better to use the byte accessors&#10; get/setIe, get/setIfg.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28871440" loc="285:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIrctl" ref="0x7f1a28879de0" loc="213:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="209:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Read the UCmxIRCTL IrDA Control register.</short>
          <long>&#10; Read the UCmxIRCTL IrDA Control register.&#10; This register is present only on USCI_A modules in UART mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getI2Coa" ref="0x7f1a288746a0" loc="249:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="245:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Read the UCmxI2COA I2C Own Address register.</short>
          <long>&#10; Read the UCmxI2COA I2C Own Address register.&#10; This register is present only on USCI_B modules in I2C mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="andCtl0" ref="0x7f1a288865d0" loc="130:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28886350" loc="130:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setI2Csa" ref="0x7f1a28872390" loc="267:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="263:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxI2CSA I2C Slave Address register.</short>
          <long>&#10; Write the UCmxI2CSA I2C Slave Address register.&#10; This register is present only on USCI_B modules in I2C mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28872110" loc="267:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f1a2886dbd0" loc="323:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f1a2886ca80" loc="325:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f1a28868790" loc="363:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getI2Csa" ref="0x7f1a28873940" loc="261:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="257:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Read the UCmxI2CSA I2C Slave Address register.</short>
          <long>&#10; Read the UCmxI2CSA I2C Slave Address register.&#10; This register is present only on USCI_B modules in I2C mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f1a28866850" loc="377:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIrtctl" ref="0x7f1a288770e0" loc="225:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="221:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Read the UCmxIRTCTL IrDA Transmit Control register.</short>
          <long>&#10; Read the UCmxIRTCTL IrDA Transmit Control register.&#10; This register is present only on USCI_A modules in UART mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxStart" ref="0x7f1a28861490" loc="388:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="orCtl1" ref="0x7f1a288872e0" loc="127:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28887060" loc="127:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBrw" ref="0x7f1a288822a0" loc="145:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="141:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Writes the UCmxBRW Baud Rate Control registers.</short>
          <long>&#10; Writes the UCmxBRW Baud Rate Control registers.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28882020" loc="145:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="orCtlw0" ref="0x7f1a28889020" loc="125:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a2888aca0" loc="125:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="andCtlw0" ref="0x7f1a28887c40" loc="129:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a288879c0" loc="129:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMctl" ref="0x7f1a28881d40" loc="153:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="149:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Reads the USCmBxMCTL Modulation Control register.</short>
          <long>&#10; Reads the USCmBxMCTL Modulation Control register.&#10; This register is present on all USCI modules except I2C.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f1a288657e0" loc="379:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTxStop" ref="0x7f1a28864730" loc="383:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setIfg" ref="0x7f1a2886ec70" loc="309:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="305:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Writes the UCmxIFG Interrupt Flag register.</short>
          <long>&#10; Writes the UCmxIFG Interrupt Flag register.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a2886e9f0" loc="309:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clrNackIntr" ref="0x7f1a28860ab0" loc="393:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtlw0" ref="0x7f1a2888e640" loc="113:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="98:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Reads the UCmxCTLW0 Control register.</short>
          <long>&#10; Reads the UCmxCTLW0 Control register.&#10; This register is present on all USCI modules, and is used in all modes.&#10;&#10; CTLW0 is the 16 bit concatenation of CTL0 and CTL1.  Note on the x5&#10; CTL1 is at offset 0 (x5 is base register based) and CTL0 is the msb.&#10;&#10; This is swapped with respect to where CTL0 and CTL1 live on the x2 processors,&#10; CTL0 is at 0 and CTL1 is at 1 (not base register but relative to where the&#10; registers are defined).  This makes config block platform/cpu dependent (which&#10; they are anyway because of clocking issues).&#10;&#10; {get,set}Ctlw0: gets or sets the 16 bit version of the control register.&#10; {get,set}Ctl{0,1}: gets or sets the 8 bit version of the 0 or 1 register.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBr0" ref="0x7f1a28882c80" loc="146:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28882a00" loc="146:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxbuf" ref="0x7f1a2887c8a0" loc="189:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="185:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Read the UCmxTXBUF Transmit Buffer register.</short>
          <long>&#10; Read the UCmxTXBUF Transmit Buffer register.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f1a28868030" loc="330:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f1a2886c350" loc="324:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f1a288698d0" loc="329:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f1a2888c830" loc="115:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxStop" ref="0x7f1a28863d10" loc="387:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f1a2886aa10" loc="327:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getBrw" ref="0x7f1a28885890" loc="137:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="133:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Reads the UCmxBRW Baud Rate Control registers.</short>
          <long>&#10; Reads the UCmxBRW Baud Rate Control registers.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIe" ref="0x7f1a2886f020" loc="291:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="287:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Reads the UCmxIE Interrupt Enable register.</short>
          <long>&#10; Reads the UCmxIE Interrupt Enable register.&#10; This register is present on all USCI modules, and is used in all modes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAbctl" ref="0x7f1a2887baf0" loc="201:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="197:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Read the UCmxABCTL Auto Baud Rate Control register.</short>
          <long>&#10; Read the UCmxABCTL Auto Baud Rate Control register.&#10; This register is present only on USCI_A modules in UART mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="leaveResetMode_" ref="0x7f1a2885ebb0" loc="428:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="422:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Take the USCI out of software reset mode.</short>
          <long>&#10; Take the USCI out of software reset mode.&#10; This command should only be invoked by modules that implement&#10; specific USCI modes, in their mode-specific configuration&#10; functions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="andCtl1" ref="0x7f1a28885020" loc="131:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28886c90" loc="131:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIctl" ref="0x7f1a28872bd0" loc="273:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="269:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Reads the UCmxICTL Interrupt Control register.</short>
          <long>&#10; Reads the UCmxICTL Interrupt Control register.&#10; This register is present on all USCI modules, and is used in all modes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIfg" ref="0x7f1a2886e270" loc="303:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="299:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Reads the UCmxIFG Interrupt Enable register.</short>
          <long>&#10; Reads the UCmxIFG Interrupt Enable register.&#10; This register is present on all USCI modules, and is used in all modes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getBr0" ref="0x7f1a288830e0" loc="138:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f1a2888bc70" loc="122:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a2888b9f0" loc="122:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1a2885f990" loc="411:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="399:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Set the USCI to the mode and speed specified in the given configuration.</short>
          <long>&#10; Set the USCI to the mode and speed specified in the given configuration.&#10;&#10; @param config The speed-relevant parameters for module&#10; configuration.  Must be provided.&#10; &#10; @param leave_in_reset If TRUE, the module is left in software&#10; reset mode upon exit, allowing the caller to perform additional&#10; configuration steps such as configuring mode-specific ports.  It&#10; is the caller's responsibility to invoke leaveResetMode_() upon&#10; completion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_usci_config_t" ref="0x7f1a288be760"/></typename>
                <type-tag size="I:8" alignment="I:2"><struct-ref name="msp430_usci_config_t" ref="0x7f1a288bf4c0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1a2885f360" loc="411:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_usci_config_t" ref="0x7f1a288be760"/></typename>
                <type-tag size="I:8" alignment="I:2"><struct-ref name="msp430_usci_config_t" ref="0x7f1a288bf4c0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="leave_in_reset" ref="0x7f1a2885f700" loc="412:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNackIntrPending" ref="0x7f1a28860390" loc="392:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStat" ref="0x7f1a2887ea10" loc="171:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="167:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxSTAT Status register.</short>
          <long>&#10; Write the UCmxSTAT Status register.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a2887e790" loc="171:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setTxStart" ref="0x7f1a28864e50" loc="384:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setIe" ref="0x7f1a2886fa20" loc="297:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="293:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Writes the UCmxIE Interrupt Enable register.</short>
          <long>&#10; Writes the UCmxIE Interrupt Enable register.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a2886f7a0" loc="297:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxbuf" ref="0x7f1a2887dc70" loc="183:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="179:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxRX Receive Buffer register.</short>
          <long>&#10; Write the UCmxRX Receive Buffer register.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a2887d9f0" loc="183:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBr1" ref="0x7f1a288815d0" loc="147:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28881350" loc="147:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="currentMode" ref="0x7f1a2885c490" loc="434:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="430:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Return an enumeration value indicating the currently configured USCI&#10; mode.</short>
          <long>&#10; Return an enumeration value indicating the currently configured USCI&#10; mode.  Values are from the MSP430_USCI_Mode_e enumeration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusBusy" ref="0x7f1a28861bd0" loc="390:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enterResetMode_" ref="0x7f1a2885e350" loc="420:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="414:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Place the USCI into software reset mode.</short>
          <long>&#10; Place the USCI into software reset mode.&#10; This command should only be invoked by modules that implement&#10; specific USCI modes, in their mode-specific configuration&#10; functions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtlw0" ref="0x7f1a2888b2a0" loc="121:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="117:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Writes the UCmxCTLW0 Control register.</short>
          <long>&#10; Writes the UCmxCTLW0 Control register.&#10; This register is present on all USCI modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a2888b020" loc="121:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f1a28865020" loc="378:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getModuleIdentifier" ref="0x7f1a2888fd10" loc="92:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="85:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Return a unique identifier for this module among all USCI modules on the chip.</short>
          <long>&#10; Return a unique identifier for this module among all USCI modules on the chip.&#10;&#10; There is a one-to-one correspondence between the value returned&#10; by this function and the set of pairs of (module_type,&#10; module_instance).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTxNack" ref="0x7f1a28864020" loc="382:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMctl" ref="0x7f1a28880790" loc="159:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="155:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxMCTL Modulation Control register.</short>
          <long>&#10; Write the UCmxMCTL Modulation Control register.&#10; This register is present on all USCI modules except I2C.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28880510" loc="159:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f1a2886d4c0" loc="322:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="orCtl0" ref="0x7f1a28889950" loc="126:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a288896d0" loc="126:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f1a28869190" loc="328:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getBr1" ref="0x7f1a28883820" loc="139:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f1a2888a5d0" loc="123:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a2888a350" loc="123:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIrrctl" ref="0x7f1a28876dc0" loc="243:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <documentation loc="239:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
          <short>&#10; Write the UCmxIRRCTL IrDA Receive Control register.</short>
          <long>&#10; Write the UCmxIRRCTL IrDA Receive Control register.&#10; This register is present only on USCI_A modules in UART mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v" ref="0x7f1a28876b40" loc="243:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxNack" ref="0x7f1a288635d0" loc="386:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430Usci.nc">
        <interfacedef-ref qname="HplMsp430Usci"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f1a28f81e00" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f81820" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f1a28f81b70" loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f1a28f80620" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f1a28f82490" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f82210" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f1a28f81020" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f82ca0" loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1a28d83020" loc="44:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1a28d83750" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1a28d84190" loc="42:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1a28d815e0" loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1a28d84890" loc="43:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1a28d83e70" loc="46:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1a28d85350" loc="40:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1a28d85a20" loc="41:/home/hakan/github/pillforge/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1a28da0530" loc="61:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="58:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1a28da0ce0" loc="67:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="63:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led5Toggle" ref="0x7f1a28d96350" loc="148:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="144:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Toggle LED 5; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 5; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f1a28d9e4e0" loc="72:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="69:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x7f1a28d9bb70" loc="110:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="107:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f1a28d9d490" loc="83:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="79:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led7Toggle" ref="0x7f1a28d922b0" loc="180:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="176:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Toggle LED 7; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 7; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led6On" ref="0x7f1a28d96b30" loc="153:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="150:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn on LED 6.</short>
          <long>&#10; Turn on LED 6. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1a28d9cbd0" loc="100:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="96:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1a28d92ac0" loc="197:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="183:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led6Toggle" ref="0x7f1a28d94b00" loc="164:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="160:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Toggle LED 6; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 6; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1a28d9ec70" loc="77:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="74:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x7f1a28d99350" loc="116:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="112:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x7f1a28d9b3e0" loc="105:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="102:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led4Off" ref="0x7f1a28d98420" loc="126:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="123:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn off LED 4.</short>
          <long>&#10; Turn off LED 4. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led5On" ref="0x7f1a28d973e0" loc="137:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="134:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn on LED 5.</short>
          <long>&#10; Turn on LED 5. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led6Off" ref="0x7f1a28d94350" loc="158:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="155:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn off LED 6.</short>
          <long>&#10; Turn off LED 6. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led4Toggle" ref="0x7f1a28d98bd0" loc="132:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="128:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Toggle LED 4; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 4; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led7On" ref="0x7f1a28d93350" loc="169:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="166:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn on LED 7.</short>
          <long>&#10; Turn on LED 7. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led5Off" ref="0x7f1a28d97b70" loc="142:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="139:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn off LED 5.</short>
          <long>&#10; Turn off LED 5. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f1a28da1d60" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="53:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led4On" ref="0x7f1a28d99b30" loc="121:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="118:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn on LED 4.</short>
          <long>&#10; Turn on LED 4. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1a28d9c420" loc="94:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="91:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1a28d919d0" loc="214:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="200:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1a28d91750" loc="214:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f1a28d9dc70" loc="89:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="86:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led7Off" ref="0x7f1a28d93ae0" loc="174:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
        <documentation loc="171:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/leds/Leds.nc">
          <short>&#10; Turn off LED 7.</short>
          <long>&#10; Turn off LED 7. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CSlave" loc="1:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
      <function event="" provided="0" name="slaveStop" ref="0x7f1a280edd40" loc="30:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
        <interfacedef-ref qname="I2CSlave"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f1a280fe9b0" loc="2:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
        <interfacedef-ref qname="I2CSlave"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1a280fe730" loc="2:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f1a280f1190" loc="3:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
        <interfacedef-ref qname="I2CSlave"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="slaveTransmit" ref="0x7f1a280eeb90" loc="22:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
        <interfacedef-ref qname="I2CSlave"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1a280ee910" loc="22:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slaveReceiveRequested" ref="0x7f1a280ef1f0" loc="13:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
        <interfacedef-ref qname="I2CSlave"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slaveStart" ref="0x7f1a280ed5f0" loc="26:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
        <interfacedef-ref qname="I2CSlave"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isGeneralCall" ref="0x7f1a280ed370" loc="26:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f1a280f1910" loc="4:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
        <interfacedef-ref qname="I2CSlave"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="slaveReceive" ref="0x7f1a280ef9b0" loc="17:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
        <interfacedef-ref qname="I2CSlave"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slaveTransmitRequested" ref="0x7f1a280ee1f0" loc="21:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/I2CSlave.nc">
        <interfacedef-ref qname="I2CSlave"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CReg" loc="44:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
      <documentation loc="33:/home/hakan/github/pillforge/tinyos/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="reg_writeBlock" ref="0x7f1a280f4640" loc="112:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
        <interfacedef-ref qname="I2CReg"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slave_addr" ref="0x7f1a280f6910" loc="112:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="reg" ref="0x7f1a280f6c40" loc="112:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="num_bytes" ref="0x7f1a280f4020" loc="112:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1a280f4390" loc="112:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reg_write16" ref="0x7f1a280f6130" loc="98:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
        <interfacedef-ref qname="I2CReg"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slave_addr" ref="0x7f1a280f77c0" loc="98:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="reg" ref="0x7f1a280f7af0" loc="98:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1a280f7e30" loc="98:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reg_read16" ref="0x7f1a280fb970" loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
        <interfacedef-ref qname="I2CReg"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slave_addr" ref="0x7f1a280fb020" loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="reg" ref="0x7f1a280fb350" loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1a280fb6d0" loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="slave_present" ref="0x7f1a280fd6d0" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
        <interfacedef-ref qname="I2CReg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slave_addr" ref="0x7f1a280fd450" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reg_write" ref="0x7f1a280f7020" loc="97:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
        <interfacedef-ref qname="I2CReg"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slave_addr" ref="0x7f1a280f8640" loc="97:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="reg" ref="0x7f1a280f8970" loc="97:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1a280f8ca0" loc="97:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reg_read" ref="0x7f1a280fc7e0" loc="68:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
        <interfacedef-ref qname="I2CReg"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slave_addr" ref="0x7f1a280fde80" loc="68:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="reg" ref="0x7f1a280fc1d0" loc="68:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1a280fc540" loc="68:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reg_readBlock" ref="0x7f1a280f9e40" loc="83:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
        <interfacedef-ref qname="I2CReg"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slave_addr" ref="0x7f1a280f9180" loc="83:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="reg" ref="0x7f1a280f94b0" loc="83:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="num_bytes" ref="0x7f1a280f9820" loc="83:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1a280f9b90" loc="83:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CReg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f1a27d12b20" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a27d128a0" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f1a27d09020" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1a27d0a730" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1a27d0a4b0" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1a29027770" loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a290274f0" loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1a29025940" loc="71:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a290256c0" loc="71:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1a29023ab0" loc="85:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29023830" loc="85:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f1a28f7ac50" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f7a9d0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f1a28f7a110" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f7fe30" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f1a28f794d0" loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f1a28f77020" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f79d20" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DiagMsg" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
      <documentation loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <short>&#10; The DiagMsg interface allows messages to be sent back to the base station&#10; containing several values and their type information, like in &#10; &#60;code>printf(...)&#60;/code>.</short>
        <long>&#10; The DiagMsg interface allows messages to be sent back to the base station&#10; containing several values and their type information, like in &#10; &#60;code>printf(...)&#60;/code>. The base station must be connected to a PC using &#10; a serial cable. On the PC a Java application (net.tinyos.util.DiagMsg) &#10; decodes the message and displays its content using the correct type &#10; information. See the implementation for the format of the message.&#10;</long>
      </documentation>
      <function command="" provided="0" name="int32s" ref="0x7f1a27c5f8a0" loc="81:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
                <type-int cname="long" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c5f2e0" loc="81:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
                <type-int cname="long" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c5f610" loc="81:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="str" ref="0x7f1a27c58450" loc="92:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="89:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; This is a shorthand method for &#60;code>chrs&#60;/code>&#10;</short>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c581d0" loc="92:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x7f1a27c58b90" loc="97:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="94:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Initiates the sending of the recorded message.</short>
          <long>&#10; Initiates the sending of the recorded message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="int16" ref="0x7f1a27c6e350" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c6e0d0" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex32" ref="0x7f1a27c69660" loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c693e0" loc="65:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int32" ref="0x7f1a27c6b020" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c6cd40" loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="chr" ref="0x7f1a27c67a10" loc="67:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c67790" loc="67:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint32s" ref="0x7f1a27c5e620" loc="82:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c5e060" loc="82:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c5e390" loc="82:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="real" ref="0x7f1a27c67020" loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c69ce0" loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex8" ref="0x7f1a27c6f970" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c6f6f0" loc="57:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint16" ref="0x7f1a27c6ecc0" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c6ea40" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint64s" ref="0x7f1a27c5ce60" loc="85:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
                <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c5c8a0" loc="85:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
                <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c5cbd0" loc="85:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint32" ref="0x7f1a27c6acc0" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c6aa40" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint8" ref="0x7f1a27c6f020" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c70cd0" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex8s" ref="0x7f1a27c63360" loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c65d40" loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c630d0" loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="record" ref="0x7f1a27c78af0" loc="49:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Initiates the recording of a new DiagMsg.</short>
          <long>&#10; Initiates the recording of a new DiagMsg. It returns FALSE if&#10; the component is busy recording or sending another message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="uint8s" ref="0x7f1a27c655e0" loc="76:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c65020" loc="76:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c65350" loc="76:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reals" ref="0x7f1a27c5ad60" loc="86:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-float cname="float" size="I:4" alignment="I:2"></type-float>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c5a7a0" loc="86:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-float cname="float" size="I:4" alignment="I:2"></type-float>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c5aad0" loc="86:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int64" ref="0x7f1a27c6b980" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:2">
              <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c6b700" loc="62:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="long long" size="I:8" alignment="I:2">
              <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint16s" ref="0x7f1a27c62e00" loc="79:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
                <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c62840" loc="79:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
                <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c62b70" loc="79:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int64s" ref="0x7f1a27c5c120" loc="84:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
                <type-int cname="long long" size="I:8" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c5db00" loc="84:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
                <type-int cname="long long" size="I:8" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c5de30" loc="84:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex16" ref="0x7f1a27c6c660" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c6c3e0" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint64" ref="0x7f1a27c6a350" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c6a0d0" loc="63:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
              <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int16s" ref="0x7f1a27c620c0" loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
                <type-int cname="int" size="I:2" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c63ac0" loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
                <type-int cname="int" size="I:2" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c63df0" loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int8" ref="0x7f1a27c70530" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="51:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Adds a new value to the end of the message.</short>
          <long>&#10; Adds a new value to the end of the message. If the message &#10; cannot hold more information, then the new value is simply dropped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c702b0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex16s" ref="0x7f1a27c61b60" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
                <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c615a0" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
                <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c618d0" loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex32s" ref="0x7f1a27c5d3a0" loc="83:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c5ed90" loc="83:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c5d110" loc="83:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="chrs" ref="0x7f1a27c59a70" loc="87:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c594b0" loc="87:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c597e0" loc="87:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int8s" ref="0x7f1a27c66790" loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="69:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Adds an array of values to the end of the message.</short>
          <long>&#10; Adds an array of values to the end of the message. &#10; The maximum length of the array is &#60;code>15&#60;/code>.&#10; If the message cannot hold all elements of the array,&#10; then no value is stored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
                <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1a27c661d0" loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
                <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a27c66500" loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1a28fb9bf0" loc="120:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f1a28fbabe0" loc="97:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f1a28fba270" loc="88:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1a28fb9420" loc="102:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1a28fb88b0" loc="128:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/hakan/github/pillforge/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f1a290e82b0" loc="76:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f1a29257970" loc="52:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/hakan/github/pillforge/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1a28fc4d10" loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1a28fc43c0" loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1a290ac440"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1a28fc4740" loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a28fc4a70" loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1a28fbf660" loc="122:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fbf060" loc="122:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1a28fbf390" loc="122:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1a28fc0790" loc="110:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1a28fc2c00" loc="83:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fc2980" loc="83:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1a28fc1de0" loc="97:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fc1800" loc="97:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1a28fc1b50" loc="97:/home/hakan/github/pillforge/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f1a27c740b0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a27c75db0" loc="55:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1a27c79e80" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a27c79c00" loc="40:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f1a27c76c20" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a27c76660" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1a27c76990" loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1a27c75650" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a27c753d0" loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f1a29018790" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29018510" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f1a2901b8b0" loc="46:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a2901b290" loc="46:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f1a2901b620" loc="46:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f1a2901a770" loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a2901a4f0" loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f1a29019ca0" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29019680" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f1a29019a10" loc="53:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f1a29016780" loc="71:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a29016500" loc="71:/home/hakan/github/pillforge/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f1a28e99a20" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28e997a0" loc="46:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1a28e95510" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28e95290" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1a28e96950" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28e96370" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1a28e966c0" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="102:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f1a2810fb20" loc="102:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f1a2810fb20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1a2810d150" loc="120:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="103:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10;    I2C_RESTART - restarting an I2C transaction (turn bus around).&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f1a281116c0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f1a2810e460" loc="120:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f1a281116c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1a2810e7b0" loc="120:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1a2810eb00" loc="120:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1a2810ee80" loc="120:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f1a28107a90" loc="157:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="149:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1a28108da0" loc="157:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
          <variable name="addr" ref="0x7f1a28107110" loc="157:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1a28107460" loc="157:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1a281077e0" loc="157:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1a2810b060" loc="137:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="122:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_RESTART - restarting an I2C transaction (turn bus around).&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f1a281116c0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f1a2810c360" loc="137:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f1a281116c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1a2810c6b0" loc="137:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1a2810ca00" loc="137:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1a2810cd80" loc="137:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1a2810ae20" loc="147:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="139:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1a2810a150" loc="147:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
              <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
            </type-tag>
          </variable>
          <variable name="addr" ref="0x7f1a2810a4a0" loc="147:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1a2810a7f0" loc="147:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1a2810ab70" loc="147:/home/hakan/github/pillforge/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f1a29012190" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f1a29014900" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1a29014680" loc="42:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1a290129e0" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="39:/home/hakan/github/pillforge/tinyos/tos/interfaces/Platform.nc">
      <function command="" provided="0" name="usecsRaw" ref="0x7f1a28dbf680" loc="45:/home/hakan/github/pillforge/tinyos/tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f1a28dbfe20" loc="54:/home/hakan/github/pillforge/tinyos/tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f1a290464a0" loc="177:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1a29046220" loc="177:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1a2904f020" loc="88:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1a29050c60" loc="88:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1a29052350" loc="68:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1a29052e10" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1a29052b90" loc="78:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1a2904d960" loc="121:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1a2904d380" loc="121:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1a2904d6d0" loc="121:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1a2904e410" loc="103:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1a2904fe10" loc="103:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1a2904e180" loc="103:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f1a29049dc0" loc="147:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1a29049b40" loc="147:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1a290472b0" loc="162:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1a29048be0" loc="162:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f1a29047020" loc="162:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1a290b9e20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1a2904abc0" loc="136:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1a2904a940" loc="136:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1a29045960" loc="187:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1a29045380" loc="187:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1a290456d0" loc="187:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f1a290427a0" loc="195:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/hakan/github/pillforge/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1a290b7230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/hakan/github/pillforge/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/hakan/github/pillforge/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f1a28dcc0e0" loc="90:/home/hakan/github/pillforge/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/hakan/github/pillforge/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f1a28dcc940" loc="98:/home/hakan/github/pillforge/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/hakan/github/pillforge/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/hakan/github/pillforge/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/hakan/github/pillforge/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1a293d9020" loc="57:/home/hakan/github/pillforge/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/hakan/github/pillforge/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1a293d8020" loc="72:/home/hakan/github/pillforge/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/hakan/github/pillforge/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1a293d9790" loc="65:/home/hakan/github/pillforge/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/hakan/github/pillforge/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UsciError" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciError.nc">
      <documentation loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciError.nc">
        <short>&#10; Support notification of errors detected in MSP430 USCI modules.</short>
        <long>&#10; Support notification of errors detected in MSP430 USCI modules.&#10;</long>
      </documentation>
      <function event="" provided="0" name="condition" ref="0x7f1a2889b830" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciError.nc">
        <documentation loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciError.nc">
          <short> Signalled when the USCI infrastructure detects a hardware error.</short>
          <long> Signalled when the USCI infrastructure detects a hardware error.&#10;&#10; The passed parameter is a bit set comprising values defined in&#10; msp430usci.h; these generally map to bits in the USCI UCxySTAT&#10; register.  Note that this event is usually signalled from within&#10; an interrupt handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430UsciError"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="errors" ref="0x7f1a2889b5b0" loc="50:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciError.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timeout" ref="0x7f1a288990e0" loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciError.nc">
        <interfacedef-ref qname="Msp430UsciError"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/hakan/github/pillforge/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/hakan/github/pillforge/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f1a28fe4110" loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/hakan/github/pillforge/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28fe8e10" loc="47:/home/hakan/github/pillforge/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f1a28ed0020" loc="59:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f1a28ed0930" loc="72:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f1a28ecf350" loc="79:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f1a28ed1740" loc="48:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1101DriverConfig" loc="25:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1a28f90020" loc="36:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
        <documentation loc="32:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1101DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f1a28f91740" loc="30:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
        <documentation loc="27:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="CC1101DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f914c0" loc="30:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f1a28f90b50" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
        <documentation loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1101DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f908d0" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f1a28f8f420" loc="49:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
        <documentation loc="44:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount,&#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1101DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f1a28f8d020" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
        <documentation loc="51:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="CC1101DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1a28f8fd20" loc="55:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
                <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1a286076c0" loc="53:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1a286076c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1a285fe420" loc="136:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1a28603d60" loc="83:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1a28600b10" loc="114:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1a28600540" loc="114:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1a28600880" loc="114:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1a28601d60" loc="98:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1a285fc460" loc="151:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1a285febb0" loc="144:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1a28601570" loc="92:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f1a286042a0" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1a28604020" loc="64:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1a285ffaa0" loc="129:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1a285ff4d0" loc="129:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1a285ff810" loc="129:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1a28604d60" loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1a28604ae0" loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1a28603650" loc="78:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/hakan/github/pillforge/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
    <function safe="" name="__nesc_hton_uint8" ref="0x7f1a29a414b0" loc="286:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29a42980" loc="286:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a29a42cd0" loc="286:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_int8" ref="0x7f1a29a39920" loc="303:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29a39190" loc="303:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="erfc" ref="0x7f1a2943fc50" loc="101:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2943f9d0" loc="101:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="strlcpy" ref="0x7f1a294ab2c0" loc="67:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294ac950" loc="67:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294acc50" loc="67:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294ab020" loc="67:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="nanf" ref="0x7f1a29423020" loc="160:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="tagp" ref="0x7f1a29424c40" loc="160:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="ynf" ref="0x7f1a294100c0" loc="187:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29412b30" loc="187:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable ref="0x7f1a29412db0" loc="187:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="logb" ref="0x7f1a29454860" loc="62:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294545e0" loc="62:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_afloat" ref="0x7f1a293b3a00" loc="571:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a293b1cc0" loc="571:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_MAKE_GREEN_LED_OUTPUT" ref="0x7f1a2938a570" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="__nesc_hton_int64" ref="0x7f1a299167c0" loc="426:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long long" size="I:8" alignment="I:2">
          <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="long long" size="I:8" alignment="I:2">
            <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29917c70" loc="426:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a29916020" loc="426:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="long long" size="I:8" alignment="I:2">
            <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bf_decode8" ref="0x7f1a29a2d8c0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a29a2fa60" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29a2fd60" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29a2d110" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="strupr" ref="0x7f1a294b3020" loc="60:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294b5cb0" loc="60:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="tolower" ref="0x7f1a293fda30" loc="89:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293e16a0" loc="89:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_int32" ref="0x7f1a29957890" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2">
          <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299586f0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299589f0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29958d40" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a299570d0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="strlen" ref="0x7f1a294bf020" loc="50:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294c0c40" loc="50:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="gamma_r" ref="0x7f1a29442660" loc="97:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29442110" loc="97:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a294423d0" loc="97:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_uint64" ref="0x7f1a295105b0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29511780" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29511a80" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29511dd0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="rint" ref="0x7f1a29449960" loc="84:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294496e0" loc="84:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="strncat" ref="0x7f1a294bd8c0" loc="52:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294bd020" loc="52:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294bd320" loc="52:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294bd5e0" loc="52:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bf_decode16" ref="0x7f1a299d31d0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a299d43a0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299d46a0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299d49f0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="atanf" ref="0x7f1a29437990" loc="125:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29437710" loc="125:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="dremf" ref="0x7f1a2940c970" loc="195:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2940c460" loc="195:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2940c6e0" loc="195:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="toupper" ref="0x7f1a293fd0b0" loc="87:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293e4e50" loc="87:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_leuint16" ref="0x7f1a299e2260" loc="327:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299e3720" loc="327:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a299e3a80" loc="327:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="remainderf" ref="0x7f1a29418b30" loc="178:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29418620" loc="178:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a294188a0" loc="178:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_uint16" ref="0x7f1a299ed920" loc="310:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299ed190" loc="310:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="remainder" ref="0x7f1a294432b0" loc="95:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29444cd0" loc="95:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29443020" loc="95:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="jnf" ref="0x7f1a2940fd60" loc="190:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2940f850" loc="190:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable ref="0x7f1a2940fad0" loc="190:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="toascii" ref="0x7f1a293fc420" loc="91:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293df020" loc="91:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="tanhf" ref="0x7f1a29434ba0" loc="129:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29434920" loc="129:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="ecombine" ref="0x7f1a293d4a00" loc="75:/home/hakan/github/pillforge/tinyos/tos/types/TinyError.h">
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="r1" ref="0x7f1a293cf320" loc="75:/home/hakan/github/pillforge/tinyos/tos/types/TinyError.h">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
        </variable>
        <variable name="r2" ref="0x7f1a293cf650" loc="75:/home/hakan/github/pillforge/tinyos/tos/types/TinyError.h">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
            <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
          </type-tag>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_leint64" ref="0x7f1a294ec1a0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long long" size="I:8" alignment="I:2">
          <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a294ed370" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a294ed670" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a294ed9c0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="tanh" ref="0x7f1a29460410" loc="40:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29460190" loc="40:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_MAKE_GREEN_LED_INPUT" ref="0x7f1a29388600" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function name="gamma" ref="0x7f1a29443b00" loc="96:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29443880" loc="96:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="lgamma" ref="0x7f1a29440020" loc="98:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29442c30" loc="98:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="memccpy" ref="0x7f1a294cdd40" loc="39:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294cd210" loc="39:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294cd510" loc="39:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294cd790" loc="39:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable ref="0x7f1a294cda50" loc="39:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_uint8" ref="0x7f1a29a45c50" loc="281:/usr/local/lib/ncc/nesc_nx.h">
      <documentation loc="52:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/msp430libc.h">
        <short> Defined to non-zero iff mathsf functions should conform to IEEE754&#10; error handling.</short>
        <long> Defined to non-zero iff mathsf functions should conform to IEEE754&#10; error handling.  Exceptions:&#10;&#10; + NaNs are not signaled.  If a NaN is passed into the multiply&#10;   function the same NaN will be returned.&#10;&#10; + In some cases denormalized results are rounded up twice,&#10;   resulting in a number 1 bit higher than defined by the standards.&#10;</long>
      </documentation>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29a454c0" loc="281:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_atomic_end" ref="0x7f1a293ba920" loc="556:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="reenable_interrupts" ref="0x7f1a293b5020" loc="556:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="__nesc_atomic_t" ref="0x7f1a293bc410"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="sig_TIMER1_A1_VECTOR" ref="0x7f1a2855dac0" loc="38:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="TOSH_SEL_RED_LED_IOFUNC" ref="0x7f1a293960a0" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="__nesc_bfle_encode16" ref="0x7f1a299a9c80" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a299acb20" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299ace20" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299a9190" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="x" ref="0x7f1a299a94c0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="matherr" ref="0x7f1a2940abb0" loc="226:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:18" alignment="I:2"><struct-ref name="exception" ref="0x7f1a2940b410"/></type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="e" ref="0x7f1a2940a930" loc="226:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:18" alignment="I:2"><struct-ref name="exception" ref="0x7f1a2940b410"/></type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="atan2f" ref="0x7f1a2942c120" loc="140:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2942eb90" loc="140:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2942ee10" loc="140:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="rand" ref="0x7f1a29487680" loc="107:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_uint16" ref="0x7f1a299e97c0" loc="315:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299eac00" loc="315:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a299e9020" loc="315:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_leuint32" ref="0x7f1a29984b20" loc="363:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29984020" loc="363:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a29984380" loc="363:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="ispunct" ref="0x7f1a293fe6e0" loc="82:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293e7cb0" loc="82:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_uint32" ref="0x7f1a299910a0" loc="340:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29992880" loc="340:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="y0f" ref="0x7f1a29413d20" loc="185:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29413aa0" loc="185:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="erff" ref="0x7f1a29414c30" loc="183:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294149b0" loc="183:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="cos" ref="0x7f1a29462ad0" loc="37:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29462850" loc="37:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_leuint16" ref="0x7f1a299e6410" loc="322:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299e7c60" loc="322:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="isprint" ref="0x7f1a294019c0" loc="73:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293ec2c0" loc="73:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="sin" ref="0x7f1a29461350" loc="38:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294610d0" loc="38:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="fabs" ref="0x7f1a2945dc50" loc="44:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2945d9d0" loc="44:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_MAKE_YELLOW_LED_INPUT" ref="0x7f1a290f4db0" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="__nesc_bfle_encode8" ref="0x7f1a29a04820" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a29a05690" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29a05990" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29a05ce0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="x" ref="0x7f1a29a04060" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="islower" ref="0x7f1a29401040" loc="71:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293eed20" loc="71:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bfle_decode64" ref="0x7f1a29505e60" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a29505060" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29505360" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a295056b0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_leint8" ref="0x7f1a29a305a0" loc="303:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29a31a80" loc="303:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a29a31dc0" loc="303:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_leint16" ref="0x7f1a29995be0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2">
          <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29996a00" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29996d00" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299950d0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a29995420" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="sig_USCI_A1_VECTOR" ref="0x7f1a286a64f0" loc="17:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA1P.nc">
      <component-ref qname="HplMsp430UsciInterruptsA1P"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="cosh" ref="0x7f1a294582a0" loc="56:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29458020" loc="56:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_CLR_YELLOW_LED_PIN" ref="0x7f1a290fe9d0" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="sig_PORT1_VECTOR" ref="0x7f1a278f0700" loc="66:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_leint8" ref="0x7f1a29a321a0" loc="303:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29a34950" loc="303:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="sig_TIMER0_A1_VECTOR" ref="0x7f1a28564330" loc="28:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_leuint64" ref="0x7f1a294f0e60" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a294f0060" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a294f0360" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a294f06b0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_uint32" ref="0x7f1a2998d990" loc="347:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a2998ee40" loc="347:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a2998d1f0" loc="347:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="sinh" ref="0x7f1a29458ae0" loc="57:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29458860" loc="57:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="acoshf" ref="0x7f1a2941a6e0" loc="176:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2941a460" loc="176:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="erfcf" ref="0x7f1a294134f0" loc="184:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29413270" loc="184:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="pow" ref="0x7f1a29452360" loc="63:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29454e10" loc="63:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a294520d0" loc="63:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="atol" ref="0x7f1a29492c20" loc="91:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="p" ref="0x7f1a294929a0" loc="91:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_int8" ref="0x7f1a29a15020" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29a170d0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29a173d0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29a17720" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_leuint32" ref="0x7f1a299881a0" loc="356:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299899e0" loc="356:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_MAKE_RED_LED_OUTPUT" ref="0x7f1a2939fe30" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="__nesc_ntohbf_int16" ref="0x7f1a299bc350" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2">
          <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299bd500" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299bd800" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299bdb50" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="atanhf" ref="0x7f1a29418020" loc="177:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2941acb0" loc="177:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_leuint8" ref="0x7f1a299f3cf0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299f4b50" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299f4e50" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299f31e0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a299f3530" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="sig_USCI_B1_VECTOR" ref="0x7f1a280ac4f0" loc="17:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB1P.nc">
      <component-ref qname="HplMsp430UsciInterruptsB1P"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_leint32" ref="0x7f1a29936b70" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2">
          <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299379c0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29937cc0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29936060" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a299363b0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_SEL_GREEN_LED_MODFUNC" ref="0x7f1a29105760" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="TOSH_READ_YELLOW_LED_PIN" ref="0x7f1a290f9cc0" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </type-function>
    </function>
    <function safe="" name="TOSH_SEL_YELLOW_LED_IOFUNC" ref="0x7f1a290ee0a0" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="sig_TIMER0_B1_VECTOR" ref="0x7f1a28561700" loc="33:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="strcmp" ref="0x7f1a294c3c10" loc="47:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294c3680" loc="47:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294c3980" loc="47:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bfle_decode8" ref="0x7f1a29a0d350" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a29a0e530" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29a0e830" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29a0eb80" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="acosh" ref="0x7f1a29445e50" loc="93:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29445bd0" loc="93:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_READ_GREEN_LED_PIN" ref="0x7f1a2938d4e0" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </type-function>
    </function>
    <function name="floor" ref="0x7f1a2945c4f0" loc="45:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2945c270" loc="45:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_int32" ref="0x7f1a2995d900" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2">
          <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a2995eab0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2995edb0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2995d150" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_SEL_RED_LED_MODFUNC" ref="0x7f1a29399020" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function name="__builtin_frame_address" ref="0x7f1a29374680" loc="100:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="level" ref="0x7f1a293743c0" loc="100:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="strtoul" ref="0x7f1a29493a30" loc="88:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29493210" loc="88:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a29493510" loc="88:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a29493790" loc="88:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="__read_stack_pointer" ref="0x7f1a29379a00" loc="79:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="ultoa" ref="0x7f1a2948d920" loc="95:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="num" ref="0x7f1a2948d020" loc="95:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
        </variable>
        <variable name="str" ref="0x7f1a2948d340" loc="95:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable name="radix" ref="0x7f1a2948d640" loc="95:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="fmodf" ref="0x7f1a29426e70" loc="150:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29426960" loc="150:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29426be0" loc="150:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="strtok_r" ref="0x7f1a294a6b20" loc="70:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="s" ref="0x7f1a294a6150" loc="70:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable name="delim" ref="0x7f1a294a64d0" loc="70:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="last" ref="0x7f1a294a6840" loc="70:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_int64" ref="0x7f1a29507890" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long long" size="I:8" alignment="I:2">
          <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="long long" size="I:8" alignment="I:2">
            <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a295086f0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a295089f0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29508d40" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a295070d0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="long long" size="I:8" alignment="I:2">
            <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="nan" ref="0x7f1a294506d0" loc="74:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="tagp" ref="0x7f1a29450450" loc="74:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="strnlen" ref="0x7f1a294b8570" loc="56:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294b8020" loc="56:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294b82e0" loc="56:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="cosf" ref="0x7f1a294362a0" loc="126:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29436020" loc="126:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="div" ref="0x7f1a2949d690" loc="64:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1a2949e5e0"/>
          <typename><typedef-ref name="div_t" ref="0x7f1a2949ea00"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="numerator" ref="0x7f1a2949d0d0" loc="64:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="denominator" ref="0x7f1a2949d400" loc="64:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="set_stuff" ref="0x7f1a27f928f0" loc="139:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/clock/PlatformClockP.nc">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="__nesc_hton_leint16" ref="0x7f1a299d7dd0" loc="334:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2">
          <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299d72e0" loc="334:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a299d7630" loc="334:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="memcmp" ref="0x7f1a294caab0" loc="41:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294ca250" loc="41:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294ca550" loc="41:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294ca810" loc="41:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="utoa" ref="0x7f1a2948fa30" loc="93:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="num" ref="0x7f1a2948f130" loc="93:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="str" ref="0x7f1a2948f450" loc="93:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable name="radix" ref="0x7f1a2948f750" loc="93:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="lgammaf_r" ref="0x7f1a294143f0" loc="182:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29416e70" loc="182:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29414160" loc="182:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="asinh" ref="0x7f1a2944cd40" loc="81:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2944cac0" loc="81:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="significand" ref="0x7f1a2945cd70" loc="46:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2945caf0" loc="46:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__write_stack_pointer" ref="0x7f1a293783d0" loc="82:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="sp" ref="0x7f1a29378150" loc="82:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="hypotf" ref="0x7f1a2940e890" loc="192:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2940e380" loc="192:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2940e600" loc="192:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="itoa" ref="0x7f1a29491b30" loc="92:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="num" ref="0x7f1a29491230" loc="92:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="str" ref="0x7f1a29491550" loc="92:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable name="radix" ref="0x7f1a29491850" loc="92:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bf_encode8" ref="0x7f1a29a241a0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a29a25020" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29a25320" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29a25670" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="x" ref="0x7f1a29a25990" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="bcopy" ref="0x7f1a294b1b10" loc="63:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294b12f0" loc="63:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294b15b0" loc="63:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294b1870" loc="63:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="nextafterf" ref="0x7f1a2941e9a0" loc="169:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2941e490" loc="169:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2941e710" loc="169:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="tanf" ref="0x7f1a29434350" loc="128:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294340d0" loc="128:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="y1" ref="0x7f1a2943dd20" loc="103:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2943daa0" loc="103:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="strcasecmp" ref="0x7f1a294c05b0" loc="49:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294c0020" loc="49:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294c0320" loc="49:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="tan" ref="0x7f1a29461b80" loc="39:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29461900" loc="39:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_leuint8" ref="0x7f1a29a3b0e0" loc="297:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29a3c5a0" loc="297:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a29a3c8f0" loc="297:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="sqrt" ref="0x7f1a29452ba0" loc="64:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29452920" loc="64:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__bic_status_register" ref="0x7f1a29378d50" loc="85:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="bits" ref="0x7f1a29378ad0" loc="85:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="log1p" ref="0x7f1a29448d80" loc="88:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29448b00" loc="88:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="j1" ref="0x7f1a2943b8e0" loc="106:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2943b660" loc="106:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_leint32" ref="0x7f1a29977460" loc="372:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2">
          <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29978930" loc="372:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a29978c80" loc="372:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="rand_r" ref="0x7f1a294868f0" loc="109:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="__seed" ref="0x7f1a29486670" loc="109:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="exit" ref="0x7f1a2949e020" loc="56:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294a0700" loc="56:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_TOGGLE_RED_LED_PIN" ref="0x7f1a293a4d30" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function name="iscntrl" ref="0x7f1a29406650" loc="59:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293f9610" loc="59:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="gammaf" ref="0x7f1a29417410" loc="179:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29417190" loc="179:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="y1f" ref="0x7f1a29412580" loc="186:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29412300" loc="186:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="acosf" ref="0x7f1a2942fd40" loc="138:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2942fac0" loc="138:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="main" ref="0x7f1a27f6b410" loc="63:/home/hakan/github/pillforge/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_leuint64" ref="0x7f1a2991f260" loc="413:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29920720" loc="413:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a29920a80" loc="413:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_uint64" ref="0x7f1a299320a0" loc="378:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29933880" loc="378:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="fmod" ref="0x7f1a294516a0" loc="65:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29451190" loc="65:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29451410" loc="65:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__write_status_register" ref="0x7f1a2937a810" loc="69:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="sr" ref="0x7f1a2937a590" loc="69:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="strcpy" ref="0x7f1a294c2880" loc="48:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294c22b0" loc="48:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294c25b0" loc="48:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bf_encode64" ref="0x7f1a29905b10" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a29906880" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29906b80" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29905020" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="x" ref="0x7f1a29905350" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="strlcat" ref="0x7f1a294afa30" loc="64:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294af1d0" loc="64:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294af4d0" loc="64:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294af790" loc="64:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="finitef" ref="0x7f1a29422970" loc="163:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294226f0" loc="163:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_int16" ref="0x7f1a299de0e0" loc="334:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2">
          <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299df910" loc="334:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_SET_GREEN_LED_PIN" ref="0x7f1a293941a0" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="sig_PORT2_VECTOR" ref="0x7f1a2788d020" loc="191:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_int8" ref="0x7f1a29a36dc0" loc="303:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29a362e0" loc="303:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a29a36620" loc="303:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="sinf" ref="0x7f1a29436ae0" loc="127:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29436860" loc="127:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="rintf" ref="0x7f1a2941c2a0" loc="170:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2941c020" loc="170:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="cabs" ref="0x7f1a294385e0" loc="114:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
      </type-function>
    </function>
    <function name="isnanf" ref="0x7f1a29423870" loc="161:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294235f0" loc="161:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="sig_USCI_B0_VECTOR" ref="0x7f1a28150e10" loc="17:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsB0P.nc">
      <component-ref qname="HplMsp430UsciInterruptsB0P"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_uint64" ref="0x7f1a2992b1a0" loc="389:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a2992d660" loc="389:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a2992d9c0" loc="389:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="strpbrk" ref="0x7f1a294a00c0" loc="74:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="s1" ref="0x7f1a294a2a20" loc="74:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="s2" ref="0x7f1a294a2d80" loc="74:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="strspn" ref="0x7f1a294a3610" loc="72:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="s1" ref="0x7f1a294a3020" loc="72:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="s2" ref="0x7f1a294a3380" loc="72:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="sig_TIMER2_A1_VECTOR" ref="0x7f1a28559020" loc="43:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="bzero" ref="0x7f1a294ac2f0" loc="66:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294aed40" loc="66:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294ac060" loc="66:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_leuint64" ref="0x7f1a299250e0" loc="402:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29927910" loc="402:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="__bic_status_register_on_exit" ref="0x7f1a293752a0" loc="92:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="bits" ref="0x7f1a29375020" loc="92:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="j1f" ref="0x7f1a2940f2a0" loc="189:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2940f020" loc="189:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__swap_bytes" ref="0x7f1a29371390" loc="111:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="v" ref="0x7f1a29371110" loc="111:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_leint16" ref="0x7f1a299d9860" loc="334:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2">
          <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299d90d0" loc="334:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="expf" ref="0x7f1a2942bae0" loc="143:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2942b860" loc="143:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_leint64" ref="0x7f1a294e6020" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long long" size="I:8" alignment="I:2">
          <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="long long" size="I:8" alignment="I:2">
            <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a294e8e50" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a294e7190" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a294e74e0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a294e7830" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="long long" size="I:8" alignment="I:2">
            <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_int32" ref="0x7f1a2997f7b0" loc="372:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2">
          <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a2997f020" loc="372:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="finite" ref="0x7f1a2944d110" loc="77:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2944ee40" loc="77:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="sig_TIMER0_A0_VECTOR" ref="0x7f1a285678a0" loc="27:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_bf_decode64" ref="0x7f1a2990e430" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a2990f5f0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2990f8f0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2990fc40" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="lgammaf" ref="0x7f1a29416880" loc="181:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29416600" loc="181:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="memmove" ref="0x7f1a294c78c0" loc="43:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294c7020" loc="43:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294c7320" loc="43:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294c75e0" loc="43:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="strrev" ref="0x7f1a294b7a30" loc="58:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294b7770" loc="58:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="floorf" ref="0x7f1a29430be0" loc="134:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29430960" loc="134:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__eint" ref="0x7f1a2937daf0" loc="55:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="sinhf" ref="0x7f1a2942b2a0" loc="142:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2942b020" loc="142:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="strcat" ref="0x7f1a294c4460" loc="45:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294c6e50" loc="45:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294c4190" loc="45:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="isupper" ref="0x7f1a294026a0" loc="69:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293f07c0" loc="69:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_CLR_RED_LED_PIN" ref="0x7f1a293a6c40" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function name="scalbn" ref="0x7f1a29448530" loc="85:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29448020" loc="85:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a294482a0" loc="85:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="malloc" ref="0x7f1a2948b2e0" loc="97:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="size" ref="0x7f1a2948b020" loc="97:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_atomic_start" ref="0x7f1a293bccf0" loc="542:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="TOSH_SEL_GREEN_LED_IOFUNC" ref="0x7f1a291037a0" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="TOSH_SEL_YELLOW_LED_MODFUNC" ref="0x7f1a290f1020" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function name="coshf" ref="0x7f1a2942c970" loc="141:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2942c6f0" loc="141:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_int64" ref="0x7f1a2950d900" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long long" size="I:8" alignment="I:2">
          <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a2950fab0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2950fdb0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2950d150" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_leuint8" ref="0x7f1a29a3fa50" loc="292:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29a3f2c0" loc="292:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="fabsf" ref="0x7f1a29430390" loc="133:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29430110" loc="133:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="isascii" ref="0x7f1a29404cf0" loc="67:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293f12c0" loc="67:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="strncmp" ref="0x7f1a294bc880" loc="53:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294bc020" loc="53:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294bc320" loc="53:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294bc5e0" loc="53:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_leint32" ref="0x7f1a29979020" loc="372:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2">
          <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a2997a7d0" loc="372:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="exp" ref="0x7f1a29456350" loc="58:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294560d0" loc="58:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="ceil" ref="0x7f1a2945d410" loc="43:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2945d190" loc="43:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="log1pf" ref="0x7f1a2941b600" loc="172:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2941b380" loc="172:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="copysignf" ref="0x7f1a29420530" loc="164:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29420020" loc="164:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a294202a0" loc="164:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bfle_encode64" ref="0x7f1a294fb360" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a294fc1b0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a294fc4b0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a294fc800" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="x" ref="0x7f1a294fcb30" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_afloat" ref="0x7f1a293b3820" loc="577:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a293ad150" loc="577:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a293ad450" loc="577:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__nesc_htonbf_afloat" ref="0x7f1a293b3c50" loc="569:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
    </function>
    <function name="asinf" ref="0x7f1a2942e5c0" loc="139:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2942e340" loc="139:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="asin" ref="0x7f1a2945ae30" loc="54:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2945abb0" loc="54:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="drem" ref="0x7f1a29437120" loc="115:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29438ba0" loc="115:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29438e20" loc="115:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="atan" ref="0x7f1a294622a0" loc="36:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29462020" loc="36:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="logf" ref="0x7f1a2942ae20" loc="145:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2942aba0" loc="145:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="strstr" ref="0x7f1a294b56a0" loc="59:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294b50d0" loc="59:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294b53d0" loc="59:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="copysign" ref="0x7f1a2944dc10" loc="78:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2944d700" loc="78:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2944d980" loc="78:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="cbrt" ref="0x7f1a2944a5c0" loc="82:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2944a340" loc="82:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__builtin_return_address" ref="0x7f1a293730b0" loc="104:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="level" ref="0x7f1a29374db0" loc="104:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="isinf" ref="0x7f1a2944e870" loc="76:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2944e5f0" loc="76:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="isdigit" ref="0x7f1a29405020" loc="61:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293f8e20" loc="61:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bfle_decode32" ref="0x7f1a29954e60" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a29954060" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29954360" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299546b0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="sqrtf" ref="0x7f1a29426390" loc="149:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29426110" loc="149:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="strtok" ref="0x7f1a294a5870" loc="71:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="s" ref="0x7f1a294a5220" loc="71:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable name="delim" ref="0x7f1a294a55a0" loc="71:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_CLR_GREEN_LED_PIN" ref="0x7f1a29392230" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function name="modff" ref="0x7f1a294322b0" loc="131:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-pointer size="I:2" alignment="I:2">
            <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29433cb0" loc="131:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29432020" loc="131:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_uint16" ref="0x7f1a299b9950" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299ba7b0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299baab0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299bae00" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a299b9190" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="_reclaim_reent" ref="0x7f1a29465b20" loc="275:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/sys/reent.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:398" alignment="I:2"><struct-ref name="_reent" ref="0x7f1a29475840"/></type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294658a0" loc="275:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/sys/reent.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:398" alignment="I:2"><struct-ref name="_reent" ref="0x7f1a29475840"/></type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_leint64" ref="0x7f1a299100e0" loc="426:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long long" size="I:8" alignment="I:2">
          <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="long long" size="I:8" alignment="I:2">
            <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299115d0" loc="426:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a29911920" loc="426:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="long long" size="I:8" alignment="I:2">
            <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="isalnum" ref="0x7f1a294059a0" loc="63:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293f53e0" loc="63:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="strncasecmp" ref="0x7f1a294b9880" loc="55:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294b9020" loc="55:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294b9320" loc="55:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294b95e0" loc="55:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_SET_YELLOW_LED_PIN" ref="0x7f1a29101920" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function name="ldexpf" ref="0x7f1a2942a5e0" loc="144:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2942a0d0" loc="144:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2942a350" loc="144:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="nextafter" ref="0x7f1a29449120" loc="83:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2944abb0" loc="83:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2944ae30" loc="83:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="powf" ref="0x7f1a29427af0" loc="148:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294275e0" loc="148:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29427860" loc="148:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__get_interrupt_state" ref="0x7f1a2937ce40" loc="66:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__istate_t" ref="0x7f1a2937c6a0"/></typename>
        </type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="hypot" ref="0x7f1a29438040" loc="111:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2943ab00" loc="111:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2943ad80" loc="111:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="infinityf" ref="0x7f1a29424590" loc="159:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_enable_interrupt" ref="0x7f1a29aeaab0" loc="498:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_leuint16" ref="0x7f1a29997360" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29998190" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29998490" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299987e0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a29998b40" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="expm1f" ref="0x7f1a2941be50" loc="173:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2941bbd0" loc="173:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_int8" ref="0x7f1a29a10e70" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29a12c70" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29a10020" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29a10370" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a29a106b0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_uint32" ref="0x7f1a29959020" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a2995cdf0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2995a110" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2995a460" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a2995a7c0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="__builtin_constant_p" ref="0x7f1a29aeca20"  loc="NONE">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
      </type-function>
    </function>
    <function name="bcmp" ref="0x7f1a294b2030" loc="61:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="b1" ref="0x7f1a294b36c0" loc="61:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="b2" ref="0x7f1a294b3a20" loc="61:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="length" ref="0x7f1a294b3d60" loc="61:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="strncpy" ref="0x7f1a294bb8c0" loc="54:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294bb020" loc="54:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294bb320" loc="54:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294bb5e0" loc="54:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="acos" ref="0x7f1a2945a5f0" loc="53:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2945a370" loc="53:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="srand" ref="0x7f1a29486020" loc="108:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="__seed" ref="0x7f1a29487c90" loc="108:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_uint8" ref="0x7f1a29a13650" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29a144c0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29a147c0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29a14b10" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a29a14e60" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="__bis_status_register" ref="0x7f1a29376750" loc="88:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="bits" ref="0x7f1a293764d0" loc="88:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="asinhf" ref="0x7f1a2941f600" loc="167:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2941f380" loc="167:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__nesc_ntohbf_afloat" ref="0x7f1a293b3e50" loc="569:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </function-parameters>
      </type-function>
    </function>
    <function name="__delay_cycles" ref="0x7f1a29373a30" loc="108:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="delay" ref="0x7f1a293737b0" loc="108:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_SET_RED_LED_PIN" ref="0x7f1a293a8b90" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <documentation loc="590:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
        <short>&#60; Pullup resistor enabled *</short>
      </documentation>
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="TOSH_TOGGLE_YELLOW_LED_PIN" ref="0x7f1a290fcb20" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="__nesc_htonbf_leint8" ref="0x7f1a299ef580" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299f1400" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299f1700" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299f1a50" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a299f1d90" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="isspace" ref="0x7f1a29404370" loc="65:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293f4a20" loc="65:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="__signgam" ref="0x7f1a2940b0e0" loc="202:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </type-pointer>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="__bis_status_register_on_exit" ref="0x7f1a29375c70" loc="96:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="bits" ref="0x7f1a293759f0" loc="96:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_leuint32" ref="0x7f1a299382e0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a29939110" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29939410" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29939760" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a29939ac0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="memset" ref="0x7f1a294c6840" loc="65:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294ae060" loc="65:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294ae2e0" loc="65:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable ref="0x7f1a294ae5a0" loc="65:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="strrchr" ref="0x7f1a294b7160" loc="57:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294b8bd0" loc="57:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294b8e50" loc="57:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_int64" ref="0x7f1a29919330" loc="426:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long long" size="I:8" alignment="I:2">
          <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a2991ab70" loc="426:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="ltoa" ref="0x7f1a2948e960" loc="94:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-int cname="long" size="I:4" alignment="I:2"></type-int>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="num" ref="0x7f1a2948e060" loc="94:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="long" size="I:4" alignment="I:2"></type-int>
        </variable>
        <variable name="str" ref="0x7f1a2948e380" loc="94:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
        <variable name="radix" ref="0x7f1a2948e680" loc="94:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_int16" ref="0x7f1a299dc510" loc="334:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2">
          <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299dd9f0" loc="334:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a299ddd40" loc="334:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="sig_TIMER0_B0_VECTOR" ref="0x7f1a28563cc0" loc="32:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="strsep" ref="0x7f1a294b2c50" loc="62:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294b2680" loc="62:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294b2980" loc="62:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="ilogbf" ref="0x7f1a29420d80" loc="165:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29420b00" loc="165:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="isnan" ref="0x7f1a2944e020" loc="75:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29450ca0" loc="75:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="sig_TIMER2_A0_VECTOR" ref="0x7f1a2855b5e0" loc="42:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="bsearch" ref="0x7f1a294888f0" loc="99:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
          <type-pointer size="I:2" alignment="I:2">
            <type-function size="I:1" alignment="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
              <function-parameters>
                <type-pointer size="I:2" alignment="I:2">
                  <type-qualified const="">
                    <type-void size="I:1" alignment="I:1"></type-void>
                  </type-qualified>
                </type-pointer>
                <type-pointer size="I:2" alignment="I:2">
                  <type-qualified const="">
                    <type-void size="I:1" alignment="I:1"></type-void>
                  </type-qualified>
                </type-pointer>
              </function-parameters>
            </type-function>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2948a210" loc="99:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a2948a510" loc="99:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a2948a7d0" loc="99:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
        <variable ref="0x7f1a2948aa90" loc="99:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
        <variable name="compar" ref="0x7f1a294885f0" loc="99:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-function size="I:1" alignment="I:1">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
              <function-parameters>
                <type-pointer size="I:2" alignment="I:2">
                  <type-qualified const="">
                    <type-void size="I:1" alignment="I:1"></type-void>
                  </type-qualified>
                </type-pointer>
                <type-pointer size="I:2" alignment="I:2">
                  <type-qualified const="">
                    <type-void size="I:1" alignment="I:1"></type-void>
                  </type-qualified>
                </type-pointer>
              </function-parameters>
            </type-function>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_MAKE_RED_LED_INPUT" ref="0x7f1a2939ce80" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="__nesc_ntohbf_uint16" ref="0x7f1a299be020" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299bf1d0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299bf4d0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299bf820" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bfle_decode16" ref="0x7f1a299b37d0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a299b4870" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299b4b70" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299b3020" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="expm1" ref="0x7f1a29445600" loc="89:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29445380" loc="89:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="yn" ref="0x7f1a2943c810" loc="104:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2943c300" loc="104:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable ref="0x7f1a2943c580" loc="104:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="strchr" ref="0x7f1a294c3030" loc="46:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294c4ab0" loc="46:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294c4d30" loc="46:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="jn" ref="0x7f1a2943a530" loc="107:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2943a020" loc="107:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable ref="0x7f1a2943a2a0" loc="107:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="atan2" ref="0x7f1a29459970" loc="55:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29459460" loc="55:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a294596e0" loc="55:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntoh_leint64" ref="0x7f1a29914b40" loc="426:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long long" size="I:8" alignment="I:2">
          <typename><typedef-ref name="int64_t" ref="0x7f1a29a54d20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299143b0" loc="426:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="strdup" ref="0x7f1a294abbd0" loc="68:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294ab910" loc="68:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_hton_int32" ref="0x7f1a2997dbc0" loc="372:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2">
          <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a2997d0d0" loc="372:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="value" ref="0x7f1a2997d420" loc="372:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="ldexp" ref="0x7f1a29456e30" loc="59:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29456920" loc="59:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29456ba0" loc="59:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="ceilf" ref="0x7f1a29432b00" loc="132:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29432880" loc="132:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="memcpy" ref="0x7f1a294c99b0" loc="42:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294c9110" loc="42:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294c9410" loc="42:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294c96d0" loc="42:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="modf" ref="0x7f1a2945eb30" loc="42:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-pointer size="I:2" alignment="I:2">
            <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2945e5e0" loc="42:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2945e8a0" loc="42:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="logbf" ref="0x7f1a29427020" loc="147:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29428c70" loc="147:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="isalpha" ref="0x7f1a29407ca0" loc="57:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293fca90" loc="57:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_leint16" ref="0x7f1a2999bc90" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2">
          <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a2999ce40" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2999b190" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2999b4e0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="log10" ref="0x7f1a29454020" loc="61:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29455c90" loc="61:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_uint32" ref="0x7f1a2995f5b0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29961780" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29961a80" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29961dd0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="scalbnf" ref="0x7f1a2941cd90" loc="171:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2941c880" loc="171:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a2941cb00" loc="171:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="labs" ref="0x7f1a294990f0" loc="81:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="long" size="I:4" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="__x" ref="0x7f1a29497d30" loc="81:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="long" size="I:4" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="free" ref="0x7f1a2948bb70" loc="98:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="p" ref="0x7f1a2948b8f0" loc="98:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bf_encode32" ref="0x7f1a2996cc40" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a2996dac0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2996ddc0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2996c150" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="x" ref="0x7f1a2996c480" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="__get_watchdog_clear_value" ref="0x7f1a29371a30" loc="115:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
      </type-function>
    </function>
    <function name="atoi" ref="0x7f1a29492350" loc="90:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="p" ref="0x7f1a294920d0" loc="90:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="mcombine" ref="0x7f1a293c7d20" loc="480:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="m1" ref="0x7f1a293c4e20" loc="480:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1a293c4020"/></typename>
          </type-int>
        </variable>
        <variable name="m2" ref="0x7f1a293c31e0" loc="480:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1a293c4020"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="erf" ref="0x7f1a2943f410" loc="100:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2943f190" loc="100:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="infinity" ref="0x7f1a29451d90" loc="73:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="atanh" ref="0x7f1a294446e0" loc="94:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29444460" loc="94:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_MAKE_YELLOW_LED_OUTPUT" ref="0x7f1a290f7d50" loc="56:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="__nesc_ntohbf_leuint8" ref="0x7f1a299f8350" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299f9520" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299f9820" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299f9b70" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="abort" ref="0x7f1a29487020" loc="101:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="frexpf" ref="0x7f1a294336e0" loc="130:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29433190" loc="130:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29433450" loc="130:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_leint32" ref="0x7f1a2993cb20" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2">
          <typename><typedef-ref name="int32_t" ref="0x7f1a29a54930"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a2993dba0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2993c020" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2993c370" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="cabsf" ref="0x7f1a2940ee40" loc="194:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
      </type-function>
    </function>
    <function safe="" name="__nesc_disable_interrupt" ref="0x7f1a293c0b40" loc="493:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/msp430hardware.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="log10f" ref="0x7f1a294286a0" loc="146:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29428420" loc="146:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="strcspn" ref="0x7f1a294a2360" loc="73:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="s1" ref="0x7f1a294a3d10" loc="73:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="s2" ref="0x7f1a294a20d0" loc="73:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="strtol" ref="0x7f1a29495b70" loc="87:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:4" alignment="I:2"></type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29495350" loc="87:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a29495650" loc="87:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294958d0" loc="87:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="significandf" ref="0x7f1a2942f4f0" loc="135:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2942f270" loc="135:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="ldiv" ref="0x7f1a2949cda0" loc="71:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:8" alignment="I:2"><struct-ref ref="0x7f1a2949dcd0"/>
          <typename><typedef-ref name="ldiv_t" ref="0x7f1a2949c180"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="long" size="I:4" alignment="I:2"></type-int>
          <type-int cname="long" size="I:4" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="numerator" ref="0x7f1a2949c7e0" loc="71:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="long" size="I:4" alignment="I:2"></type-int>
        </variable>
        <variable name="denominator" ref="0x7f1a2949cb10" loc="71:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="long" size="I:4" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="sig_TIMER1_A0_VECTOR" ref="0x7f1a2855e0e0" loc="37:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="log" ref="0x7f1a294556c0" loc="60:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29455440" loc="60:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="cbrtf" ref="0x7f1a2941fe50" loc="168:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2941fbd0" loc="168:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__dint" ref="0x7f1a2937d460" loc="51:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_leuint16" ref="0x7f1a2999d900" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a2999ead0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2999edd0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2999d150" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="j0f" ref="0x7f1a294108f0" loc="188:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29410670" loc="188:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="lgamma_r" ref="0x7f1a29440b60" loc="99:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29440610" loc="99:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a294408d0" loc="99:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="swab" ref="0x7f1a294a9a70" loc="69:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294a9250" loc="69:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294a9510" loc="69:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294a97d0" loc="69:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="memchr" ref="0x7f1a294cbbe0" loc="40:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294cb3c0" loc="40:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable ref="0x7f1a294cb640" loc="40:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable ref="0x7f1a294cb900" loc="40:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="size_t" ref="0x7f1a29ae5a20"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="frexp" ref="0x7f1a2945e020" loc="41:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294609e0" loc="41:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29460ca0" loc="41:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bf_decode32" ref="0x7f1a299747d0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a29975960" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29975c60" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29974020" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="__watchdog_clear" ref="0x7f1a293709e0" loc="126:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function name="strlwr" ref="0x7f1a294bf8f0" loc="51:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a294bf630" loc="51:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/string.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="gammaf_r" ref="0x7f1a29416020" loc="180:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29417a00" loc="180:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
        <variable ref="0x7f1a29417cc0" loc="180:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_uint8" ref="0x7f1a29a19bd0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a29a1ad80" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a29a190d0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a29a19420" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="isblank" ref="0x7f1a29400370" loc="75:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293eb820" loc="75:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_ntohbf_leint8" ref="0x7f1a299f6640" loc="304:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7f1a29a54110"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a299f77d0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299f7ad0" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299f7e20" loc="304:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_uint64" ref="0x7f1a2950a020" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a2950cdf0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2950b110" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2950b460" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a2950b7c0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="abs" ref="0x7f1a2949a750" loc="76:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="__x" ref="0x7f1a29499740" loc="76:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/stdlib.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="__read_status_register" ref="0x7f1a2937c2b0" loc="58:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="sig_USCI_A0_VECTOR" ref="0x7f1a28222e10" loc="15:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/HplMsp430UsciInterruptsA0P.nc">
      <component-ref qname="HplMsp430UsciInterruptsA0P"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="__set_interrupt_state" ref="0x7f1a293792a0" loc="76:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="__istate_t" ref="0x7f1a2937c6a0"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="sv" ref="0x7f1a29379020" loc="76:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="__istate_t" ref="0x7f1a2937c6a0"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="isxdigit" ref="0x7f1a29400d00" loc="77:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="c" ref="0x7f1a293e9e00" loc="77:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/ctype.h">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_TOGGLE_GREEN_LED_PIN" ref="0x7f1a2938f450" loc="55:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-function>
    </function>
    <function safe="" name="__nesc_ntohbf_leuint32" ref="0x7f1a2993fe60" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
          <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="source" ref="0x7f1a2993f060" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-qualified>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2993f360" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2993f6b0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="ilogb" ref="0x7f1a2944c4f0" loc="79:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2944c270" loc="79:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_leuint64" ref="0x7f1a294ea7e0" loc="427:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
          <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a294eb630" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a294eb930" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a294ebc80" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a294ea020" loc="427:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:2">
            <typename><typedef-ref name="uint64_t" ref="0x7f1a29a53d60"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TOSH_READ_RED_LED_PIN" ref="0x7f1a293a1dd0" loc="54:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware.h">
      <type-function oldstyle="" size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
      </type-function>
    </function>
    <function name="isinff" ref="0x7f1a29422110" loc="162:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a29423e40" loc="162:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="float" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_bfle_encode32" ref="0x7f1a2994a360" loc="373:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a2994c1b0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a2994c4b0" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a2994c800" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="x" ref="0x7f1a2994cb30" loc="373:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="y0" ref="0x7f1a2943d4f0" loc="102:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2943d270" loc="102:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__set_watchdog_clear_value" ref="0x7f1a293703e0" loc="120:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="v" ref="0x7f1a29370160" loc="120:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
      </parameters>
    </function>
    <function name="j0" ref="0x7f1a2943b0b0" loc="105:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
      <type-function size="I:1" alignment="I:1">
        <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        <function-parameters>
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </function-parameters>
      </type-function>
      <parameters>
        <variable ref="0x7f1a2943cdc0" loc="105:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/math.h">
          <type-float cname="double" size="I:4" alignment="I:2"></type-float>
        </variable>
      </parameters>
    </function>
    <function name="__nop" ref="0x7f1a293dad20" loc="47:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/intrinsics.h">
      <documentation loc="86:/usr/bin/../lib/gcc/msp430/4.6.3/../../../../msp430/include/msp430f5529.h">
        <short>**********************************************************&#10; STATUS REGISTER BITS&#10;***********************************************************</short>
      </documentation>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="__nesc_bf_encode16" ref="0x7f1a299ca660" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a299cc4f0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299cc7f0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299ccb40" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="x" ref="0x7f1a299cce70" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="__nesc_htonbf_int16" ref="0x7f1a299b51b0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:2" alignment="I:2">
          <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="target" ref="0x7f1a299b7020" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </variable>
        <variable name="offset" ref="0x7f1a299b7320" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </variable>
        <variable name="length" ref="0x7f1a299b7670" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a299b79c0" loc="335:/usr/local/lib/ncc/nesc_nx.h">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="int16_t" ref="0x7f1a29a54580"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="popTask" ref="0x7f1a290e6020" loc="78:/home/hakan/github/pillforge/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="pushTask" ref="0x7f1a290e0020" loc="102:/home/hakan/github/pillforge/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
        </type-int>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="id" ref="0x7f1a290e1bd0" loc="102:/home/hakan/github/pillforge/tinyos/tos/system/SchedulerBasicP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="isWaiting" ref="0x7f1a290e25f0" loc="97:/home/hakan/github/pillforge/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
        </type-int>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="id" ref="0x7f1a290e2240" loc="97:/home/hakan/github/pillforge/tinyos/tos/system/SchedulerBasicP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="enable" ref="0x7f1a27928800" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="Msp430InterruptC"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="rising" ref="0x7f1a27928470" loc="52:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="nextStreamTransmit" ref="0x7f1a2866dcf0" loc="204:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <documentation loc="196:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
        <short>&#10; Transmit the next character in the outgoing message.</short>
        <long>&#10; Transmit the next character in the outgoing message.&#10;&#10; Assumes the USCI is in UART mode and the owning client has&#10; supplied a transmission buffer using UartStream.  This method is&#10; only invoked by the transmit interrupt handler when TXBUF is&#10; ready to receive a new character.&#10;</long>
      </documentation>
      <component-ref qname="Msp430UsciUartP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="client" ref="0x7f1a2866d960" loc="204:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="isBusy" ref="0x7f1a286797f0" loc="109:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <documentation loc="105:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
        <short>&#10; The UART is busy if it's actively transmitting/receiving, or if&#10; there is an active buffered I/O operation.</short>
      </documentation>
      <component-ref qname="Msp430UsciUartP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
        </type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="unconfigure_" ref="0x7f1a28674820" loc="144:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <documentation loc="133:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
        <short>&#10; Take the USCI out of UART mode.</short>
        <long>&#10; Take the USCI out of UART mode.&#10;&#10; Assumes the USCI is currently in UART mode.  This will busy-wait&#10; until any characters being actively transmitted or received are&#10; out of their shift register.  It disables the interrupts, puts&#10; the USCI into reset, and returns the UART-related pins back to&#10; IO mode.&#10;&#10; The USCI is left in reset mode to avoid power drain per UCS6.&#10;</long>
      </documentation>
      <component-ref qname="Msp430UsciUartP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="configure_" ref="0x7f1a286714a0" loc="168:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <documentation loc="159:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
        <short>&#10; Configure the USCI for UART mode.</short>
        <long>&#10; Configure the USCI for UART mode.&#10;&#10; Invoke the USCI configuration to set up the serial speed, but&#10; leaves USCI in reset mode on completion.  This function then&#10; follows up by setting the UART-related pins to their module role&#10; prior to taking the USCI out of reset mode.  The RX interrupt is&#10; enabled, and TX is disabled..&#10;</long>
      </documentation>
      <component-ref qname="Msp430UsciUartP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_usci_config_t" ref="0x7f1a288be760"/></typename>
              <type-tag size="I:8" alignment="I:2"><struct-ref name="msp430_usci_config_t" ref="0x7f1a288bf4c0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="config" ref="0x7f1a28671110" loc="168:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_usci_config_t" ref="0x7f1a288be760"/></typename>
              <type-tag size="I:8" alignment="I:2"><struct-ref name="msp430_usci_config_t" ref="0x7f1a288bf4c0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="checkIsOwner" ref="0x7f1a286765f0" loc="120:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
      <documentation loc="116:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
        <short>&#10; The given client is the owner if the USCI is in UART mode and&#10; the client is the user stored in the UART arbiter.</short>
        <long>&#10; The given client is the owner if the USCI is in UART mode and&#10; the client is the user stored in the UART arbiter.&#10;</long>
      </documentation>
      <component-ref qname="Msp430UsciUartP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="client" ref="0x7f1a28676260" loc="120:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciUartP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function command="" provided="1" safe="" name="amAddress" ref="0x7f1a28e0f520" loc="106:/home/hakan/github/pillforge/tinyos/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="101:/home/hakan/github/pillforge/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Get the node's default AM address.</short>
        <long>&#10; Get the node's default AM address.&#10; @return address&#10; @deprecated Use ActiveMessageAddress.amAddress() instead&#10;</long>
      </documentation>
      <component-ref qname="ActiveMessageAddressC"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function command="" provided="1" safe="" name="setAmAddress" ref="0x7f1a28e0d020" loc="118:/home/hakan/github/pillforge/tinyos/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="112:/home/hakan/github/pillforge/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Set the node's default AM address.</short>
        <long>&#10; Set the node's default AM address.&#10;&#10; @param a - the address.&#10; @deprecated Use ActiveMessageAddress.setAddress() instead&#10;</long>
      </documentation>
      <component-ref qname="ActiveMessageAddressC"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="a" ref="0x7f1a28e0fc20" loc="56:/home/hakan/github/pillforge/tinyos/tos/system/ActiveMessageAddressC.nc">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1a290b7610"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="TXInterrupts_interrupted" ref="0x7f1a2803e3b0" loc="484:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <documentation loc="478:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
        <short>*************************************************************************</short>
      </documentation>
      <component-ref qname="Msp430UsciI2CP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="iv" ref="0x7f1a2803e020" loc="484:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="unconfigure_" ref="0x7f1a28076db0" loc="185:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="wait_ifg" ref="0x7f1a280643b0" loc="271:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="code" ref="0x7f1a28064020" loc="271:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="configure_" ref="0x7f1a28078460" loc="163:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_usci_config_t" ref="0x7f1a288be760"/></typename>
              <type-tag size="I:8" alignment="I:2"><struct-ref name="msp430_usci_config_t" ref="0x7f1a288bf4c0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="config" ref="0x7f1a280780d0" loc="163:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_usci_config_t" ref="0x7f1a288be760"/></typename>
              <type-tag size="I:8" alignment="I:2"><struct-ref name="msp430_usci_config_t" ref="0x7f1a288bf4c0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="wait_deassert_ctl1" ref="0x7f1a2806aba0" loc="237:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="code" ref="0x7f1a2806a810" loc="237:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="start_check_busy" ref="0x7f1a2806e020" loc="213:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="NACK_interrupt" ref="0x7f1a28031ad0" loc="574:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="RXInterrupts_interrupted" ref="0x7f1a28039c30" loc="520:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
      <component-ref qname="Msp430UsciI2CP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="iv" ref="0x7f1a280398a0" loc="520:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/i2c-sm/Msp430UsciI2CP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="getHeader" ref="0x7f1a27ed0760" loc="127:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="network_header_t" ref="0x7f1a290ae290"/>
            <typename><typedef-ref name="network_header_t" ref="0x7f1a290ae8e0"/></typename>
          </type-tag>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a27ed0370" loc="127:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="fireTimers" ref="0x7f1a282d3020" loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="now" ref="0x7f1a282d4bf0" loc="73:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="updateFromTimer" ref="0x7f1a282d5cf0" loc="100:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="updateFromTimer" scoped="" ref="0x7f1a282d4020"/>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="startTimer" ref="0x7f1a282c3dd0" loc="144:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="num" ref="0x7f1a282c3020" loc="144:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="t0" ref="0x7f1a282c3360" loc="144:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
        <variable name="dt" ref="0x7f1a282c36a0" loc="144:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
        <variable name="isoneshot" ref="0x7f1a282c39f0" loc="144:/home/hakan/github/pillforge/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="grantedTask" ref="0x7f1a27f57190" loc="149:/home/hakan/github/pillforge/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="grantedTask" scoped="" ref="0x7f1a27f57410"/>
      <parameters>
      </parameters>
    </function>
    <function name="getMeta" ref="0x7f1a27bb5410" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-tag size="I:4" alignment="I:2"><struct-ref name="timestamp_metadata_t" ref="0x7f1a29075ab0"/>
            <typename><typedef-ref name="timestamp_metadata_t" ref="0x7f1a29074180"/></typename>
          </type-tag>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a27bb5020" loc="60:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="uwait" ref="0x7f1a28db89e0" loc="74:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="u" ref="0x7f1a28db8650" loc="74:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/PlatformP.nc">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="grantedTask" ref="0x7f1a28723350" loc="190:/home/hakan/github/pillforge/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="grantedTask" scoped="" ref="0x7f1a287235d0"/>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="fired" ref="0x7f1a283043a0" loc="74:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="fired" scoped="" ref="0x7f1a28304700"/>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="start" ref="0x7f1a2830c770" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="t0" ref="0x7f1a2830dcc0" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
        <variable name="dt" ref="0x7f1a2830c060" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1a29a53920"/></typename>
          </type-int>
        </variable>
        <variable name="oneshot" ref="0x7f1a2830c3a0" loc="58:/home/hakan/github/pillforge/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="getHeader" ref="0x7f1a27e96bd0" loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="ieee154_simple_header_t" ref="0x7f1a290a34b0"/>
            <typename><typedef-ref name="ieee154_simple_header_t" ref="0x7f1a290a2610"/></typename>
          </type-tag>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a27e967e0" loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="int2CC" ref="0x7f1a28511db0" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerCapComP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1a285dc5a0"/>
          <typename><typedef-ref name="cc_t" scoped="" ref="0x7f1a28515a40"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="x" ref="0x7f1a28511620" loc="58:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="captureControl" ref="0x7f1a2850b480" loc="72:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerCapComP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="l_cm" ref="0x7f1a2850b0d0" loc="72:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="compareControl" ref="0x7f1a2850fd90" loc="60:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerCapComP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="CC2int" ref="0x7f1a285148a0" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerCapComP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1a285dc5a0"/>
            <typename><typedef-ref name="cc_t" scoped="" ref="0x7f1a28515a40"/></typename>
          </type-tag>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="x" ref="0x7f1a28514110" loc="57:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1a285dc5a0"/>
            <typename><typedef-ref name="cc_t" scoped="" ref="0x7f1a28515a40"/></typename>
          </type-tag>
        </variable>
      </parameters>
    </function>
    <function name="resetRx" ref="0x7f1a27a820e0" loc="594:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="waitForCCA" ref="0x7f1a27a94da0" loc="494:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
        </type-int>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="timeout" ref="0x7f1a27a94a10" loc="494:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="readLengthFromRxBytes" ref="0x7f1a27aa7bc0" loc="412:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="lengthPtr" ref="0x7f1a27aa7810" loc="412:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="enableTransmitGdo" ref="0x7f1a27a553a0" loc="864:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="changeState" ref="0x7f1a27a6e020" loc="713:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="getPacketStatus" ref="0x7f1a27abac20" loc="354:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="pkt_status" ref="0x7f1a27aba890" loc="354:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="getPayload" ref="0x7f1a27ae4100" loc="93:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a27ae6ce0" loc="93:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="writeTxFifo" ref="0x7f1a27aaa020" loc="402:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="data" ref="0x7f1a27aac8c0" loc="402:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="length" ref="0x7f1a27aacc10" loc="402:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="enableReceiveGdo" ref="0x7f1a27ad05b0" loc="1073:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="writeRegister" ref="0x7f1a27ab7730" loc="364:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="reg" ref="0x7f1a27ab7020" loc="364:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="value" ref="0x7f1a27ab7370" loc="364:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="readCrcOkAndLqiFromRxFifo" ref="0x7f1a27a9ace0" loc="471:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="crcOkAndLqiPtr" ref="0x7f1a27a9a930" loc="471:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="setChannel" ref="0x7f1a27a730e0" loc="681:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="isSpiAcquired" ref="0x7f1a27a793a0" loc="638:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
        </type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="burstRead" ref="0x7f1a27acf6c0" loc="391:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="addr" ref="0x7f1a27ab0680" loc="391:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="data" ref="0x7f1a27ab0a00" loc="391:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="length" ref="0x7f1a27ab0d50" loc="391:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="readLengthFromRxFifo" ref="0x7f1a27aa1ce0" loc="443:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="lengthPtr" ref="0x7f1a27aa1950" loc="443:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="strobe" ref="0x7f1a27acd0b0" loc="316:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="reg" ref="0x7f1a27ac29a0" loc="316:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="getHeader" ref="0x7f1a27ae77c0" loc="88:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="cc1101_header_t" ref="0x7f1a290a1e30"/>
            <typename><typedef-ref name="cc1101_header_t" ref="0x7f1a290a0480"/></typename>
          </type-tag>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a27ae73d0" loc="88:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="flushRxFifo" ref="0x7f1a27a90860" loc="504:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="resetRadio" ref="0x7f1a27a884a0" loc="563:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="releaseSpi" ref="0x7f1a27a18800" loc="1417:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="releaseSpi" scoped="" ref="0x7f1a27a18b60"/>
      <parameters>
      </parameters>
    </function>
    <function name="readRxFifo" ref="0x7f1a27aa9c00" loc="406:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="data" ref="0x7f1a27aa94f0" loc="406:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="length" ref="0x7f1a27aa9840" loc="406:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="getMeta" ref="0x7f1a27ae36c0" loc="98:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="cc1101_metadata_t" ref="0x7f1a290a0820"/>
            <typename><typedef-ref name="cc1101_metadata_t" ref="0x7f1a2909e840"/></typename>
          </type-tag>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a27ae32d0" loc="98:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="waitChipRdyn" ref="0x7f1a27a8b8c0" loc="550:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="readPayloadFromRxFifo" ref="0x7f1a27a9d490" loc="453:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="data" ref="0x7f1a27a9ed40" loc="453:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="length" ref="0x7f1a27a9d0d0" loc="453:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="getStatus" ref="0x7f1a27ad1d40" loc="333:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="burstWrite" ref="0x7f1a27ab3e10" loc="381:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="addr" ref="0x7f1a27ab3370" loc="381:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="data" ref="0x7f1a27ab36f0" loc="381:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
        <variable name="length" ref="0x7f1a27ab3a40" loc="381:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="readRssiFromRxFifo" ref="0x7f1a27a9b1a0" loc="463:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="rssiPtr" ref="0x7f1a27a9cd70" loc="463:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
            </type-int>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="readRegister" ref="0x7f1a27ac6d40" loc="299:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="reg" ref="0x7f1a27ac6990" loc="299:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="changeChannel" ref="0x7f1a27a72100" loc="693:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="waitForState" ref="0x7f1a27a96020" loc="482:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref name="cc1101_status" ref="0x7f1a2909c860"/>
          <typename><typedef-ref name="cc1101_status_t" ref="0x7f1a2909bd70"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="st" ref="0x7f1a27a977d0" loc="482:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
        <variable name="timeout" ref="0x7f1a27a97b30" loc="482:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function name="downloadMessage" ref="0x7f1a27a3bad0" loc="1123:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="initRadio" ref="0x7f1a27a7ec90" loc="612:/home/hakan/github/pillforge/tinyos/tos/chips/cc1101/CC1101DriverLayerP.nc">
      <component-ref qname="CC1101DriverLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="isBusy" ref="0x7f1a281f48f0" loc="88:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <documentation loc="85:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
        <short> The SPI is busy if it's actively transmitting/receiving, or if&#10; there is an active buffered I/O operation.</short>
        <long> The SPI is busy if it's actively transmitting/receiving, or if&#10; there is an active buffered I/O operation.&#10;</long>
      </documentation>
      <component-ref qname="Msp430UsciSpiP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1a293dc090"/></typename>
        </type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="signalDone" ref="0x7f1a281f6420" loc="250:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="unconfigure_" ref="0x7f1a281ef7b0" loc="120:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <documentation loc="109:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
        <short> Take the USCI out of SPI mode.</short>
        <long> Take the USCI out of SPI mode.&#10;&#10; Assumes the USCI is currently in SPI mode.  This will busy-wait&#10; until any characters being actively transmitted or received are&#10; out of their shift register.  The USCI is reset (which also&#10; disables interrupts) and returns the SPI-related pins to their&#10; IO function rather than module role.&#10;&#10; The USCI is left in software reset mode to avoid power drain.&#10; Errata UCS6 doesn't apply as UCS6 only hits when in UART mode.&#10;</long>
      </documentation>
      <component-ref qname="Msp430UsciSpiP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="continueOp" ref="0x7f1a281de4a0" loc="210:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="configure_" ref="0x7f1a281ec9c0" loc="143:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <documentation loc="135:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
        <short> Configure the USCI for SPI mode.</short>
        <long> Configure the USCI for SPI mode.&#10;&#10; Invoke the USCI configuration to set up the serial speed, but&#10; leaves USCI in reset mode on completion.  This function then&#10; follows up by setting the SPI-related pins to their module role&#10; prior to taking the USCI out of reset mode.  All interrupts are&#10; left off.&#10;</long>
      </documentation>
      <component-ref qname="Msp430UsciSpiP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_usci_config_t" ref="0x7f1a288be760"/></typename>
              <type-tag size="I:8" alignment="I:2"><struct-ref name="msp430_usci_config_t" ref="0x7f1a288bf4c0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="config" ref="0x7f1a281ec630" loc="143:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_usci_config_t" ref="0x7f1a288be760"/></typename>
              <type-tag size="I:8" alignment="I:2"><struct-ref name="msp430_usci_config_t" ref="0x7f1a288bf4c0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function safe="" name="checkIsOwner" ref="0x7f1a281f2520" loc="98:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <documentation loc="95:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
        <short> The given client is the owner if the USCI is in SPI mode and&#10; the client is the user stored in the SPI arbiter.</short>
        <long> The given client is the owner if the USCI is in SPI mode and&#10; the client is the user stored in the SPI arbiter.&#10;</long>
      </documentation>
      <component-ref qname="Msp430UsciSpiP"/>
      <type-function size="I:1" alignment="I:1">
        <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f1a293d7180"/>
          <typename><typedef-ref name="error_t" ref="0x7f1a293d4b90"/></typename>
        </type-tag>
        <function-parameters>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="client" ref="0x7f1a281f2190" loc="98:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1a29a53160"/></typename>
          </type-int>
        </variable>
      </parameters>
    </function>
    <function safe="" name="signalDone_task" ref="0x7f1a281f6c40" loc="81:/home/hakan/github/pillforge/tinyos/tos/chips/msp430/x5xxx/usci-v2/Msp430UsciSpiP.nc">
      <component-ref qname="Msp430UsciSpiP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="signalDone_task" scoped="" ref="0x7f1a281f5020"/>
      <parameters>
      </parameters>
    </function>
    <function safe="" name="set_alarm" ref="0x7f1a2833f020" loc="107:/home/hakan/github/pillforge/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TransformAlarmC"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="getPayload" ref="0x7f1a27f1a020" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a27f1bab0" loc="56:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="stateDoneTask" ref="0x7f1a27cf2a20" loc="144:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="stateDoneTask" scoped="" ref="0x7f1a27cf2d80"/>
      <parameters>
      </parameters>
    </function>
    <function name="sendTask" ref="0x7f1a27ce7e60" loc="189:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="sendTask" scoped="" ref="0x7f1a27ce61f0"/>
      <parameters>
      </parameters>
    </function>
    <function name="deliverTask" ref="0x7f1a27cc95c0" loc="322:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="deliverTask" scoped="" ref="0x7f1a27cc9920"/>
      <parameters>
      </parameters>
    </function>
    <function name="doit" ref="0x7f1a28eb4770" loc="74:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="send" ref="0x7f1a27d93d70" loc="77:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <documentation loc="72:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
        <short>&#10; We do everything from a single task in order to call SubSend.send &#10; and Send.sendDone only once.</short>
        <long>&#10; We do everything from a single task in order to call SubSend.send &#10; and Send.sendDone only once. This helps inlining the code and&#10; reduces the code size.&#10;</long>
      </documentation>
      <component-ref qname="PacketLinkLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <interface-ref name="send" scoped="" ref="0x7f1a27d92220"/>
      <parameters>
      </parameters>
    </function>
    <function name="getMeta" ref="0x7f1a27d7c290" loc="183:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-tag size="I:4" alignment="I:2"><struct-ref name="link_metadata_t" ref="0x7f1a29072020"/>
            <typename><typedef-ref name="link_metadata_t" ref="0x7f1a29072920"/></typename>
          </type-tag>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a27d7de70" loc="183:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="wait_for_32K" ref="0x7f1a27f891f0" loc="211:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/clock/PlatformClockP.nc">
      <component-ref qname="PlatformClockP"/>
      <type-function size="I:1" alignment="I:1">
        <type-void size="I:1" alignment="I:1"></type-void>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="maj_xt1" ref="0x7f1a27f8c1a0" loc="198:/home/hakan/github/pillforge/tinyos/tos/platforms/exp430/hardware/clock/PlatformClockP.nc">
      <component-ref qname="PlatformClockP"/>
      <type-function size="I:1" alignment="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1a29a53520"/></typename>
        </type-int>
        <function-parameters>
        </function-parameters>
      </type-function>
      <parameters>
      </parameters>
    </function>
    <function name="getMeta" ref="0x7f1a27b6d600" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-tag size="I:1" alignment="I:1"><struct-ref name="flags_metadata_t" ref="0x7f1a290a1450"/>
            <typename><typedef-ref name="flags_metadata_t" ref="0x7f1a290a1a80"/></typename>
          </type-tag>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a27b6d210" loc="54:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="getPayload" ref="0x7f1a28e7c970" loc="72:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a28e7c580" loc="72:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
    <function name="getHeader" ref="0x7f1a28e82020" loc="67:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-function size="I:1" alignment="I:1">
        <type-pointer size="I:2" alignment="I:2">
          <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="activemessage_header_t" ref="0x7f1a290a2a00"/>
            <typename><typedef-ref name="activemessage_header_t" ref="0x7f1a290a1090"/></typename>
          </type-tag>
        </type-pointer>
        <function-parameters>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </function-parameters>
      </type-function>
      <parameters>
        <variable name="msg" ref="0x7f1a28e83bb0" loc="67:/home/hakan/github/pillforge/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1a29061180"/>
              <typename><typedef-ref name="message_t" ref="0x7f1a2905f7f0"/></typename>
            </type-tag>
          </type-pointer>
        </variable>
      </parameters>
    </function>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
