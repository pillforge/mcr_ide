{
  "bases": {},
  "root": {
    "path": "",
    "guid": "d86cca82-cb66-818a-9d41-7b91e991244c"
  },
  "relids": {
    "02161d4d-a5a9-6cad-2de9-8e042a59af50": "537076365",
    "098c8bf6-6a54-ce99-b8fe-29fa9851a45a": "843688129",
    "09e938e4-ccb2-b022-32ec-99dd98f8b4e4": "503760399",
    "12e9f149-a891-56af-4792-c49549b6a649": "1054006315",
    "1f4417ec-d802-6370-958d-ebf170b25965": "322147883",
    "32063746-f1d7-c396-50fc-ea17f6293c04": "314100073",
    "40ef5257-3d3f-a1b9-2457-93e0d43f95c0": "158476732",
    "6d32d55e-806e-7df7-cd77-f5c9cae4c996": "1830986367",
    "79c267bc-1c47-ad0c-aaef-fc4da61c4d71": "757136728",
    "89a3cbc1-78cb-a148-1e2b-e4d9b38a2041": "1772737096",
    "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76": "343840023",
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": "1",
    "d86cca82-cb66-818a-9d41-7b91e991244c": null,
    "e106743e-248c-1c23-b318-8c0decdbcea1": "137088271",
    "e506305e-bb66-7722-b02a-4ed27ab3c099": "1556085502",
    "f52de844-a8ab-7b60-71a7-a1b38c2efc40": "84442187"
  },
  "containment": {
    "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76": {
      "02161d4d-a5a9-6cad-2de9-8e042a59af50": {},
      "098c8bf6-6a54-ce99-b8fe-29fa9851a45a": {},
      "09e938e4-ccb2-b022-32ec-99dd98f8b4e4": {},
      "12e9f149-a891-56af-4792-c49549b6a649": {},
      "1f4417ec-d802-6370-958d-ebf170b25965": {},
      "32063746-f1d7-c396-50fc-ea17f6293c04": {},
      "40ef5257-3d3f-a1b9-2457-93e0d43f95c0": {},
      "6d32d55e-806e-7df7-cd77-f5c9cae4c996": {},
      "79c267bc-1c47-ad0c-aaef-fc4da61c4d71": {},
      "89a3cbc1-78cb-a148-1e2b-e4d9b38a2041": {},
      "e106743e-248c-1c23-b318-8c0decdbcea1": {},
      "e506305e-bb66-7722-b02a-4ed27ab3c099": {},
      "f52de844-a8ab-7b60-71a7-a1b38c2efc40": {}
    },
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": {}
  },
  "nodes": {
    "02161d4d-a5a9-6cad-2de9-8e042a59af50": {
      "attributes": {
        "name": "folder"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "children": {
          "items": [
            "02161d4d-a5a9-6cad-2de9-8e042a59af50",
            "40ef5257-3d3f-a1b9-2457-93e0d43f95c0",
            "e106743e-248c-1c23-b318-8c0decdbcea1"
          ],
          "minItems": [
            -1,
            -1,
            -1
          ],
          "maxItems": [
            -1,
            -1,
            -1
          ]
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "SVGIcon": "Folder2.svg",
        "decorator": "SVGDecorator",
        "position": {
          "x": 86,
          "y": 96
        }
      },
      "sets": {},
      "constraints": {}
    },
    "098c8bf6-6a54-ce99-b8fe-29fa9851a45a": {
      "attributes": {
        "name": "command"
      },
      "base": "e506305e-bb66-7722-b02a-4ed27ab3c099",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "return-type": {
            "type": "string",
            "default": ""
          },
          "async": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "e506305e-bb66-7722-b02a-4ed27ab3c099"
      },
      "registry": {
        "PortSVGIcon": "BluePort.svg",
        "color": "#3399ff",
        "isAbstract": false,
        "position": {
          "x": 612,
          "y": 333
        }
      },
      "sets": {},
      "constraints": {}
    },
    "09e938e4-ccb2-b022-32ec-99dd98f8b4e4": {
      "attributes": {
        "name": "uses"
      },
      "base": "40ef5257-3d3f-a1b9-2457-93e0d43f95c0",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "type-arguments": {
            "type": "string",
            "default": ""
          },
          "implementation": {
            "type": "string",
            "default": ""
          }
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "40ef5257-3d3f-a1b9-2457-93e0d43f95c0"
      },
      "registry": {
        "color": "#ffcccc",
        "isAbstract": false,
        "position": {
          "x": 141,
          "y": 664
        }
      },
      "sets": {},
      "constraints": {}
    },
    "12e9f149-a891-56af-4792-c49549b6a649": {
      "attributes": {
        "implementation": "",
        "name": "provides"
      },
      "base": "40ef5257-3d3f-a1b9-2457-93e0d43f95c0",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "type-arguments": {
            "type": "string",
            "default": ""
          },
          "implementation": {
            "type": "string",
            "default": ""
          }
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "40ef5257-3d3f-a1b9-2457-93e0d43f95c0"
      },
      "registry": {
        "color": "#ccffcc",
        "isAbstract": false,
        "position": {
          "x": 139,
          "y": 724
        }
      },
      "sets": {},
      "constraints": {}
    },
    "1f4417ec-d802-6370-958d-ebf170b25965": {
      "attributes": {
        "name": "configuration"
      },
      "base": "6d32d55e-806e-7df7-cd77-f5c9cae4c996",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "translation-unit": {
            "type": "string",
            "default": ""
          }
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "6d32d55e-806e-7df7-cd77-f5c9cae4c996"
      },
      "registry": {
        "SVGIcon": "Network.svg",
        "color": "#ccffff",
        "isAbstract": false,
        "position": {
          "x": 225,
          "y": 390
        }
      },
      "sets": {},
      "constraints": {}
    },
    "32063746-f1d7-c396-50fc-ea17f6293c04": {
      "attributes": {
        "name": "interface-definition"
      },
      "base": "e106743e-248c-1c23-b318-8c0decdbcea1",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "translation-unit": {
            "type": "string",
            "default": ""
          }
        },
        "children": {
          "items": [
            "e506305e-bb66-7722-b02a-4ed27ab3c099"
          ],
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ]
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "e106743e-248c-1c23-b318-8c0decdbcea1"
      },
      "registry": {
        "SVGIcon": "Chain.svg",
        "color": "#ffffcc",
        "isAbstract": false,
        "position": {
          "x": 142,
          "y": 258
        }
      },
      "sets": {},
      "constraints": {}
    },
    "40ef5257-3d3f-a1b9-2457-93e0d43f95c0": {
      "attributes": {
        "implementation": "",
        "name": "uses-provides",
        "type-arguments": ""
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "type-arguments": {
            "type": "string",
            "default": ""
          },
          "implementation": {
            "type": "string",
            "default": ""
          }
        },
        "pointers": {
          "interface": {
            "items": [
              "32063746-f1d7-c396-50fc-ea17f6293c04"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          }
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
        "interface": null
      },
      "registry": {
        "decorator": "TosDecorator",
        "isAbstract": true,
        "position": {
          "x": 72,
          "y": 603
        }
      },
      "sets": {},
      "constraints": {}
    },
    "6d32d55e-806e-7df7-cd77-f5c9cae4c996": {
      "attributes": {
        "name": "component"
      },
      "base": "e106743e-248c-1c23-b318-8c0decdbcea1",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "translation-unit": {
            "type": "string",
            "default": ""
          }
        },
        "children": {
          "items": [
            "40ef5257-3d3f-a1b9-2457-93e0d43f95c0"
          ],
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ]
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "e106743e-248c-1c23-b318-8c0decdbcea1"
      },
      "registry": {
        "isAbstract": true,
        "position": {
          "x": 139,
          "y": 339
        }
      },
      "sets": {},
      "constraints": {}
    },
    "79c267bc-1c47-ad0c-aaef-fc4da61c4d71": {
      "attributes": {
        "implementation": "",
        "name": "module"
      },
      "base": "6d32d55e-806e-7df7-cd77-f5c9cae4c996",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "translation-unit": {
            "type": "string",
            "default": ""
          },
          "implementation": {
            "type": "string",
            "default": ""
          }
        },
        "children": {
          "items": [
            "f52de844-a8ab-7b60-71a7-a1b38c2efc40"
          ],
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ]
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "6d32d55e-806e-7df7-cd77-f5c9cae4c996"
      },
      "registry": {
        "SVGIcon": "Rotate.svg",
        "color": "#ffe6cc",
        "isAbstract": false,
        "position": {
          "x": 225,
          "y": 460
        }
      },
      "sets": {},
      "constraints": {}
    },
    "89a3cbc1-78cb-a148-1e2b-e4d9b38a2041": {
      "attributes": {
        "name": "event"
      },
      "base": "e506305e-bb66-7722-b02a-4ed27ab3c099",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "return-type": {
            "type": "string",
            "default": ""
          },
          "async": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "e506305e-bb66-7722-b02a-4ed27ab3c099"
      },
      "registry": {
        "PortSVGIcon": "RedPort.svg",
        "color": "#ff3333",
        "isAbstract": false,
        "position": {
          "x": 606,
          "y": 261
        }
      },
      "sets": {},
      "constraints": {}
    },
    "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76": {
      "attributes": {
        "name": "Language"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "children": {
          "items": [
            "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
          ],
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ]
        }
      },
      "parent": "d86cca82-cb66-818a-9d41-7b91e991244c",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": true,
        "position": {
          "x": 99,
          "y": 154
        },
        "validPanels": "ModelEditor METAAspect SetEditor Crosscut GraphViz"
      },
      "sets": {},
      "constraints": {}
    },
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": {
      "attributes": {
        "name": "FCO"
      },
      "base": null,
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "children": {
          "minItems": [],
          "maxItems": [],
          "items": []
        }
      },
      "parent": "d86cca82-cb66-818a-9d41-7b91e991244c",
      "pointers": {
        "base": null
      },
      "registry": {
        "DisplayFormat": "$name",
        "PortSVGIcon": "",
        "SVGIcon": "",
        "decorator": "",
        "isAbstract": false,
        "isPort": false,
        "position": {
          "x": 100,
          "y": 100
        },
        "validPanels": "ModelEditor METAAspect SetEditor Crosscut GraphViz"
      },
      "sets": {},
      "constraints": {
        "meta": {
          "script": "function(core, node, callback) {\n    \"use strict\";\n    var error = null,\n        returnValue = {hasViolation:false,message:\"\"},\n        i,\n        neededChekings = 4,\n        meta = core.getJsonMeta(node),\n        typeIndexOfChild = function(typePathsArray,childNode){\n            var index = -1;\n\n            while(childNode && index === -1){\n                index = typePathsArray.indexOf(core.getPath(childNode));\n                childNode = core.getBase(childNode);\n            }\n\n            return index;\n        },\n        checkChildrenRules = function(){\n            var childCount = [],\n                index;\n            core.loadChildren(node,function(err,children){\n                if(err){\n                    returnValue.message += \"error during loading of node\\'s children\\n\";\n                    error = error || err;\n                    return checkingDone();\n                }\n\n                //global count check\n                //min\n                if(meta.children.min && meta.children.min !== -1){\n                    if(children.length < meta.children.min){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"node hase fewer nodes than needed\\n\";\n                    }\n                }\n                //max\n                if(meta.children.max && meta.children.max !== -1){\n                    if(children.length > meta.children.max){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"node hase more nodes than allowed\\n\";\n                    }\n                }\n\n                //typedCounts\n                for(i=0;i<meta.children.items.length;i++){\n                    childCount.push(0);\n                }\n                for(i=0;i<children.length;i++){\n                    index = typeIndexOfChild(meta.children.items,children[i]);\n                    if(index === -1 ){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"child \" + core.getGuid(children[i]) +\" is from prohibited type\\n\";\n                    }\n                    else {\n                        childCount[index]++;\n                    }\n                }\n                for(i=0;i<meta.children.items.length;i++){\n                    //min\n                    if(meta.children.minItems[i] !== -1){\n                        if(meta.children.minItems[i] > childCount[i]){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"too few type \"+ meta.children.items[i] +\" children\\n\";\n                        }\n                    }\n                    //max\n                    if(meta.children.maxItems[i] !== -1){\n                        if(meta.children.maxItems[i] < childCount[i]){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"too many type \"+ meta.children.items[i] +\" children\\n\";\n                        }\n                    }\n                }\n                return checkingDone();\n            });\n        },\n        checkPointerRules = function(){\n            //TODO currently there is no quantity check\n            var validNames = core.getValidPointerNames(node),\n                names = core.getPointerNames(node),\n                checkPointer = function(name){\n                    core.loadPointer(node,name,function(err,target){\n                        if(err || !target){\n                            error = error || err;\n                            returnValue.message += \"error during pointer \"+ name +\" load\\n\";\n                            return checkDone();\n                        }\n\n                        if(!core.isValidTargetOf(target,node,name)){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"target of pointer \"+ name +\" is invalid\\n\";\n                        }\n                        return checkDone();\n                    });\n                },\n                checkDone = function(){\n                    if(--needs === 0){\n                        checkingDone();\n                    }\n                },\n                needs,i;\n            \n            needs = names.length;\n            if(needs > 0){\n                for(i=0;i<names.length;i++){\n                    if(validNames.indexOf(names[i]) === -1){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \" invalid pointer \"+ names[i] +\" has been found\\n\";\n                        checkDone();\n                    } else {\n                        checkPointer(names[i]);\n                    }\n\n                }\n            } else {\n                checkDone();\n            }\n\n        },\n        checkSetRules = function(){\n            //TODO this part is missing yet\n            checkingDone();\n        },\n        checkAttributeRules = function(){\n            var names = core.getAttributeNames(node),\n                validNames = core.getValidAttributeNames(node);\n            for(i=0;i<names.length;i++){\n                if(validNames.indexOf(names[i]) !== -1){\n                    if(!core.isValidAttributeValueOf(node,names[i],core.getAttribute(node,names[i]))){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"attribute \"+names[i]+\" has invalid value\\n\";\n                    }\n                }\n                else {\n                    returnValue.hasViolation = true;\n                    returnValue.message += \"node has an undefined attribute: \"+names[i];\n                }\n            }\n            checkingDone();\n        },\n        checkingDone = function(){\n            if(--neededChekings === 0){\n                callback(error,returnValue);\n            }\n        };\n\n    checkChildrenRules();\n    checkPointerRules();\n    checkSetRules();\n    checkAttributeRules();\n}",
          "priority": 10,
          "info": "this constraint will check all the meta rules defined to an object"
        }
      }
    },
    "d86cca82-cb66-818a-9d41-7b91e991244c": {
      "attributes": {
        "name": "ROOT"
      },
      "base": null,
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "children": {
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ],
          "items": [
            "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
          ]
        }
      },
      "parent": null,
      "pointers": {
        "base": null
      },
      "registry": {
        "MetaSheets": [
          {
            "SetID": "MetaAspectSet_0bbc9a31-aa48-055b-5df3-d1e35b6249da",
            "order": 0,
            "title": "META"
          },
          {
            "SetID": "MetaAspectSet_0bb2e638-3f47-d9d8-bc38-6bfe0eec0f1e",
            "order": 1,
            "title": "Language"
          }
        ],
        "ProjectRegistry": {
          "FCO_ID": "/1"
        },
        "usedAddOns": "ConstraintAddOn",
        "validDecorators": "TosDecorator ModelDecoratorExt ModelDecorator SVGDecorator CircleDecorator DefaultDecorator",
        "validPanels": "ModelEditor METAAspect SetEditor Crosscut GraphViz",
        "validPlugins": ""
      },
      "sets": {
        "MetaAspectSet": [
          {
            "attributes": {},
            "guid": "02161d4d-a5a9-6cad-2de9-8e042a59af50",
            "registry": {
              "position": {
                "x": 336,
                "y": 128
              }
            }
          },
          {
            "attributes": {},
            "guid": "098c8bf6-6a54-ce99-b8fe-29fa9851a45a",
            "registry": {
              "position": {
                "x": 944,
                "y": 354
              }
            }
          },
          {
            "attributes": {},
            "guid": "09e938e4-ccb2-b022-32ec-99dd98f8b4e4",
            "registry": {
              "position": {
                "x": 809,
                "y": 335
              }
            }
          },
          {
            "attributes": {},
            "guid": "12e9f149-a891-56af-4792-c49549b6a649",
            "registry": {
              "position": {
                "x": 979,
                "y": 336
              }
            }
          },
          {
            "attributes": {},
            "guid": "1f4417ec-d802-6370-958d-ebf170b25965",
            "registry": {
              "position": {
                "x": 321,
                "y": 481
              }
            }
          },
          {
            "attributes": {},
            "guid": "32063746-f1d7-c396-50fc-ea17f6293c04",
            "registry": {
              "position": {
                "x": 632,
                "y": 501
              }
            }
          },
          {
            "attributes": {},
            "guid": "40ef5257-3d3f-a1b9-2457-93e0d43f95c0",
            "registry": {
              "position": {
                "x": 605,
                "y": 187
              }
            }
          },
          {
            "attributes": {},
            "guid": "6d32d55e-806e-7df7-cd77-f5c9cae4c996",
            "registry": {
              "position": {
                "x": 394,
                "y": 518
              }
            }
          },
          {
            "attributes": {},
            "guid": "79c267bc-1c47-ad0c-aaef-fc4da61c4d71",
            "registry": {
              "position": {
                "x": 516,
                "y": 488
              }
            }
          },
          {
            "attributes": {},
            "guid": "89a3cbc1-78cb-a148-1e2b-e4d9b38a2041",
            "registry": {
              "position": {
                "x": 822,
                "y": 342
              }
            }
          },
          {
            "attributes": {},
            "guid": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
            "registry": {
              "position": {
                "x": 448,
                "y": 280
              }
            }
          },
          {
            "attributes": {},
            "guid": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
            "registry": {
              "position": {
                "x": 100,
                "y": 100
              }
            }
          },
          {
            "attributes": {},
            "guid": "e106743e-248c-1c23-b318-8c0decdbcea1",
            "registry": {
              "position": {
                "x": 531,
                "y": 485
              }
            }
          },
          {
            "attributes": {},
            "guid": "e506305e-bb66-7722-b02a-4ed27ab3c099",
            "registry": {
              "position": {
                "x": 793,
                "y": 186
              }
            }
          },
          {
            "attributes": {},
            "guid": "f52de844-a8ab-7b60-71a7-a1b38c2efc40",
            "registry": {
              "position": {
                "x": 1068,
                "y": 198
              }
            }
          }
        ],
        "MetaAspectSet_0bb2e638-3f47-d9d8-bc38-6bfe0eec0f1e": [
          {
            "attributes": {},
            "guid": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
            "registry": {
              "position": {
                "x": 323,
                "y": 239
              }
            }
          },
          {
            "attributes": {},
            "guid": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
            "registry": {
              "position": {
                "x": 325,
                "y": 96
              }
            }
          }
        ],
        "MetaAspectSet_0bbc9a31-aa48-055b-5df3-d1e35b6249da": [
          {
            "attributes": {},
            "guid": "02161d4d-a5a9-6cad-2de9-8e042a59af50",
            "registry": {
              "position": {
                "x": 351,
                "y": 53
              }
            }
          },
          {
            "attributes": {},
            "guid": "098c8bf6-6a54-ce99-b8fe-29fa9851a45a",
            "registry": {
              "position": {
                "x": 776,
                "y": 349
              }
            }
          },
          {
            "attributes": {},
            "guid": "09e938e4-ccb2-b022-32ec-99dd98f8b4e4",
            "registry": {
              "position": {
                "x": 440,
                "y": 348
              }
            }
          },
          {
            "attributes": {},
            "guid": "12e9f149-a891-56af-4792-c49549b6a649",
            "registry": {
              "position": {
                "x": 546,
                "y": 349
              }
            }
          },
          {
            "attributes": {},
            "guid": "1f4417ec-d802-6370-958d-ebf170b25965",
            "registry": {
              "position": {
                "x": 177,
                "y": 479
              }
            }
          },
          {
            "attributes": {},
            "guid": "32063746-f1d7-c396-50fc-ea17f6293c04",
            "registry": {
              "position": {
                "x": 74,
                "y": 341
              }
            }
          },
          {
            "attributes": {},
            "guid": "40ef5257-3d3f-a1b9-2457-93e0d43f95c0",
            "registry": {
              "position": {
                "x": 474,
                "y": 179
              }
            }
          },
          {
            "attributes": {},
            "guid": "6d32d55e-806e-7df7-cd77-f5c9cae4c996",
            "registry": {
              "position": {
                "x": 294,
                "y": 341
              }
            }
          },
          {
            "attributes": {},
            "guid": "79c267bc-1c47-ad0c-aaef-fc4da61c4d71",
            "registry": {
              "position": {
                "x": 333,
                "y": 472
              }
            }
          },
          {
            "attributes": {},
            "guid": "89a3cbc1-78cb-a148-1e2b-e4d9b38a2041",
            "registry": {
              "position": {
                "x": 656,
                "y": 349
              }
            }
          },
          {
            "attributes": {},
            "guid": "e106743e-248c-1c23-b318-8c0decdbcea1",
            "registry": {
              "position": {
                "x": 164,
                "y": 181
              }
            }
          },
          {
            "attributes": {},
            "guid": "e506305e-bb66-7722-b02a-4ed27ab3c099",
            "registry": {
              "position": {
                "x": 638,
                "y": 179
              }
            }
          },
          {
            "attributes": {},
            "guid": "f52de844-a8ab-7b60-71a7-a1b38c2efc40",
            "registry": {
              "position": {
                "x": 772,
                "y": 181
              }
            }
          }
        ]
      },
      "constraints": {}
    },
    "e106743e-248c-1c23-b318-8c0decdbcea1": {
      "attributes": {
        "name": "nesC-file",
        "translation-unit": ""
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "translation-unit": {
            "type": "string",
            "default": ""
          }
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": true,
        "position": {
          "x": 65,
          "y": 205
        }
      },
      "sets": {},
      "constraints": {}
    },
    "e506305e-bb66-7722-b02a-4ed27ab3c099": {
      "attributes": {
        "async": false,
        "name": "declaration",
        "return-type": ""
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          },
          "return-type": {
            "type": "string",
            "default": ""
          },
          "async": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": true,
        "isPort": true,
        "position": {
          "x": 536,
          "y": 185
        }
      },
      "sets": {},
      "constraints": {}
    },
    "f52de844-a8ab-7b60-71a7-a1b38c2efc40": {
      "attributes": {
        "name": "call"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "pointers": {
          "src": {
            "items": [
              "e506305e-bb66-7722-b02a-4ed27ab3c099"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          },
          "dst": {
            "items": [
              "098c8bf6-6a54-ce99-b8fe-29fa9851a45a"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          }
        }
      },
      "parent": "a8e0d64c-0b1d-ef6b-2508-5b4e99b45c76",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
        "dst": null,
        "src": null
      },
      "registry": {
        "color": "#0000ff",
        "lineEndArrow": "open-xwide-xlong",
        "position": {
          "x": 528,
          "y": 449
        }
      },
      "sets": {},
      "constraints": {}
    }
  },
  "metaSheets": {}
}